~sq_c01_login~sq_ccbx_project
select [01_p01_projects_full].p01_s_name
from 01_p01_projects_full;

----------------------------------------------------------------------------------------------------
~sq_c11_main_menu_old~sq_ccbx_pr2
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_c11_main_menu_old~sq_ccbx_pr3
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_c11_main_menu_old~sq_ccbx_pr4
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_c11_main_menu_old~sq_ccbx_project
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_c99_menu assets~sq_ccbx_project
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_010
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_07] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_06] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_03
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_04
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_05
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_06
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_07
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_06] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_08
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_07] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_06] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_09
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_07] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_06] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_010
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_03
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_04
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_05
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_06
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_07
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_08
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_09
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_010
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_03
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_04
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_05
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_06
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_07
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_08
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_09
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccbo_date_by_project
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccbo_project
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccombo578
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccombo587
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccombo590
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccombo596
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_date_by_project
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_date_compare_cons
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_date_consolidated
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_date_project_based_all
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_project
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccombo554
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccombo555
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement~sq_ccbo_date_by_project
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement~sq_ccbo_date_consolidated
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement~sq_ccbo_date_project_based_all
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement~sq_ccbo_project
select q_budget_project_months.name as r03_s_name, q_budget_project_months.pc as p_code
from q_budget_project_months
group by q_budget_project_months.name, q_budget_project_months.pc;

----------------------------------------------------------------------------------------------------
~sq_cscenario_screen~sq_ccbo_project
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_csystem_development~sq_ccbo_date_report
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_csystem_development~sq_ccbo_finish_date
select t_months.g_month
from t_months;

----------------------------------------------------------------------------------------------------
~sq_csystem_development~sq_ccbo_start_date
select t_months.g_month
from t_months;

----------------------------------------------------------------------------------------------------
~sq_csystem_development~sq_ccmb_budget_code
select q_budget_project_months.pc
from q_budget_project_months
group by q_budget_project_months.pc;

----------------------------------------------------------------------------------------------------
~sq_csystem_development~sq_ccmb_budget_date
select q_budget_project_months.pc, q_budget_project_months.budget_type, q_budget_project_months.rep_month
from q_budget_project_months
group by q_budget_project_months.pc, q_budget_project_months.budget_type, q_budget_project_months.rep_month
having (((q_budget_project_months.pc)=forms!system_development!cmb_budget_code) and ((q_budget_project_months.budget_type)=forms!system_development!cmb_budget_type));

----------------------------------------------------------------------------------------------------
~sq_csystem_development~sq_ccmb_budget_type
select distinctrow *
from [ ];

----------------------------------------------------------------------------------------------------
~sq_csystem_development~sq_ccmb_del_project_code
select t_001_projects.r03_s_name
from t_001_projects
group by t_001_projects.r03_s_name;

----------------------------------------------------------------------------------------------------
~sq_ctech_office~sq_ccmb_project_name
select t_001_projects.r03_s_name
from q_budget_project_months left join t_001_projects on q_budget_project_months.pc = t_001_projects.p_code;

----------------------------------------------------------------------------------------------------
~sq_dreport1~sq_dc_bb_metal
select distinctrow *
from t_ac_indexes_mod;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_allprojects_compare_lvl_4
select q_cb_sum_projects_report_data_lvl_4.pc, q_cb_sum_projects_report_data_lvl_4.l_1, q_cb_sum_projects_report_data_lvl_4.l_2, q_cb_sum_projects_report_data_lvl_4.l_3, q_cb_sum_projects_report_data_lvl_4.l_4, q_cb_sum_projects_report_data_lvl_4.l_5, q_cb_sum_projects_report_data_lvl_4.l_6, q_cb_sum_projects_report_data_lvl_4.up_curr, q_cb_sum_projects_report_data_lvl_4.desc_tr_l3, q_cb_sum_projects_report_data_lvl_4.desc_tr_l6, q_cb_sum_projects_report_data_lvl_4.second_data_gt, q_cb_sum_projects_report_data_lvl_4.second_data_rt, q_cb_sum_projects_report_data_lvl_4.first_data_gt, q_cb_sum_projects_report_data_lvl_4.first_data_rt, q_cb_sum_projects_report_data_lvl_4.second_data_rem, q_cb_sum_projects_report_data_lvl_4.first_data_rem, q_cb_sum_projects_report_data_lvl_4.gt_rem, [first_data_rt]-[second_data_rt] as rt_rem, [first_data_rem]-[second_data_rem] as rem_rem, q_cb_sum_projects_report_data_lvl_4.budget_type, t_001_projects.r03_s_name, q_cb_sum_projects_report_data_lvl_4.desc_tr_l4, q_cb_sum_projects_report_data_lvl_4.desc_tr_l5
from q_cb_sum_projects_report_data_lvl_4 left join t_001_projects on q_cb_sum_projects_report_data_lvl_4.pc = t_001_projects.p_code
group by q_cb_sum_projects_report_data_lvl_4.pc, q_cb_sum_projects_report_data_lvl_4.l_1, q_cb_sum_projects_report_data_lvl_4.l_2, q_cb_sum_projects_report_data_lvl_4.l_3, q_cb_sum_projects_report_data_lvl_4.l_4, q_cb_sum_projects_report_data_lvl_4.l_5, q_cb_sum_projects_report_data_lvl_4.l_6, q_cb_sum_projects_report_data_lvl_4.up_curr, q_cb_sum_projects_report_data_lvl_4.desc_tr_l3, q_cb_sum_projects_report_data_lvl_4.desc_tr_l6, q_cb_sum_projects_report_data_lvl_4.second_data_gt, q_cb_sum_projects_report_data_lvl_4.second_data_rt, q_cb_sum_projects_report_data_lvl_4.first_data_gt, q_cb_sum_projects_report_data_lvl_4.first_data_rt, q_cb_sum_projects_report_data_lvl_4.second_data_rem, q_cb_sum_projects_report_data_lvl_4.first_data_rem, q_cb_sum_projects_report_data_lvl_4.gt_rem, [first_data_rt]-[second_data_rt], [first_data_rem]-[second_data_rem], q_cb_sum_projects_report_data_lvl_4.budget_type, t_001_projects.r03_s_name, q_cb_sum_projects_report_data_lvl_4.desc_tr_l4, q_cb_sum_projects_report_data_lvl_4.desc_tr_l5;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_allprojects_compare_lvl_5
select q_cb_sum_projects_report_data_lvl_5.pc, q_cb_sum_projects_report_data_lvl_5.l_1, q_cb_sum_projects_report_data_lvl_5.l_2, q_cb_sum_projects_report_data_lvl_5.l_3, q_cb_sum_projects_report_data_lvl_5.l_4, q_cb_sum_projects_report_data_lvl_5.l_5, q_cb_sum_projects_report_data_lvl_5.l_6, q_cb_sum_projects_report_data_lvl_5.up_curr, q_cb_sum_projects_report_data_lvl_5.desc_tr_l3, q_cb_sum_projects_report_data_lvl_5.desc_tr_l6, q_cb_sum_projects_report_data_lvl_5.second_data_gt, q_cb_sum_projects_report_data_lvl_5.second_data_rt, q_cb_sum_projects_report_data_lvl_5.first_data_gt, q_cb_sum_projects_report_data_lvl_5.first_data_rt, q_cb_sum_projects_report_data_lvl_5.second_data_rem, q_cb_sum_projects_report_data_lvl_5.first_data_rem, q_cb_sum_projects_report_data_lvl_5.gt_rem, [first_data_rt]-[second_data_rt] as rt_rem, [first_data_rem]-[second_data_rem] as rem_rem, q_cb_sum_projects_report_data_lvl_5.budget_type, t_001_projects.r03_s_name, q_cb_sum_projects_report_data_lvl_5.desc_tr_l4, q_cb_sum_projects_report_data_lvl_5.desc_tr_l5
from q_cb_sum_projects_report_data_lvl_5 left join t_001_projects on q_cb_sum_projects_report_data_lvl_5.pc = t_001_projects.p_code
group by q_cb_sum_projects_report_data_lvl_5.pc, q_cb_sum_projects_report_data_lvl_5.l_1, q_cb_sum_projects_report_data_lvl_5.l_2, q_cb_sum_projects_report_data_lvl_5.l_3, q_cb_sum_projects_report_data_lvl_5.l_4, q_cb_sum_projects_report_data_lvl_5.l_5, q_cb_sum_projects_report_data_lvl_5.l_6, q_cb_sum_projects_report_data_lvl_5.up_curr, q_cb_sum_projects_report_data_lvl_5.desc_tr_l3, q_cb_sum_projects_report_data_lvl_5.desc_tr_l6, q_cb_sum_projects_report_data_lvl_5.second_data_gt, q_cb_sum_projects_report_data_lvl_5.second_data_rt, q_cb_sum_projects_report_data_lvl_5.first_data_gt, q_cb_sum_projects_report_data_lvl_5.first_data_rt, q_cb_sum_projects_report_data_lvl_5.second_data_rem, q_cb_sum_projects_report_data_lvl_5.first_data_rem, q_cb_sum_projects_report_data_lvl_5.gt_rem, [first_data_rt]-[second_data_rt], [first_data_rem]-[second_data_rem], q_cb_sum_projects_report_data_lvl_5.budget_type, t_001_projects.r03_s_name, q_cb_sum_projects_report_data_lvl_5.desc_tr_l4, q_cb_sum_projects_report_data_lvl_5.desc_tr_l5;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons
select q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.currency as up_curr, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem
from q_cb_cons_report_data
group by q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.currency, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_compare_detailed
select [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as l6_comb, q_cb_sum_cons_report_data.desc_tr_l6, q_cb_sum_cons_report_data.up_curr, sum(q_cb_sum_cons_report_data.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data.budget_type, sum(q_cb_sum_cons_report_data.gt_rem) as gt_rem, sum(q_cb_sum_cons_report_data.rt_rem) as rt_rem, sum(q_cb_sum_cons_report_data.rem_rem) as rem_rem, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] as l5_comb
from q_cb_sum_cons_report_data
group by [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], q_cb_sum_cons_report_data.desc_tr_l6, q_cb_sum_cons_report_data.up_curr, q_cb_sum_cons_report_data.budget_type, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5]
order by sum(q_cb_sum_cons_report_data.gt_rem) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_compare_lvl_4
select q_cb_sum_cons_report_data_lvl_4.l_1, q_cb_sum_cons_report_data_lvl_4.l_2, q_cb_sum_cons_report_data_lvl_4.l_3, q_cb_sum_cons_report_data_lvl_4.l_4, q_cb_sum_cons_report_data_lvl_4.up_curr, q_cb_sum_cons_report_data_lvl_4.desc_tr_l3, sum(q_cb_sum_cons_report_data_lvl_4.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data_lvl_4.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data_lvl_4.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data_lvl_4.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data_lvl_4.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data_lvl_4.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data_lvl_4.budget_type, sum(q_cb_sum_cons_report_data_lvl_4.gt_rem) as gt_rem, q_cb_sum_cons_report_data_lvl_4.desc_tr_l4
from q_cb_sum_cons_report_data_lvl_4
group by q_cb_sum_cons_report_data_lvl_4.l_1, q_cb_sum_cons_report_data_lvl_4.l_2, q_cb_sum_cons_report_data_lvl_4.l_3, q_cb_sum_cons_report_data_lvl_4.l_4, q_cb_sum_cons_report_data_lvl_4.up_curr, q_cb_sum_cons_report_data_lvl_4.desc_tr_l3, q_cb_sum_cons_report_data_lvl_4.budget_type, q_cb_sum_cons_report_data_lvl_4.desc_tr_l4
order by sum(q_cb_sum_cons_report_data_lvl_4.gt_rem) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_compare_lvl_5
select q_cb_sum_cons_report_data_lvl_5.l_1, q_cb_sum_cons_report_data_lvl_5.l_2, q_cb_sum_cons_report_data_lvl_5.l_3, q_cb_sum_cons_report_data_lvl_5.l_4, q_cb_sum_cons_report_data_lvl_5.up_curr, sum(q_cb_sum_cons_report_data_lvl_5.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data_lvl_5.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data_lvl_5.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data_lvl_5.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data_lvl_5.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data_lvl_5.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data_lvl_5.budget_type, sum(q_cb_sum_cons_report_data_lvl_5.gt_rem) as gt_rem, q_cb_sum_cons_report_data_lvl_5.desc_tr_l4, q_cb_sum_cons_report_data_lvl_5.l_5, q_cb_sum_cons_report_data_lvl_5.desc_tr_l5
from q_cb_sum_cons_report_data_lvl_5
group by q_cb_sum_cons_report_data_lvl_5.l_1, q_cb_sum_cons_report_data_lvl_5.l_2, q_cb_sum_cons_report_data_lvl_5.l_3, q_cb_sum_cons_report_data_lvl_5.l_4, q_cb_sum_cons_report_data_lvl_5.up_curr, q_cb_sum_cons_report_data_lvl_5.budget_type, q_cb_sum_cons_report_data_lvl_5.desc_tr_l4, q_cb_sum_cons_report_data_lvl_5.l_5, q_cb_sum_cons_report_data_lvl_5.desc_tr_l5
order by sum(q_cb_sum_cons_report_data_lvl_5.gt_rem) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_detailed
select [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as l6_comb, q_cb_cons_report_data.currency as up_curr, q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.l_5, q_cb_cons_report_data.l_6, q_cb_cons_report_data.desc_tr_l6, q_cb_cons_report_data.currency, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, [incomegt]-[incomert] as incomerem, [expensegt]-[expensert] as expenserem, [profitgt]-[profitrt] as profitrem
from q_cb_cons_report_data
group by [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.l_5, q_cb_cons_report_data.l_6, q_cb_cons_report_data.desc_tr_l6, q_cb_cons_report_data.currency, q_cb_cons_report_data.desc_tr_l6, [incomegt]-[incomert], [expensegt]-[expensert], [profitgt]-[profitrt];

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_lvl_4
select q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.currency as up_curr, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem, c4_code.desc_tr_l4
from q_cb_cons_report_data left join c4_code on (q_cb_cons_report_data.l_1 = c4_code.c_l1) and (q_cb_cons_report_data.l_2 = c4_code.c_l2) and (q_cb_cons_report_data.l_3 = c4_code.c_l3) and (q_cb_cons_report_data.l_4 = c4_code.c_l4)
group by q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.currency, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, c4_code.desc_tr_l4
order by sum(q_cb_cons_report_data.profitgt) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_lvl_5
select q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.currency as up_curr, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem, q_cb_cons_report_data.l_5, c5_code.desc_tr_l5, c4_code.desc_tr_l4
from (q_cb_cons_report_data left join c5_code on (q_cb_cons_report_data.l_1 = c5_code.c_l1) and (q_cb_cons_report_data.l_2 = c5_code.c_l2) and (q_cb_cons_report_data.l_3 = c5_code.c_l3) and (q_cb_cons_report_data.l_4 = c5_code.c_l4) and (q_cb_cons_report_data.l_5 = c5_code.c_l5)) left join c4_code on (q_cb_cons_report_data.l_4 = c4_code.c_l4) and (q_cb_cons_report_data.l_3 = c4_code.c_l3) and (q_cb_cons_report_data.l_2 = c4_code.c_l2) and (q_cb_cons_report_data.l_1 = c4_code.c_l1)
group by q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.currency, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, q_cb_cons_report_data.l_5, c5_code.desc_tr_l5, c4_code.desc_tr_l4
order by sum(q_cb_cons_report_data.profitgt) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_summary
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, q_cb_allprojects_report_data.desc_tr_l2, q_cb_allprojects_report_data.desc_tr_l3, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, q_cb_allprojects_report_data.desc_tr_l2, q_cb_allprojects_report_data.desc_tr_l3, q_cb_allprojects_report_data.currency;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_summary_detailed
select [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as l6_comb, q_cb_allprojects_report_data.currency as up_curr, q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.l_6, q_cb_allprojects_report_data.desc_tr_l2, q_cb_allprojects_report_data.desc_tr_l3, t_001_projects.r03_s_name, q_cb_allprojects_report_data.pc, q_cb_allprojects_report_data.desc_tr_l6, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code
group by [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], q_cb_allprojects_report_data.currency, q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.l_6, q_cb_allprojects_report_data.desc_tr_l2, q_cb_allprojects_report_data.desc_tr_l3, t_001_projects.r03_s_name, q_cb_allprojects_report_data.pc, q_cb_allprojects_report_data.desc_tr_l6;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_summary_lvl_4
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, q_cb_allprojects_report_data.desc_tr_l3, c4_code.desc_tr_l4, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from (q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code) left join c4_code on (q_cb_allprojects_report_data.l_4 = c4_code.c_l4) and (q_cb_allprojects_report_data.l_3 = c4_code.c_l3) and (q_cb_allprojects_report_data.l_2 = c4_code.c_l2) and (q_cb_allprojects_report_data.l_1 = c4_code.c_l1)
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, q_cb_allprojects_report_data.desc_tr_l3, c4_code.desc_tr_l4, q_cb_allprojects_report_data.currency;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_summary_lvl_5
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, c4_code.desc_tr_l4, c5_code.desc_tr_l5, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from ((q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code) left join c4_code on (q_cb_allprojects_report_data.l_1 = c4_code.c_l1) and (q_cb_allprojects_report_data.l_2 = c4_code.c_l2) and (q_cb_allprojects_report_data.l_3 = c4_code.c_l3) and (q_cb_allprojects_report_data.l_4 = c4_code.c_l4)) left join c5_code on (q_cb_allprojects_report_data.l_1 = c5_code.c_l1) and (q_cb_allprojects_report_data.l_2 = c5_code.c_l2) and (q_cb_allprojects_report_data.l_3 = c5_code.c_l3) and (q_cb_allprojects_report_data.l_4 = c5_code.c_l4) and (q_cb_allprojects_report_data.l_5 = c5_code.c_l5)
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, c4_code.desc_tr_l4, c5_code.desc_tr_l5, q_cb_allprojects_report_data.currency;

----------------------------------------------------------------------------------------------------
~sq_rr_updates
select t_update_data.id, t_update_data.update_ver, t_update_data.update_topic, t_update_data.update_data, t_update_data.update_date
from t_update_data;

----------------------------------------------------------------------------------------------------
~tmpclp51753
select t_bb_indexes.g_month, log([r_ufe]+1) as rr_ufe, log([r_tufe]+1) as rr_tufe, log([r_inf_usd]+1) as rr_inf_usd, log([r_inf_eur]+1) as rr_inf_eur, log([r_metal]+1) as rr_metal, log([r_petrol]+1) as rr_petrol, log([r_cement]+1) as rr_cement, log([r_electricity]+1) as rr_electricity, t_bb_indexes.e_year as expr1
from t_bb_indexes;

----------------------------------------------------------------------------------------------------
~tmpclp51901
select t_months.g_month, iif(year([g_month])>2022,(1+[r_metal])^(month([g_month])/12)*[fr_metal],(1+[r_metal])^(month([g_month])/12))-1 as bb_metal, iif(year([g_month])>2022,(1+[r_electricity])^(month([g_month])/12)*[fr_electricity],(1+[r_electricity])^(month([g_month])/12))-1 as bb_electricity, iif(year([g_month])>2022,(1+[r_cement])^(month([g_month])/12)*[fr_cement],(1+[r_cement])^(month([g_month])/12))-1 as bb_cement, iif(year([g_month])>2022,(1+[r_petrol])^(month([g_month])/12)*[fr_petrol],(1+[r_petrol])^(month([g_month])/12))-1 as bb_petrol, iif(year([g_month])>2022,(1+[r_inf_usd])^(month([g_month])/12)*[fr_inf_usd],(1+[r_inf_usd])^(month([g_month])/12))-1 as bb_inf_usd, iif(year([g_month])>2022,(1+[r_inf_eur])^(month([g_month])/12)*[fr_inf_eur],(1+[r_inf_eur])^(month([g_month])/12))-1 as bb_inf_eur, iif(year([g_month])>2022,(1+[r_ufe])^(month([g_month])/12)*[fr_ufe],(1+[r_ufe])^(month([g_month])/12))-1 as bb_ufe, iif(year([g_month])>2022,(1+[r_tufe])^(month([g_month])/12)*[fr_tufe],(1+[r_tufe])^(month([g_month])/12))-1 as bb_tufe
from (t_months left join t_bb_indexes on t_months.g_year=t_bb_indexes.[g_month]) left join q_bb_indexes_p on t_months.g_year = q_bb_indexes_p.e_year;

----------------------------------------------------------------------------------------------------
q_ac_bb_exp_crosstab
transform sum(t_ac_bb_exp.exp_ac_exp) as sumofexp_ac_exp
select t_ac_bb_exp.rep_month, t_ac_bb_exp.pc, t_ac_bb_exp.l_1, t_ac_bb_exp.l_2, t_ac_bb_exp.l_3, t_ac_bb_exp.l_4, t_ac_bb_exp.l_5, t_ac_bb_exp.l_6, t_ac_bb_exp.up_curr
from t_ac_bb_exp
group by t_ac_bb_exp.rep_month, t_ac_bb_exp.pc, t_ac_bb_exp.l_1, t_ac_bb_exp.l_2, t_ac_bb_exp.l_3, t_ac_bb_exp.l_4, t_ac_bb_exp.l_5, t_ac_bb_exp.l_6, t_ac_bb_exp.up_curr
pivot t_ac_bb_exp.exp_ac_mon;

----------------------------------------------------------------------------------------------------
q_ac_bb_exp_lastm
select max(t_ac_bb_exp.exp_ac_mon) as lastm, t_ac_bb_exp.pc, t_ac_bb_exp.l_1, t_ac_bb_exp.l_2, t_ac_bb_exp.l_3, t_ac_bb_exp.l_4, t_ac_bb_exp.l_5, t_ac_bb_exp.l_6, t_ac_bb_exp.rep_month
from t_ac_bb_exp
group by t_ac_bb_exp.pc, t_ac_bb_exp.l_1, t_ac_bb_exp.l_2, t_ac_bb_exp.l_3, t_ac_bb_exp.l_4, t_ac_bb_exp.l_5, t_ac_bb_exp.l_6, t_ac_bb_exp.rep_month;

----------------------------------------------------------------------------------------------------
q_ac_exp_crosstab
transform sum(t_ac_exp.exp_ac_exp) as sumofexp_ac_exp
select t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6, t_ac_exp.up_curr
from t_ac_exp
group by t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6, t_ac_exp.up_curr
pivot t_ac_exp.exp_ac_mon;

----------------------------------------------------------------------------------------------------
q_ac_indexes_delete_mod
delete t_ac_indexes_mod.rep_month, t_ac_indexes_mod.g_month, t_ac_indexes_mod.bb_metal, t_ac_indexes_mod.bb_electricity, t_ac_indexes_mod.bb_cement, t_ac_indexes_mod.bb_petrol, t_ac_indexes_mod.bb_inf_usd, t_ac_indexes_mod.bb_inf_eur, t_ac_indexes_mod.bb_ufe, t_ac_indexes_mod.bb_tufe
from t_ac_indexes_mod;

----------------------------------------------------------------------------------------------------
q_ac_indexes_graph
select t_cb_indexes.bb_metal, t_ac_indexes_mod.bb_metal, t_cb_indexes.bb_electricity, t_ac_indexes_mod.bb_electricity, t_cb_indexes.bb_cement, t_ac_indexes_mod.bb_cement, t_cb_indexes.bb_petrol, t_ac_indexes_mod.bb_petrol, t_cb_indexes.bb_inf_usd, t_ac_indexes_mod.bb_inf_usd, t_cb_indexes.bb_inf_eur, t_ac_indexes_mod.bb_inf_eur, t_cb_indexes.bb_ufe, t_ac_indexes_mod.bb_ufe, t_cb_indexes.bb_tufe, t_ac_indexes_mod.bb_tufe, t_cb_indexes.g_month
from t_cb_indexes right join t_ac_indexes_mod on (t_cb_indexes.rep_month = t_ac_indexes_mod.rep_month) and (t_cb_indexes.g_month = t_ac_indexes_mod.g_month)
where (((t_cb_indexes.g_month)>#1/1/2022#) and ((t_ac_indexes_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_ac_indexes_mod_ap
insert into t_ac_indexes_mod ( rep_month, g_month, bb_metal, bb_electricity, bb_cement, bb_petrol, bb_inf_usd, bb_inf_eur, bb_ufe, bb_tufe )
select t_cb_indexes.rep_month, t_cb_indexes.g_month, t_cb_indexes.bb_metal, t_cb_indexes.bb_electricity, t_cb_indexes.bb_cement, t_cb_indexes.bb_petrol, t_cb_indexes.bb_inf_usd, t_cb_indexes.bb_inf_eur, t_cb_indexes.bb_ufe, t_cb_indexes.bb_tufe
from t_cb_indexes
where (((t_cb_indexes.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_ac_indexes_reset
update t_ac_indexes_mod left join t_cb_indexes on (t_ac_indexes_mod.rep_month = t_cb_indexes.rep_month) and (t_ac_indexes_mod.g_month = t_cb_indexes.g_month) set t_ac_indexes_mod.g_month = [t_cb_indexes].[g_month], t_ac_indexes_mod.bb_metal = [t_cb_indexes].[bb_metal], t_ac_indexes_mod.bb_electricity = [t_cb_indexes].[bb_electricity], t_ac_indexes_mod.bb_cement = [t_cb_indexes].[bb_cement], t_ac_indexes_mod.bb_petrol = [t_cb_indexes].[bb_petrol], t_ac_indexes_mod.bb_inf_usd = [t_cb_indexes].[bb_inf_usd], t_ac_indexes_mod.bb_inf_eur = [t_cb_indexes].[bb_inf_eur], t_ac_indexes_mod.bb_ufe = [t_cb_indexes].[bb_ufe], t_ac_indexes_mod.bb_tufe = [t_cb_indexes].[bb_tufe], t_ac_indexes_mod.rep_month = [t_cb_indexes].[rep_month]
where (((t_ac_indexes_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_active_rep_month
select max(t_rep_month.rep_month) as active_rep_month
from t_rep_month;

----------------------------------------------------------------------------------------------------
q_bb_active_months_res_qty
select t_bb_analysis.rep_month, t_bb_analysis.p01_code as pc, q_bb_qty_activem_works.exp_base_mon, (1+[r_loss])*[t_bb_analysis].[an_rs_quantity] as an_rs_quantity, t_bb_analysis.key_r4, q_bb_qty_activem_works.key_r_pc_l6, t_bb_analysis.key_full, t_bb_analysis.l_1, t_bb_analysis.l_2, t_bb_analysis.l_3, t_bb_analysis.rs_l1, t_bb_analysis.rs_l2, t_bb_analysis.rs_l3, t_bb_analysis.rs_l4, t_bb_analysis.l_4, t_bb_analysis.l_5, t_bb_analysis.l_6, t_bb_analysis.key_r4_simple, t_bb_analysis.r_loss
from q_bb_qty_activem_works left join t_bb_analysis on q_bb_qty_activem_works.key_r_pc_l6 = t_bb_analysis.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_analysis_activem_with_prices
select q_bb_active_months_res_qty.rep_month, q_bb_active_months_res_qty.pc, q_bb_active_months_res_qty.exp_base_mon, q_bb_active_months_res_qty.an_rs_quantity, q_bb_active_months_res_qty.key_r4, q_bb_active_months_res_qty.key_r_pc_l6, q_bb_active_months_res_qty.key_full, t_pl_res_up.up_cost, q_bb_active_months_res_qty.l_1, q_bb_active_months_res_qty.l_2, q_bb_active_months_res_qty.l_3, q_bb_active_months_res_qty.l_4, q_bb_active_months_res_qty.l_5, q_bb_active_months_res_qty.l_6, q_bb_active_months_res_qty.rs_l1, q_bb_active_months_res_qty.rs_l2, q_bb_active_months_res_qty.rs_l3, q_bb_active_months_res_qty.rs_l4, r4_code.currency, q_bb_active_months_res_qty.key_r4_simple
from (q_bb_active_months_res_qty left join t_pl_res_up on q_bb_active_months_res_qty.key_r4 = t_pl_res_up.key_r4) left join r4_code on q_bb_active_months_res_qty.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_bb_analysis_comp
select t_bb_analysis_add.p01_code, t_bb_analysis_add.rs_l1, t_bb_analysis_add.rs_l2, t_bb_analysis_add.rs_l3, t_bb_analysis_add.rs_l4, t_bb_analysis_add.analysis_date, t_bb_analysis.p01_code
from t_bb_analysis_add left join t_bb_analysis on (t_bb_analysis_add.analysis_date = t_bb_analysis.analysis_date) and (t_bb_analysis_add.rs_l4 = t_bb_analysis.rs_l4) and (t_bb_analysis_add.rs_l3 = t_bb_analysis.rs_l3) and (t_bb_analysis_add.rs_l2 = t_bb_analysis.rs_l2) and (t_bb_analysis_add.rs_l1 = t_bb_analysis.rs_l1) and (t_bb_analysis_add.p01_code = t_bb_analysis.p01_code)
where (((t_bb_analysis.p01_code) is null));

----------------------------------------------------------------------------------------------------
q_bb_coeff_export
select t_bb_analysis.p01_code, t_bb_analysis.rs_l1, t_bb_analysis.rs_l2, t_bb_analysis.rs_l3, t_bb_analysis.rs_l4, r4_code.r_4_desc_tr, r4_code.w_ufe, r4_code.w_tufe, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.w_metal, r4_code.w_petrol, r4_code.w_cement, r4_code.w_electricity
from r4_code left join t_bb_analysis on (r4_code.r_4_code = t_bb_analysis.rs_l4) and (r4_code.r_3_code = t_bb_analysis.rs_l3) and (r4_code.r_2_code = t_bb_analysis.rs_l2) and (r4_code.r_1_code = t_bb_analysis.rs_l1)
group by t_bb_analysis.p01_code, t_bb_analysis.rs_l1, t_bb_analysis.rs_l2, t_bb_analysis.rs_l3, t_bb_analysis.rs_l4, r4_code.r_4_desc_tr, r4_code.w_ufe, r4_code.w_tufe, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.w_metal, r4_code.w_petrol, r4_code.w_cement, r4_code.w_electricity
having (((t_bb_analysis.p01_code) is not null));

----------------------------------------------------------------------------------------------------
q_bb_curr_base_month
select q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month
from t_rep_month right join q_budget_project_months on t_rep_month.rep_month = q_budget_project_months.rep_month
group by q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month;

----------------------------------------------------------------------------------------------------
q_bb_curr_base_val
select q_bb_curr_base_month.rep_month, q_bb_curr_base_month.rep_month_date, t_bb_mon_curr_rates.r_eur_eur, t_bb_mon_curr_rates.r_eur_try, t_bb_mon_curr_rates.r_eur_usd, t_bb_mon_curr_rates.r_try_eur, t_bb_mon_curr_rates.r_try_try, t_bb_mon_curr_rates.r_try_usd, t_bb_mon_curr_rates.r_usd_eur, t_bb_mon_curr_rates.r_usd_try, t_bb_mon_curr_rates.r_usd_usd, q_bb_curr_base_month.pc
from q_bb_curr_base_month left join t_bb_mon_curr_rates on (q_bb_curr_base_month.pc = t_bb_mon_curr_rates.p_code) and (q_bb_curr_base_month.rep_month_date = t_bb_mon_curr_rates.month) and (q_bb_curr_base_month.rep_month = t_bb_mon_curr_rates.rep_month)
group by q_bb_curr_base_month.rep_month, q_bb_curr_base_month.rep_month_date, t_bb_mon_curr_rates.r_eur_eur, t_bb_mon_curr_rates.r_eur_try, t_bb_mon_curr_rates.r_eur_usd, t_bb_mon_curr_rates.r_try_eur, t_bb_mon_curr_rates.r_try_try, t_bb_mon_curr_rates.r_try_usd, t_bb_mon_curr_rates.r_usd_eur, t_bb_mon_curr_rates.r_usd_try, t_bb_mon_curr_rates.r_usd_usd, q_bb_curr_base_month.pc;

----------------------------------------------------------------------------------------------------
q_bb_curr_escalation_rates
select q_bb_active_months_res_qty.rep_month, q_bb_active_months_res_qty.pc, q_bb_active_months_res_qty.l_1, q_bb_active_months_res_qty.l_2, q_bb_active_months_res_qty.l_3, q_bb_active_months_res_qty.l_4, q_bb_active_months_res_qty.l_5, q_bb_active_months_res_qty.l_6, q_bb_active_months_res_qty.exp_base_mon as [month], q_bb_active_months_res_qty.rs_l1, q_bb_active_months_res_qty.rs_l2, q_bb_active_months_res_qty.rs_l3, q_bb_active_months_res_qty.rs_l4, iif(([currency]="try" and [w_inf_usd]<>0),1+round([rt_usd_try]*[w_inf_usd],6),(iif([currency]="eur" and [w_inf_usd]<>0,1+round([rt_usd_eur]*[w_inf_usd],6),1))) as k_usd, iif(([currency]="try" and [w_inf_eur]<>0),1+round([rt_eur_try]*[w_inf_eur],6),(iif([currency]="usd" and [w_inf_eur]<>0,1+round([rt_eur_usd]*[w_inf_eur],6),1))) as k_eur, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.currency as rs_currency, q_bb_active_months_res_qty.key_r4_simple, q_bb_active_months_res_qty.key_full, q_bb_active_months_res_qty.key_r_pc_l6, q_bb_active_months_res_qty.key_r4, [key_full] & "." & [rs_currency] & "." & [month] as key_full_comb
from (q_bb_active_months_res_qty left join q_bb_monthly_curr_rates_inc on (q_bb_active_months_res_qty.exp_base_mon = q_bb_monthly_curr_rates_inc.exp_base_mon) and (q_bb_active_months_res_qty.pc = q_bb_monthly_curr_rates_inc.pc) and (q_bb_active_months_res_qty.rep_month = q_bb_monthly_curr_rates_inc.rep_month)) left join r4_code on q_bb_active_months_res_qty.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_bb_exp
select t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6, q_bb_unit_price.g_month as exp_base_mon, sum(([exp_base_qty]*[unit_price_planned_coeff])) as total_expense, q_bb_unit_price.up_curr, q_bb_unit_price.key_r_pc_l6
from t_bb_qty right join q_bb_unit_price on (t_bb_qty.pc = q_bb_unit_price.p01_code) and (t_bb_qty.l_1 = q_bb_unit_price.l_1) and (t_bb_qty.l_2 = q_bb_unit_price.l_2) and (t_bb_qty.l_3 = q_bb_unit_price.l_3) and (t_bb_qty.l_4 = q_bb_unit_price.l_4) and (t_bb_qty.l_5 = q_bb_unit_price.l_5) and (t_bb_qty.l_6 = q_bb_unit_price.l_6) and (t_bb_qty.exp_base_mon = q_bb_unit_price.g_month) and (t_bb_qty.rep_month = q_bb_unit_price.rep_month)
group by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6, q_bb_unit_price.g_month, q_bb_unit_price.up_curr, q_bb_unit_price.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_dist_eur_with_dummy
transform sum(q_bb_exp_eur_with_dummy.eur_expense) as sumofeur_expense
select q_bb_exp_eur_with_dummy.rep_month, q_bb_exp_eur_with_dummy.pc, q_bb_exp_eur_with_dummy.l_1, q_bb_exp_eur_with_dummy.l_2, q_bb_exp_eur_with_dummy.l_3, q_bb_exp_eur_with_dummy.l_4, q_bb_exp_eur_with_dummy.l_5, q_bb_exp_eur_with_dummy.l_6, q_bb_exp_eur_with_dummy.up_curr_conv
from q_bb_exp_eur_with_dummy
group by q_bb_exp_eur_with_dummy.rep_month, q_bb_exp_eur_with_dummy.pc, q_bb_exp_eur_with_dummy.l_1, q_bb_exp_eur_with_dummy.l_2, q_bb_exp_eur_with_dummy.l_3, q_bb_exp_eur_with_dummy.l_4, q_bb_exp_eur_with_dummy.l_5, q_bb_exp_eur_with_dummy.l_6, q_bb_exp_eur_with_dummy.up_curr_conv
pivot q_bb_exp_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_exp_dist_try_with_dummy
transform sum(q_bb_exp_try_with_dummy.try_expense) as sumoftry_expense
select q_bb_exp_try_with_dummy.rep_month, q_bb_exp_try_with_dummy.pc, q_bb_exp_try_with_dummy.l_1, q_bb_exp_try_with_dummy.l_2, q_bb_exp_try_with_dummy.l_3, q_bb_exp_try_with_dummy.l_4, q_bb_exp_try_with_dummy.l_5, q_bb_exp_try_with_dummy.l_6, q_bb_exp_try_with_dummy.up_curr_conv
from q_bb_exp_try_with_dummy
group by q_bb_exp_try_with_dummy.rep_month, q_bb_exp_try_with_dummy.pc, q_bb_exp_try_with_dummy.l_1, q_bb_exp_try_with_dummy.l_2, q_bb_exp_try_with_dummy.l_3, q_bb_exp_try_with_dummy.l_4, q_bb_exp_try_with_dummy.l_5, q_bb_exp_try_with_dummy.l_6, q_bb_exp_try_with_dummy.up_curr_conv
pivot q_bb_exp_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_exp_dist_usd_with_dummy
transform sum(q_bb_exp_usd_with_dummy.usd_expense) as sumofusd_expense
select q_bb_exp_usd_with_dummy.rep_month, q_bb_exp_usd_with_dummy.pc, q_bb_exp_usd_with_dummy.l_1, q_bb_exp_usd_with_dummy.l_2, q_bb_exp_usd_with_dummy.l_3, q_bb_exp_usd_with_dummy.l_4, q_bb_exp_usd_with_dummy.l_5, q_bb_exp_usd_with_dummy.l_6, q_bb_exp_usd_with_dummy.up_curr_conv
from q_bb_exp_usd_with_dummy
group by q_bb_exp_usd_with_dummy.rep_month, q_bb_exp_usd_with_dummy.pc, q_bb_exp_usd_with_dummy.l_1, q_bb_exp_usd_with_dummy.l_2, q_bb_exp_usd_with_dummy.l_3, q_bb_exp_usd_with_dummy.l_4, q_bb_exp_usd_with_dummy.l_5, q_bb_exp_usd_with_dummy.l_6, q_bb_exp_usd_with_dummy.up_curr_conv
pivot q_bb_exp_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_exp_dist_with_dummy
transform sum(q_bb_exp_with_dummy.total_expense) as sumoftotal_expense
select q_bb_exp_with_dummy.rep_month, q_bb_exp_with_dummy.pc, q_bb_exp_with_dummy.l_1, q_bb_exp_with_dummy.l_2, q_bb_exp_with_dummy.l_3, q_bb_exp_with_dummy.l_4, q_bb_exp_with_dummy.l_5, q_bb_exp_with_dummy.l_6, q_bb_exp_with_dummy.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")) as exc_try, iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_bb_exp_with_dummy
group by q_bb_exp_with_dummy.rep_month, q_bb_exp_with_dummy.pc, q_bb_exp_with_dummy.l_1, q_bb_exp_with_dummy.l_2, q_bb_exp_with_dummy.l_3, q_bb_exp_with_dummy.l_4, q_bb_exp_with_dummy.l_5, q_bb_exp_with_dummy.l_6, q_bb_exp_with_dummy.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")), iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")), iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur"))
pivot q_bb_exp_with_dummy.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_exp_eur
select t_bb_exp_total_st.rep_month, t_bb_exp_total_st.pc, t_bb_exp_total_st.l_1, t_bb_exp_total_st.l_2, t_bb_exp_total_st.l_3, t_bb_exp_total_st.l_4, t_bb_exp_total_st.l_5, t_bb_exp_total_st.l_6, t_bb_exp_total_st.total_expense, t_bb_exp_total_st.up_curr, iif([up_curr]="eur",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_eur],[total_expense]*[r_try_eur])) as eur_expense, "eur" as up_curr_conv, t_bb_exp_total_st.month as [month], t_bb_exp_total_st.key_r_pc_l6
from t_bb_exp_total_st left join t_bb_mon_curr_rates on (t_bb_exp_total_st.month = t_bb_mon_curr_rates.month) and (t_bb_exp_total_st.pc = t_bb_mon_curr_rates.p_code) and (t_bb_exp_total_st.rep_month = t_bb_mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_bb_exp_eur_mt
select q_bb_exp_eur.rep_month, q_bb_exp_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_eur.month, q_bb_exp_eur.l_1, q_bb_exp_eur.l_2, q_bb_exp_eur.l_3, q_bb_exp_eur.l_4, q_bb_exp_eur.l_5, q_bb_exp_eur.l_6, q_bb_exp_eur.eur_expense, q_bb_exp_eur.up_curr_conv, q_bb_exp_eur.key_r_pc_l6 into t_bb_exp_eur_st
from q_bb_exp_eur left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_exp_eur.l_1 = c3_code.c_l1) and (q_bb_exp_eur.l_2 = c3_code.c_l2) and (q_bb_exp_eur.l_3 = c3_code.c_l3)
group by q_bb_exp_eur.rep_month, q_bb_exp_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_eur.month, q_bb_exp_eur.l_1, q_bb_exp_eur.l_2, q_bb_exp_eur.l_3, q_bb_exp_eur.l_4, q_bb_exp_eur.l_5, q_bb_exp_eur.l_6, q_bb_exp_eur.eur_expense, q_bb_exp_eur.up_curr_conv, q_bb_exp_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_eur_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_exp_eur

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_exp_total
select 
		*
	from 
q_bb_exp
		
union all select 
		*
	from 
		t_ac_bb_exp;

----------------------------------------------------------------------------------------------------
q_bb_exp_total_mt
select q_bb_exp_total.rep_month, q_bb_exp_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_total.exp_base_mon as [month], q_bb_exp_total.total_expense, q_bb_exp_total.up_curr, q_bb_exp_total.l_1, q_bb_exp_total.l_2, q_bb_exp_total.l_3, q_bb_exp_total.l_4, q_bb_exp_total.l_5, q_bb_exp_total.l_6, q_bb_exp_total.key_r_pc_l6 into t_bb_exp_total_st
from q_bb_exp_total left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_exp_total.l_1 = c3_code.c_l1) and (q_bb_exp_total.l_2 = c3_code.c_l2) and (q_bb_exp_total.l_3 = c3_code.c_l3)
group by q_bb_exp_total.rep_month, q_bb_exp_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_total.exp_base_mon, q_bb_exp_total.total_expense, q_bb_exp_total.up_curr, q_bb_exp_total.l_1, q_bb_exp_total.l_2, q_bb_exp_total.l_3, q_bb_exp_total.l_4, q_bb_exp_total.l_5, q_bb_exp_total.l_6, q_bb_exp_total.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_try
select t_bb_exp_total_st.rep_month, t_bb_exp_total_st.pc, t_bb_exp_total_st.l_1, t_bb_exp_total_st.l_2, t_bb_exp_total_st.l_3, t_bb_exp_total_st.l_4, t_bb_exp_total_st.l_5, t_bb_exp_total_st.l_6, t_bb_exp_total_st.total_expense, t_bb_exp_total_st.up_curr, iif([up_curr]="try",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_try],[total_expense]*[r_eur_try])) as try_expense, "try" as up_curr_conv, t_bb_exp_total_st.month as [month], t_bb_exp_total_st.key_r_pc_l6
from t_bb_exp_total_st left join t_bb_mon_curr_rates on (t_bb_exp_total_st.month = t_bb_mon_curr_rates.month) and (t_bb_exp_total_st.pc = t_bb_mon_curr_rates.p_code) and (t_bb_exp_total_st.rep_month = t_bb_mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_bb_exp_try_mt
select q_bb_exp_try.rep_month, q_bb_exp_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_try.month, q_bb_exp_try.l_1, q_bb_exp_try.l_2, q_bb_exp_try.l_3, q_bb_exp_try.l_4, q_bb_exp_try.l_5, q_bb_exp_try.l_6, q_bb_exp_try.try_expense, q_bb_exp_try.up_curr_conv, q_bb_exp_try.key_r_pc_l6 into t_bb_exp_try_st
from q_bb_exp_try left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_bb_exp_try.l_3 = c3_code.c_l3) and (q_bb_exp_try.l_2 = c3_code.c_l2) and (q_bb_exp_try.l_1 = c3_code.c_l1)
group by q_bb_exp_try.rep_month, q_bb_exp_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_try.month, q_bb_exp_try.l_1, q_bb_exp_try.l_2, q_bb_exp_try.l_3, q_bb_exp_try.l_4, q_bb_exp_try.l_5, q_bb_exp_try.l_6, q_bb_exp_try.try_expense, q_bb_exp_try.up_curr_conv, q_bb_exp_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_try_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_exp_try

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_exp_usd
select t_bb_exp_total_st.rep_month, t_bb_exp_total_st.pc, t_bb_exp_total_st.l_1, t_bb_exp_total_st.l_2, t_bb_exp_total_st.l_3, t_bb_exp_total_st.l_4, t_bb_exp_total_st.l_5, t_bb_exp_total_st.l_6, t_bb_exp_total_st.total_expense, t_bb_exp_total_st.up_curr, iif([up_curr]="usd",[total_expense],iif([up_curr]="try",[total_expense]*[r_try_usd],[total_expense]*[r_eur_usd])) as usd_expense, "usd" as up_curr_conv, t_bb_exp_total_st.month as [month], t_bb_exp_total_st.key_r_pc_l6
from t_bb_exp_total_st left join t_bb_mon_curr_rates on (t_bb_exp_total_st.month = t_bb_mon_curr_rates.month) and (t_bb_exp_total_st.pc = t_bb_mon_curr_rates.p_code) and (t_bb_exp_total_st.rep_month = t_bb_mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_bb_exp_usd_mt
select q_bb_exp_usd.rep_month, q_bb_exp_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_usd.month, q_bb_exp_usd.l_1, q_bb_exp_usd.l_2, q_bb_exp_usd.l_3, q_bb_exp_usd.l_4, q_bb_exp_usd.l_5, q_bb_exp_usd.l_6, q_bb_exp_usd.usd_expense, q_bb_exp_usd.up_curr_conv, q_bb_exp_usd.key_r_pc_l6 into t_bb_exp_usd_st
from q_bb_exp_usd left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_bb_exp_usd.l_3 = c3_code.c_l3) and (q_bb_exp_usd.l_2 = c3_code.c_l2) and (q_bb_exp_usd.l_1 = c3_code.c_l1)
group by q_bb_exp_usd.rep_month, q_bb_exp_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_usd.month, q_bb_exp_usd.l_1, q_bb_exp_usd.l_2, q_bb_exp_usd.l_3, q_bb_exp_usd.l_4, q_bb_exp_usd.l_5, q_bb_exp_usd.l_6, q_bb_exp_usd.usd_expense, q_bb_exp_usd.up_curr_conv, q_bb_exp_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_usd_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_exp_usd

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_exp_with_dummy
select 
		*
	from 
		q_bb_exp_total

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_inc_calculation
select t_bb_inc_qty.rep_month, t_bb_inc_qty.pc, t_bb_inc_qty.l_1, t_bb_inc_qty.l_2, t_bb_inc_qty.l_3, t_bb_inc_qty.l_4, t_bb_inc_qty.l_5, t_bb_inc_qty.l_6, t_bb_inc_qty.inc_base_mon, iif([inc_rate] is null,1,1+[inc_rate]) as inc_rate_1, iif([inc_rate_pcode] is null,1,1+[inc_rate_pcode]) as inc_rate_2, t_bb_inc_wbs.up, t_bb_inc_wbs.currency, [up]*[inc_rate_1]*[inc_rate_2] as up_total, t_bb_inc_qty.inc_base_qty, [up_total]*[inc_base_qty] as inc_total, t_bb_inc_qty.key_r_pc_l6
from ((t_bb_inc_qty left join t_bb_inc_esc_rates_l6 on (t_bb_inc_qty.rep_month = t_bb_inc_esc_rates_l6.rep_month) and (t_bb_inc_qty.pc = t_bb_inc_esc_rates_l6.p01_code) and (t_bb_inc_qty.l_1 = t_bb_inc_esc_rates_l6.c_l1) and (t_bb_inc_qty.l_2 = t_bb_inc_esc_rates_l6.c_l2) and (t_bb_inc_qty.l_3 = t_bb_inc_esc_rates_l6.c_l3) and (t_bb_inc_qty.l_4 = t_bb_inc_esc_rates_l6.c_l4) and (t_bb_inc_qty.l_5 = t_bb_inc_esc_rates_l6.c_l5) and (t_bb_inc_qty.l_6 = t_bb_inc_esc_rates_l6.c_l6) and (t_bb_inc_qty.inc_base_mon = t_bb_inc_esc_rates_l6.month)) left join t_bb_inc_esc_rates_pcode on (t_bb_inc_qty.rep_month = t_bb_inc_esc_rates_pcode.rep_month) and (t_bb_inc_qty.pc = t_bb_inc_esc_rates_pcode.p01_code) and (t_bb_inc_qty.inc_base_mon = t_bb_inc_esc_rates_pcode.month)) left join t_bb_inc_wbs on t_bb_inc_qty.key_r_pc_l6 = t_bb_inc_wbs.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_dist_eur_with_dummy
transform sum(q_bb_inc_eur_with_dummy.eur_income) as eur_income
select q_bb_inc_eur_with_dummy.rep_month, q_bb_inc_eur_with_dummy.pc, q_bb_inc_eur_with_dummy.l_1, q_bb_inc_eur_with_dummy.l_2, q_bb_inc_eur_with_dummy.l_3, q_bb_inc_eur_with_dummy.l_4, q_bb_inc_eur_with_dummy.l_5, q_bb_inc_eur_with_dummy.l_6, q_bb_inc_eur_with_dummy.up_curr_conv
from q_bb_inc_eur_with_dummy
group by q_bb_inc_eur_with_dummy.rep_month, q_bb_inc_eur_with_dummy.pc, q_bb_inc_eur_with_dummy.l_1, q_bb_inc_eur_with_dummy.l_2, q_bb_inc_eur_with_dummy.l_3, q_bb_inc_eur_with_dummy.l_4, q_bb_inc_eur_with_dummy.l_5, q_bb_inc_eur_with_dummy.l_6, q_bb_inc_eur_with_dummy.up_curr_conv
pivot q_bb_inc_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_inc_dist_try_with_dummy
transform sum(q_bb_inc_try_with_dummy.try_income) as try_income
select q_bb_inc_try_with_dummy.rep_month, q_bb_inc_try_with_dummy.pc, q_bb_inc_try_with_dummy.l_1, q_bb_inc_try_with_dummy.l_2, q_bb_inc_try_with_dummy.l_3, q_bb_inc_try_with_dummy.l_4, q_bb_inc_try_with_dummy.l_5, q_bb_inc_try_with_dummy.l_6, q_bb_inc_try_with_dummy.up_curr_conv
from q_bb_inc_try_with_dummy
group by q_bb_inc_try_with_dummy.rep_month, q_bb_inc_try_with_dummy.pc, q_bb_inc_try_with_dummy.l_1, q_bb_inc_try_with_dummy.l_2, q_bb_inc_try_with_dummy.l_3, q_bb_inc_try_with_dummy.l_4, q_bb_inc_try_with_dummy.l_5, q_bb_inc_try_with_dummy.l_6, q_bb_inc_try_with_dummy.up_curr_conv
pivot q_bb_inc_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_inc_dist_usd_with_dummy
transform sum(q_bb_inc_usd_with_dummy.usd_income) as usd_income
select q_bb_inc_usd_with_dummy.rep_month, q_bb_inc_usd_with_dummy.pc, q_bb_inc_usd_with_dummy.l_1, q_bb_inc_usd_with_dummy.l_2, q_bb_inc_usd_with_dummy.l_3, q_bb_inc_usd_with_dummy.l_4, q_bb_inc_usd_with_dummy.l_5, q_bb_inc_usd_with_dummy.l_6, q_bb_inc_usd_with_dummy.up_curr_conv
from q_bb_inc_usd_with_dummy
group by q_bb_inc_usd_with_dummy.rep_month, q_bb_inc_usd_with_dummy.pc, q_bb_inc_usd_with_dummy.l_1, q_bb_inc_usd_with_dummy.l_2, q_bb_inc_usd_with_dummy.l_3, q_bb_inc_usd_with_dummy.l_4, q_bb_inc_usd_with_dummy.l_5, q_bb_inc_usd_with_dummy.l_6, q_bb_inc_usd_with_dummy.up_curr_conv
pivot q_bb_inc_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_inc_dist_with_dummy
transform sum(q_bb_inc_with_dummy.inc_total) as total_income
select q_bb_inc_with_dummy.rep_month, q_bb_inc_with_dummy.pc, q_bb_inc_with_dummy.l_1, q_bb_inc_with_dummy.l_2, q_bb_inc_with_dummy.l_3, q_bb_inc_with_dummy.l_4, q_bb_inc_with_dummy.l_5, q_bb_inc_with_dummy.l_6, q_bb_inc_with_dummy.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")) as exc_try, iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_bb_inc_with_dummy
group by q_bb_inc_with_dummy.rep_month, q_bb_inc_with_dummy.pc, q_bb_inc_with_dummy.l_1, q_bb_inc_with_dummy.l_2, q_bb_inc_with_dummy.l_3, q_bb_inc_with_dummy.l_4, q_bb_inc_with_dummy.l_5, q_bb_inc_with_dummy.l_6, q_bb_inc_with_dummy.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")), iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")), iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur"))
pivot q_bb_inc_with_dummy.inc_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_inc_eur
select t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6, t_bb_inc_total_st.inc_total, t_bb_inc_total_st.currency, iif([currency]="eur",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_eur],[inc_total]*[r_try_eur])) as eur_income, "eur" as up_curr_conv, t_bb_inc_total_st.inc_base_mon as [month], t_bb_inc_total_st.key_r_pc_l6
from t_bb_inc_total_st left join mon_curr_rates on (t_bb_inc_total_st.inc_base_mon = mon_curr_rates.month) and (t_bb_inc_total_st.rep_month = mon_curr_rates.rep_month)
order by t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_inc_eur_mt
select q_bb_inc_eur.rep_month, q_bb_inc_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_eur.month, q_bb_inc_eur.eur_income, q_bb_inc_eur.up_curr_conv, q_bb_inc_eur.l_1, q_bb_inc_eur.l_2, q_bb_inc_eur.l_3, q_bb_inc_eur.l_4, q_bb_inc_eur.l_5, q_bb_inc_eur.l_6, c6_code.desc_tr_l6, q_bb_inc_eur.key_r_pc_l6 into t_bb_inc_eur_st
from (q_bb_inc_eur left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_bb_inc_eur.l_3 = c3_code.c_l3) and (q_bb_inc_eur.l_2 = c3_code.c_l2) and (q_bb_inc_eur.l_1 = c3_code.c_l1)) left join c6_code on (q_bb_inc_eur.l_6 = c6_code.c_l6) and (q_bb_inc_eur.l_5 = c6_code.c_l5) and (q_bb_inc_eur.l_4 = c6_code.c_l4) and (q_bb_inc_eur.l_3 = c6_code.c_l3) and (q_bb_inc_eur.l_2 = c6_code.c_l2) and (q_bb_inc_eur.l_1 = c6_code.c_l1)
group by q_bb_inc_eur.rep_month, q_bb_inc_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_eur.month, q_bb_inc_eur.eur_income, q_bb_inc_eur.up_curr_conv, q_bb_inc_eur.l_1, q_bb_inc_eur.l_2, q_bb_inc_eur.l_3, q_bb_inc_eur.l_4, q_bb_inc_eur.l_5, q_bb_inc_eur.l_6, c6_code.desc_tr_l6, q_bb_inc_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_eur_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_income,
up_curr_conv,
key_r_pc_l6


from 
q_bb_inc_eur

union all select 
*
from 
q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_inc_qty
select *
from t_bb_inc_qty;

----------------------------------------------------------------------------------------------------
q_bb_inc_qty_crosstab
transform sum(q_bb_inc_qty.inc_base_qty) as inc_base_qty
select q_bb_inc_qty.rep_month, q_bb_inc_qty.pc, q_bb_inc_qty.l_1, q_bb_inc_qty.l_2, q_bb_inc_qty.l_3, q_bb_inc_qty.l_4, q_bb_inc_qty.l_5, q_bb_inc_qty.l_6
from q_bb_inc_qty
group by q_bb_inc_qty.rep_month, q_bb_inc_qty.pc, q_bb_inc_qty.l_1, q_bb_inc_qty.l_2, q_bb_inc_qty.l_3, q_bb_inc_qty.l_4, q_bb_inc_qty.l_5, q_bb_inc_qty.l_6
order by q_bb_inc_qty.rep_month, q_bb_inc_qty.pc, q_bb_inc_qty.l_1, q_bb_inc_qty.l_2, q_bb_inc_qty.l_3, q_bb_inc_qty.l_4, q_bb_inc_qty.l_5, q_bb_inc_qty.l_6
pivot q_bb_inc_qty.inc_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_inc_total
select q_bb_inc_calculation.rep_month, q_bb_inc_calculation.pc, q_bb_inc_calculation.l_1, q_bb_inc_calculation.l_2, q_bb_inc_calculation.l_3, q_bb_inc_calculation.l_4, q_bb_inc_calculation.l_5, q_bb_inc_calculation.l_6, q_bb_inc_calculation.inc_base_mon, sum(q_bb_inc_calculation.inc_total) as inc_total, q_bb_inc_calculation.currency, q_bb_inc_calculation.key_r_pc_l6
from q_bb_inc_calculation
group by q_bb_inc_calculation.rep_month, q_bb_inc_calculation.pc, q_bb_inc_calculation.l_1, q_bb_inc_calculation.l_2, q_bb_inc_calculation.l_3, q_bb_inc_calculation.l_4, q_bb_inc_calculation.l_5, q_bb_inc_calculation.l_6, q_bb_inc_calculation.inc_base_mon, q_bb_inc_calculation.currency, q_bb_inc_calculation.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_total_mt
select q_bb_inc_total.rep_month, q_bb_inc_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_total.inc_base_mon, q_bb_inc_total.inc_total, q_bb_inc_total.currency, q_bb_inc_total.l_1, q_bb_inc_total.l_2, q_bb_inc_total.l_3, q_bb_inc_total.l_4, q_bb_inc_total.l_5, q_bb_inc_total.l_6, c6_code.desc_tr_l6, q_bb_inc_total.key_r_pc_l6 into t_bb_inc_total_st
from (q_bb_inc_total left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_inc_total.l_1 = c3_code.c_l1) and (q_bb_inc_total.l_2 = c3_code.c_l2) and (q_bb_inc_total.l_3 = c3_code.c_l3)) left join c6_code on (q_bb_inc_total.l_1 = c6_code.c_l1) and (q_bb_inc_total.l_2 = c6_code.c_l2) and (q_bb_inc_total.l_3 = c6_code.c_l3) and (q_bb_inc_total.l_4 = c6_code.c_l4) and (q_bb_inc_total.l_5 = c6_code.c_l5) and (q_bb_inc_total.l_6 = c6_code.c_l6)
group by q_bb_inc_total.rep_month, q_bb_inc_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_total.inc_base_mon, q_bb_inc_total.inc_total, q_bb_inc_total.currency, q_bb_inc_total.l_1, q_bb_inc_total.l_2, q_bb_inc_total.l_3, q_bb_inc_total.l_4, q_bb_inc_total.l_5, q_bb_inc_total.l_6, c6_code.desc_tr_l6, q_bb_inc_total.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_try
select t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6, t_bb_inc_total_st.inc_total, t_bb_inc_total_st.currency, iif([currency]="try",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_try],[inc_total]*[r_try_try])) as try_income, "try" as up_curr_conv, t_bb_inc_total_st.inc_base_mon as [month], t_bb_inc_total_st.key_r_pc_l6
from t_bb_inc_total_st left join mon_curr_rates on (t_bb_inc_total_st.rep_month = mon_curr_rates.rep_month) and (t_bb_inc_total_st.inc_base_mon = mon_curr_rates.month)
order by t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_inc_try_mt
select q_bb_inc_try.rep_month, q_bb_inc_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_try.month, q_bb_inc_try.try_income, q_bb_inc_try.up_curr_conv, q_bb_inc_try.l_1, q_bb_inc_try.l_2, q_bb_inc_try.l_3, q_bb_inc_try.l_4, q_bb_inc_try.l_5, q_bb_inc_try.l_6, c6_code.desc_tr_l6, q_bb_inc_try.key_r_pc_l6 into t_bb_inc_try_st
from (q_bb_inc_try left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_inc_try.l_1 = c3_code.c_l1) and (q_bb_inc_try.l_2 = c3_code.c_l2) and (q_bb_inc_try.l_3 = c3_code.c_l3)) left join c6_code on (q_bb_inc_try.l_1 = c6_code.c_l1) and (q_bb_inc_try.l_2 = c6_code.c_l2) and (q_bb_inc_try.l_3 = c6_code.c_l3) and (q_bb_inc_try.l_4 = c6_code.c_l4) and (q_bb_inc_try.l_5 = c6_code.c_l5) and (q_bb_inc_try.l_6 = c6_code.c_l6)
group by q_bb_inc_try.rep_month, q_bb_inc_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_try.month, q_bb_inc_try.try_income, q_bb_inc_try.up_curr_conv, q_bb_inc_try.l_1, q_bb_inc_try.l_2, q_bb_inc_try.l_3, q_bb_inc_try.l_4, q_bb_inc_try.l_5, q_bb_inc_try.l_6, c6_code.desc_tr_l6, q_bb_inc_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_try_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_inc_try

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_inc_usd
select t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6, t_bb_inc_total_st.inc_total, t_bb_inc_total_st.currency, iif([currency]="usd",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_usd],[inc_total]*[r_usd_usd])) as usd_income, "usd" as up_curr_conv, t_bb_inc_total_st.inc_base_mon as [month], t_bb_inc_total_st.key_r_pc_l6
from t_bb_inc_total_st left join mon_curr_rates on (t_bb_inc_total_st.rep_month = mon_curr_rates.rep_month) and (t_bb_inc_total_st.inc_base_mon = mon_curr_rates.month)
order by t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_inc_usd_mt
select q_bb_inc_usd.rep_month, q_bb_inc_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_usd.month, q_bb_inc_usd.usd_income, q_bb_inc_usd.up_curr_conv, q_bb_inc_usd.l_1, q_bb_inc_usd.l_2, q_bb_inc_usd.l_3, q_bb_inc_usd.l_4, q_bb_inc_usd.l_5, q_bb_inc_usd.l_6, c6_code.desc_tr_l6, q_bb_inc_usd.key_r_pc_l6 into t_bb_inc_usd_st
from (q_bb_inc_usd left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_inc_usd.l_1 = c3_code.c_l1) and (q_bb_inc_usd.l_2 = c3_code.c_l2) and (q_bb_inc_usd.l_3 = c3_code.c_l3)) left join c6_code on (q_bb_inc_usd.l_1 = c6_code.c_l1) and (q_bb_inc_usd.l_2 = c6_code.c_l2) and (q_bb_inc_usd.l_3 = c6_code.c_l3) and (q_bb_inc_usd.l_4 = c6_code.c_l4) and (q_bb_inc_usd.l_5 = c6_code.c_l5) and (q_bb_inc_usd.l_6 = c6_code.c_l6)
group by q_bb_inc_usd.rep_month, q_bb_inc_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_usd.month, q_bb_inc_usd.usd_income, q_bb_inc_usd.up_curr_conv, q_bb_inc_usd.l_1, q_bb_inc_usd.l_2, q_bb_inc_usd.l_3, q_bb_inc_usd.l_4, q_bb_inc_usd.l_5, q_bb_inc_usd.l_6, c6_code.desc_tr_l6, q_bb_inc_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_usd_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_inc_usd

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_inc_with_dummy
select 
		*
	from 
		q_bb_inc_total

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_monthly_curr_rates_activem
select q_bb_qty_activem_works_monthly.rep_month, t_bb_mon_curr_rates.r_eur_try, t_bb_mon_curr_rates.r_eur_usd, t_bb_mon_curr_rates.r_usd_eur, t_bb_mon_curr_rates.r_usd_try, q_bb_qty_activem_works_monthly.exp_base_mon
from q_bb_qty_activem_works_monthly left join t_bb_mon_curr_rates on (q_bb_qty_activem_works_monthly.pc = t_bb_mon_curr_rates.p_code) and (q_bb_qty_activem_works_monthly.rep_month = t_bb_mon_curr_rates.rep_month) and (q_bb_qty_activem_works_monthly.exp_base_mon = t_bb_mon_curr_rates.month)
group by q_bb_qty_activem_works_monthly.rep_month, t_bb_mon_curr_rates.r_eur_try, t_bb_mon_curr_rates.r_eur_usd, t_bb_mon_curr_rates.r_usd_eur, t_bb_mon_curr_rates.r_usd_try, q_bb_qty_activem_works_monthly.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_monthly_curr_rates_inc
select q_bb_qty_activem_works_monthly.rep_month, q_bb_qty_activem_works_monthly.pc, q_bb_qty_activem_works_monthly.exp_base_mon, [q_bb_monthly_curr_rates_activem].[r_eur_try]/[q_bb_curr_base_val].[r_eur_try]-1 as rt_eur_try, [q_bb_monthly_curr_rates_activem].[r_eur_usd]/[q_bb_curr_base_val].[r_eur_usd]-1 as rt_eur_usd, [q_bb_monthly_curr_rates_activem].[r_usd_try]/[q_bb_curr_base_val].[r_usd_try]-1 as rt_usd_try, [q_bb_monthly_curr_rates_activem].[r_usd_eur]/[q_bb_curr_base_val].[r_usd_eur]-1 as rt_usd_eur
from (q_bb_qty_activem_works_monthly left join q_bb_monthly_curr_rates_activem on (q_bb_qty_activem_works_monthly.exp_base_mon = q_bb_monthly_curr_rates_activem.exp_base_mon) and (q_bb_qty_activem_works_monthly.rep_month = q_bb_monthly_curr_rates_activem.rep_month)) left join q_bb_curr_base_val on (q_bb_qty_activem_works_monthly.pc = q_bb_curr_base_val.pc) and (q_bb_qty_activem_works_monthly.rep_month = q_bb_curr_base_val.rep_month)
group by q_bb_qty_activem_works_monthly.rep_month, q_bb_qty_activem_works_monthly.pc, q_bb_qty_activem_works_monthly.exp_base_mon, [q_bb_monthly_curr_rates_activem].[r_eur_try]/[q_bb_curr_base_val].[r_eur_try]-1, [q_bb_monthly_curr_rates_activem].[r_eur_usd]/[q_bb_curr_base_val].[r_eur_usd]-1, [q_bb_monthly_curr_rates_activem].[r_usd_try]/[q_bb_curr_base_val].[r_usd_try]-1, [q_bb_monthly_curr_rates_activem].[r_usd_eur]/[q_bb_curr_base_val].[r_usd_eur]-1;

----------------------------------------------------------------------------------------------------
q_bb_pr_wbs
select t_bb_inc_total_st.rep_month
	,t_bb_inc_total_st.pc
	,t_bb_inc_total_st.l_1
	,t_bb_inc_total_st.l_2
	,t_bb_inc_total_st.l_3
	,t_bb_inc_total_st.l_4
	,t_bb_inc_total_st.l_5
	,t_bb_inc_total_st.l_6
	,t_bb_inc_total_st.currency
	,t_bb_inc_total_st.inc_base_mon as [month] 
	,t_bb_inc_total_st.key_r_pc_l6
from t_bb_inc_total_st 
group by t_bb_inc_total_st.rep_month
	,t_bb_inc_total_st.pc
	,t_bb_inc_total_st.l_1
	,t_bb_inc_total_st.l_2
	,t_bb_inc_total_st.l_3
	,t_bb_inc_total_st.l_4
	,t_bb_inc_total_st.l_5
	,t_bb_inc_total_st.l_6
	,t_bb_inc_total_st.currency
	,t_bb_inc_total_st.inc_base_mon 
	,t_bb_inc_total_st.key_r_pc_l6
having (((sum(t_bb_inc_total_st.[inc_total]))<>0)) 
union select t_bb_exp_total_st.rep_month
	,t_bb_exp_total_st.pc
	,t_bb_exp_total_st.l_1
	,t_bb_exp_total_st.l_2
	,t_bb_exp_total_st.l_3
	,t_bb_exp_total_st.l_4
	,t_bb_exp_total_st.l_5
	,t_bb_exp_total_st.l_6
	,t_bb_exp_total_st.up_curr
	,t_bb_exp_total_st.month as [month] 
	,t_bb_exp_total_st.key_r_pc_l6
from t_bb_exp_total_st 
group by t_bb_exp_total_st.rep_month
	,t_bb_exp_total_st.pc
	,t_bb_exp_total_st.l_1
	,t_bb_exp_total_st.l_2
	,t_bb_exp_total_st.l_3
	,t_bb_exp_total_st.l_4
	,t_bb_exp_total_st.l_5
	,t_bb_exp_total_st.l_6
	,t_bb_exp_total_st.up_curr
	,t_bb_exp_total_st.month 
	,t_bb_exp_total_st.key_r_pc_l6	
having (((sum(t_bb_exp_total_st.[total_expense]))<>0));

----------------------------------------------------------------------------------------------------
q_bb_profit
select q_bb_pr_wbs.rep_month, q_bb_pr_wbs.pc, q_bb_pr_wbs.l_1, q_bb_pr_wbs.l_2, q_bb_pr_wbs.l_3, q_bb_pr_wbs.l_4, q_bb_pr_wbs.l_5, q_bb_pr_wbs.l_6, q_bb_pr_wbs.currency, q_bb_pr_wbs.month, iif([inc_total] is null,0,[inc_total]) as income, iif([total_expense] is null,0,[total_expense]) as expense, [income]-[expense] as profit, q_bb_pr_wbs.key_r_pc_l6
from (q_bb_pr_wbs left join t_bb_inc_total_st on (q_bb_pr_wbs.currency = t_bb_inc_total_st.currency) and (q_bb_pr_wbs.month = t_bb_inc_total_st.inc_base_mon) and (q_bb_pr_wbs.key_r_pc_l6 = t_bb_inc_total_st.key_r_pc_l6)) left join t_bb_exp_total_st on (q_bb_pr_wbs.currency = t_bb_exp_total_st.up_curr) and (q_bb_pr_wbs.month = t_bb_exp_total_st.month) and (q_bb_pr_wbs.key_r_pc_l6 = t_bb_exp_total_st.key_r_pc_l6)
order by q_bb_pr_wbs.rep_month, q_bb_pr_wbs.pc, q_bb_pr_wbs.l_1, q_bb_pr_wbs.l_2, q_bb_pr_wbs.l_3, q_bb_pr_wbs.l_4, q_bb_pr_wbs.l_5, q_bb_pr_wbs.l_6, q_bb_pr_wbs.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_dist_eur_with_dummy
transform sum(q_bb_profit_eur_with_dummy.profit) as profit
select q_bb_profit_eur_with_dummy.rep_month, q_bb_profit_eur_with_dummy.pc, q_bb_profit_eur_with_dummy.l_1, q_bb_profit_eur_with_dummy.l_2, q_bb_profit_eur_with_dummy.l_3, q_bb_profit_eur_with_dummy.l_4, q_bb_profit_eur_with_dummy.l_5, q_bb_profit_eur_with_dummy.l_6, q_bb_profit_eur_with_dummy.curr
from q_bb_profit_eur_with_dummy
group by q_bb_profit_eur_with_dummy.rep_month, q_bb_profit_eur_with_dummy.pc, q_bb_profit_eur_with_dummy.l_1, q_bb_profit_eur_with_dummy.l_2, q_bb_profit_eur_with_dummy.l_3, q_bb_profit_eur_with_dummy.l_4, q_bb_profit_eur_with_dummy.l_5, q_bb_profit_eur_with_dummy.l_6, q_bb_profit_eur_with_dummy.curr
order by q_bb_profit_eur_with_dummy.rep_month, q_bb_profit_eur_with_dummy.pc, q_bb_profit_eur_with_dummy.l_1, q_bb_profit_eur_with_dummy.l_2, q_bb_profit_eur_with_dummy.l_3, q_bb_profit_eur_with_dummy.l_4, q_bb_profit_eur_with_dummy.l_5, q_bb_profit_eur_with_dummy.l_6
pivot q_bb_profit_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_dist_try_with_dummy
transform sum(q_bb_profit_try_with_dummy.profit) as profit
select q_bb_profit_try_with_dummy.rep_month, q_bb_profit_try_with_dummy.pc, q_bb_profit_try_with_dummy.l_1, q_bb_profit_try_with_dummy.l_2, q_bb_profit_try_with_dummy.l_3, q_bb_profit_try_with_dummy.l_4, q_bb_profit_try_with_dummy.l_5, q_bb_profit_try_with_dummy.l_6, q_bb_profit_try_with_dummy.curr
from q_bb_profit_try_with_dummy
group by q_bb_profit_try_with_dummy.rep_month, q_bb_profit_try_with_dummy.pc, q_bb_profit_try_with_dummy.l_1, q_bb_profit_try_with_dummy.l_2, q_bb_profit_try_with_dummy.l_3, q_bb_profit_try_with_dummy.l_4, q_bb_profit_try_with_dummy.l_5, q_bb_profit_try_with_dummy.l_6, q_bb_profit_try_with_dummy.curr
order by q_bb_profit_try_with_dummy.rep_month, q_bb_profit_try_with_dummy.pc, q_bb_profit_try_with_dummy.l_1, q_bb_profit_try_with_dummy.l_2, q_bb_profit_try_with_dummy.l_3, q_bb_profit_try_with_dummy.l_4, q_bb_profit_try_with_dummy.l_5, q_bb_profit_try_with_dummy.l_6
pivot q_bb_profit_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_dist_usd_with_dummy
transform sum(q_bb_profit_usd_with_dummy.profit) as profit
select q_bb_profit_usd_with_dummy.rep_month, q_bb_profit_usd_with_dummy.pc, q_bb_profit_usd_with_dummy.l_1, q_bb_profit_usd_with_dummy.l_2, q_bb_profit_usd_with_dummy.l_3, q_bb_profit_usd_with_dummy.l_4, q_bb_profit_usd_with_dummy.l_5, q_bb_profit_usd_with_dummy.l_6, q_bb_profit_usd_with_dummy.curr
from q_bb_profit_usd_with_dummy
group by q_bb_profit_usd_with_dummy.rep_month, q_bb_profit_usd_with_dummy.pc, q_bb_profit_usd_with_dummy.l_1, q_bb_profit_usd_with_dummy.l_2, q_bb_profit_usd_with_dummy.l_3, q_bb_profit_usd_with_dummy.l_4, q_bb_profit_usd_with_dummy.l_5, q_bb_profit_usd_with_dummy.l_6, q_bb_profit_usd_with_dummy.curr
order by q_bb_profit_usd_with_dummy.rep_month, q_bb_profit_usd_with_dummy.pc, q_bb_profit_usd_with_dummy.l_1, q_bb_profit_usd_with_dummy.l_2, q_bb_profit_usd_with_dummy.l_3, q_bb_profit_usd_with_dummy.l_4, q_bb_profit_usd_with_dummy.l_5, q_bb_profit_usd_with_dummy.l_6
pivot q_bb_profit_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_dist_with_dummy
transform sum(q_bb_profit_with_dummy.profit) as sumofprofit
select q_bb_profit_with_dummy.rep_month, q_bb_profit_with_dummy.pc, q_bb_profit_with_dummy.l_1, q_bb_profit_with_dummy.l_2, q_bb_profit_with_dummy.l_3, q_bb_profit_with_dummy.l_4, q_bb_profit_with_dummy.l_5, q_bb_profit_with_dummy.l_6, q_bb_profit_with_dummy.curr
from q_bb_profit_with_dummy
group by q_bb_profit_with_dummy.rep_month, q_bb_profit_with_dummy.pc, q_bb_profit_with_dummy.l_1, q_bb_profit_with_dummy.l_2, q_bb_profit_with_dummy.l_3, q_bb_profit_with_dummy.l_4, q_bb_profit_with_dummy.l_5, q_bb_profit_with_dummy.l_6, q_bb_profit_with_dummy.curr
order by q_bb_profit_with_dummy.rep_month, q_bb_profit_with_dummy.pc, q_bb_profit_with_dummy.l_1, q_bb_profit_with_dummy.l_2, q_bb_profit_with_dummy.l_3, q_bb_profit_with_dummy.l_4, q_bb_profit_with_dummy.l_5, q_bb_profit_with_dummy.l_6, q_bb_profit_with_dummy.month
pivot q_bb_profit_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_eur
select t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6, t_bb_profit_total_st.month, "eur" as [currency], iif([t_bb_profit_total_st].[currency]="usd",[t_bb_profit_total_st].[income]*[r_usd_eur],iif([t_bb_profit_total_st].[currency]="try",[t_bb_profit_total_st].[income]*[r_try_eur],[t_bb_profit_total_st].[income])) as income, iif([t_bb_profit_total_st].[currency]="usd",[t_bb_profit_total_st].[expense]*[r_usd_eur],iif([t_bb_profit_total_st].[currency]="try",[t_bb_profit_total_st].[expense]*[r_try_eur],[t_bb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_bb_profit_total_st.key_r_pc_l6
from t_bb_profit_total_st left join mon_curr_rates on (t_bb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_bb_profit_total_st.month = mon_curr_rates.month)
order by t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_profit_eur_mt
select q_bb_profit_eur.rep_month, q_bb_profit_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_eur.month, q_bb_profit_eur.expense, q_bb_profit_eur.income, q_bb_profit_eur.currency, q_bb_profit_eur.l_1, q_bb_profit_eur.l_2, q_bb_profit_eur.l_3, q_bb_profit_eur.l_4, q_bb_profit_eur.l_5, q_bb_profit_eur.l_6, q_bb_profit_eur.profit, c6_code.desc_tr_l6, q_bb_profit_eur.key_r_pc_l6 into t_bb_profit_eur_st
from ((q_bb_profit_eur left join c3_code on (q_bb_profit_eur.l_3 = c3_code.c_l3) and (q_bb_profit_eur.l_2 = c3_code.c_l2) and (q_bb_profit_eur.l_1 = c3_code.c_l1)) left join c2_code on (q_bb_profit_eur.l_2 = c2_code.c_l2) and (q_bb_profit_eur.l_1 = c2_code.c_l1)) left join c6_code on (q_bb_profit_eur.l_6 = c6_code.c_l6) and (q_bb_profit_eur.l_5 = c6_code.c_l5) and (q_bb_profit_eur.l_4 = c6_code.c_l4) and (q_bb_profit_eur.l_3 = c6_code.c_l3) and (q_bb_profit_eur.l_2 = c6_code.c_l2) and (q_bb_profit_eur.l_1 = c6_code.c_l1)
group by q_bb_profit_eur.rep_month, q_bb_profit_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_eur.month, q_bb_profit_eur.expense, q_bb_profit_eur.income, q_bb_profit_eur.currency, q_bb_profit_eur.l_1, q_bb_profit_eur.l_2, q_bb_profit_eur.l_3, q_bb_profit_eur.l_4, q_bb_profit_eur.l_5, q_bb_profit_eur.l_6, q_bb_profit_eur.profit, c6_code.desc_tr_l6, q_bb_profit_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_profit_eur_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_bb_profit_eur

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_profit_total_mt
select q_bb_profit.rep_month, q_bb_profit.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit.month, q_bb_profit.expense, q_bb_profit.income, q_bb_profit.currency, q_bb_profit.l_1, q_bb_profit.l_2, q_bb_profit.l_3, q_bb_profit.l_4, q_bb_profit.l_5, q_bb_profit.l_6, q_bb_profit.profit, c6_code.desc_tr_l6, q_bb_profit.key_r_pc_l6 into t_bb_profit_total_st
from ((q_bb_profit left join c3_code on (q_bb_profit.l_3 = c3_code.c_l3) and (q_bb_profit.l_2 = c3_code.c_l2) and (q_bb_profit.l_1 = c3_code.c_l1)) left join c2_code on (q_bb_profit.l_2 = c2_code.c_l2) and (q_bb_profit.l_1 = c2_code.c_l1)) left join c6_code on (q_bb_profit.l_6 = c6_code.c_l6) and (q_bb_profit.l_5 = c6_code.c_l5) and (q_bb_profit.l_4 = c6_code.c_l4) and (q_bb_profit.l_3 = c6_code.c_l3) and (q_bb_profit.l_2 = c6_code.c_l2) and (q_bb_profit.l_1 = c6_code.c_l1)
group by q_bb_profit.rep_month, q_bb_profit.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit.month, q_bb_profit.expense, q_bb_profit.income, q_bb_profit.currency, q_bb_profit.l_1, q_bb_profit.l_2, q_bb_profit.l_3, q_bb_profit.l_4, q_bb_profit.l_5, q_bb_profit.l_6, q_bb_profit.profit, c6_code.desc_tr_l6, q_bb_profit.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_profit_try
select t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6, t_bb_profit_total_st.month, "try" as [currency], iif([t_bb_profit_total_st].[currency]="usd",[t_bb_profit_total_st].[income]*[r_usd_try],iif([t_bb_profit_total_st].[currency]="eur",[t_bb_profit_total_st].[income]*[r_eur_try],[t_bb_profit_total_st].[income])) as income, iif([t_bb_profit_total_st].[currency]="usd",[t_bb_profit_total_st].[expense]*[r_usd_try],iif([t_bb_profit_total_st].[currency]="eur",[t_bb_profit_total_st].[expense]*[r_eur_try],[t_bb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_bb_profit_total_st.key_r_pc_l6
from t_bb_profit_total_st left join mon_curr_rates on (t_bb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_bb_profit_total_st.month = mon_curr_rates.month)
order by t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_profit_try_mt
select q_bb_profit_try.rep_month, q_bb_profit_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_try.month, q_bb_profit_try.expense, q_bb_profit_try.income, q_bb_profit_try.currency, q_bb_profit_try.l_1, q_bb_profit_try.l_2, q_bb_profit_try.l_3, q_bb_profit_try.l_4, q_bb_profit_try.l_5, q_bb_profit_try.l_6, q_bb_profit_try.profit, c6_code.desc_tr_l6, q_bb_profit_try.key_r_pc_l6 into t_bb_profit_try_st
from ((q_bb_profit_try left join c3_code on (q_bb_profit_try.l_3 = c3_code.c_l3) and (q_bb_profit_try.l_2 = c3_code.c_l2) and (q_bb_profit_try.l_1 = c3_code.c_l1)) left join c2_code on (q_bb_profit_try.l_2 = c2_code.c_l2) and (q_bb_profit_try.l_1 = c2_code.c_l1)) left join c6_code on (q_bb_profit_try.l_6 = c6_code.c_l6) and (q_bb_profit_try.l_5 = c6_code.c_l5) and (q_bb_profit_try.l_4 = c6_code.c_l4) and (q_bb_profit_try.l_3 = c6_code.c_l3) and (q_bb_profit_try.l_2 = c6_code.c_l2) and (q_bb_profit_try.l_1 = c6_code.c_l1)
group by q_bb_profit_try.rep_month, q_bb_profit_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_try.month, q_bb_profit_try.expense, q_bb_profit_try.income, q_bb_profit_try.currency, q_bb_profit_try.l_1, q_bb_profit_try.l_2, q_bb_profit_try.l_3, q_bb_profit_try.l_4, q_bb_profit_try.l_5, q_bb_profit_try.l_6, q_bb_profit_try.profit, c6_code.desc_tr_l6, q_bb_profit_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_profit_try_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_bb_profit_try

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_profit_usd
select t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6, t_bb_profit_total_st.month, "usd" as [currency], iif([t_bb_profit_total_st].[currency]="eur",[t_bb_profit_total_st].[income]*[r_eur_usd],iif([t_bb_profit_total_st].[currency]="try",[t_bb_profit_total_st].[income]*[r_try_usd],[t_bb_profit_total_st].[income])) as income, iif([t_bb_profit_total_st].[currency]="eur",[t_bb_profit_total_st].[expense]*[r_eur_usd],iif([t_bb_profit_total_st].[currency]="try",[t_bb_profit_total_st].[expense]*[r_try_usd],[t_bb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_bb_profit_total_st.key_r_pc_l6
from t_bb_profit_total_st left join mon_curr_rates on (t_bb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_bb_profit_total_st.month = mon_curr_rates.month)
order by t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_profit_usd_mt
select q_bb_profit_usd.rep_month, q_bb_profit_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_usd.month, q_bb_profit_usd.expense, q_bb_profit_usd.income, q_bb_profit_usd.currency, q_bb_profit_usd.l_1, q_bb_profit_usd.l_2, q_bb_profit_usd.l_3, q_bb_profit_usd.l_4, q_bb_profit_usd.l_5, q_bb_profit_usd.l_6, q_bb_profit_usd.profit, c6_code.desc_tr_l6, q_bb_profit_usd.key_r_pc_l6 into t_bb_profit_usd_st
from ((q_bb_profit_usd left join c3_code on (q_bb_profit_usd.l_3 = c3_code.c_l3) and (q_bb_profit_usd.l_2 = c3_code.c_l2) and (q_bb_profit_usd.l_1 = c3_code.c_l1)) left join c2_code on (q_bb_profit_usd.l_2 = c2_code.c_l2) and (q_bb_profit_usd.l_1 = c2_code.c_l1)) left join c6_code on (q_bb_profit_usd.l_6 = c6_code.c_l6) and (q_bb_profit_usd.l_5 = c6_code.c_l5) and (q_bb_profit_usd.l_4 = c6_code.c_l4) and (q_bb_profit_usd.l_3 = c6_code.c_l3) and (q_bb_profit_usd.l_2 = c6_code.c_l2) and (q_bb_profit_usd.l_1 = c6_code.c_l1)
group by q_bb_profit_usd.rep_month, q_bb_profit_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_usd.month, q_bb_profit_usd.expense, q_bb_profit_usd.income, q_bb_profit_usd.currency, q_bb_profit_usd.l_1, q_bb_profit_usd.l_2, q_bb_profit_usd.l_3, q_bb_profit_usd.l_4, q_bb_profit_usd.l_5, q_bb_profit_usd.l_6, q_bb_profit_usd.profit, c6_code.desc_tr_l6, q_bb_profit_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_profit_usd_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_bb_profit_usd

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_profit_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency as curr,
month,
profit

from 
q_bb_profit

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr as curr,
g_month as month,
total_expense as profit

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_project_months
select t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_001_projects.r03_s_name as name
from t_bb_profit_total_st left join t_001_projects on t_bb_profit_total_st.pc = t_001_projects.p_code
group by t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_001_projects.r03_s_name
order by t_bb_profit_total_st.rep_month desc;

----------------------------------------------------------------------------------------------------
q_bb_qty_activem_works
select t_bb_qty.key_r_pc_l6, t_bb_qty.exp_base_mon
from t_bb_qty left join t_rep_month on t_bb_qty.rep_month = t_rep_month.rep_month
where (((t_bb_qty.exp_base_mon)>t_rep_month.rep_month_date) and ((t_bb_qty.exp_base_qty)<>0))
order by t_bb_qty.key_r_pc_l6, t_bb_qty.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_qty_activem_works_monthly
select t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.exp_base_mon
from t_bb_qty left join t_rep_month on t_bb_qty.rep_month = t_rep_month.rep_month
where (((t_bb_qty.exp_base_mon)>t_rep_month.rep_month_date) and ((t_bb_qty.exp_base_qty)<>0))
group by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.exp_base_mon
order by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_qty_crosstab
transform sum(t_bb_qty.exp_base_qty) as sumofexp_base_qty
select t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6
from t_bb_qty
group by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6
order by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6
pivot t_bb_qty.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_qty_dummy_full
select t_rep_month.rep_month, q_budget_project_months.pc as p_code, t_bb_exp_dummy_part.l_1, t_bb_exp_dummy_part.l_2, t_bb_exp_dummy_part.l_3, t_bb_exp_dummy_part.l_4, t_bb_exp_dummy_part.l_5, t_bb_exp_dummy_part.l_6, t_months.g_month, t_bb_exp_dummy_part.total_expense, t_bb_exp_dummy_part.up_curr, [q_budget_project_months].[rep_month]+'.'+[pc]+'.'+[l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6] as key_r_pc_l6
from t_months, t_bb_exp_dummy_part, t_rep_month inner join q_budget_project_months on t_rep_month.rep_month = q_budget_project_months.rep_month
group by t_rep_month.rep_month, q_budget_project_months.pc, t_bb_exp_dummy_part.l_1, t_bb_exp_dummy_part.l_2, t_bb_exp_dummy_part.l_3, t_bb_exp_dummy_part.l_4, t_bb_exp_dummy_part.l_5, t_bb_exp_dummy_part.l_6, t_months.g_month, t_bb_exp_dummy_part.total_expense, t_bb_exp_dummy_part.up_curr, [q_budget_project_months].[rep_month]+'.'+[pc]+'.'+[l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6];

----------------------------------------------------------------------------------------------------
q_bb_res_up_market_coeff
select q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.rs_l1 as r_1_code, q_bb_up_pre_coeff_activem_indexes.rs_l2 as r_2_code, q_bb_up_pre_coeff_activem_indexes.rs_l3 as r_3_code, q_bb_up_pre_coeff_activem_indexes.rs_l4 as r_4_code, (1+[w_ufe]*[r_ufe])*(1+[w_tufe]*[r_tufe])*(1+[w_inf_usd]*[r_inf_usd])*(1+[w_inf_eur]*[r_inf_eur])*(1+[w_metal]*[r_metal])*(1+[w_petrol]*[r_petrol])*(1+[w_cement]*[r_cement])*(1+[w_electricity]*[r_electricity]) as up_cost_coeff, q_bb_up_pre_coeff_activem_indexes.exp_base_mon as g_month, q_bb_up_pre_coeff_activem_indexes.up_cost, q_bb_up_pre_coeff_activem_indexes.an_rs_quantity, r4_code.currency, q_bb_up_pre_coeff_activem_indexes.key_r4_simple, q_bb_up_pre_coeff_activem_indexes.key_r4, q_bb_up_pre_coeff_activem_indexes.key_r_pc_l6, q_bb_up_pre_coeff_activem_indexes.key_full, [key_full] & "." & [q_bb_up_pre_coeff_activem_indexes].[rs_currency] & "." & [q_bb_up_pre_coeff_activem_indexes].[exp_base_mon] as key_full_comb
from q_bb_up_pre_coeff_activem_indexes left join r4_code on q_bb_up_pre_coeff_activem_indexes.key_r4_simple = r4_code.key_r4_simple
group by q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.rs_l1, q_bb_up_pre_coeff_activem_indexes.rs_l2, q_bb_up_pre_coeff_activem_indexes.rs_l3, q_bb_up_pre_coeff_activem_indexes.rs_l4, (1+[w_ufe]*[r_ufe])*(1+[w_tufe]*[r_tufe])*(1+[w_inf_usd]*[r_inf_usd])*(1+[w_inf_eur]*[r_inf_eur])*(1+[w_metal]*[r_metal])*(1+[w_petrol]*[r_petrol])*(1+[w_cement]*[r_cement])*(1+[w_electricity]*[r_electricity]), q_bb_up_pre_coeff_activem_indexes.exp_base_mon, q_bb_up_pre_coeff_activem_indexes.up_cost, q_bb_up_pre_coeff_activem_indexes.an_rs_quantity, r4_code.currency, q_bb_up_pre_coeff_activem_indexes.key_r4_simple, q_bb_up_pre_coeff_activem_indexes.key_r4, q_bb_up_pre_coeff_activem_indexes.key_r_pc_l6, q_bb_up_pre_coeff_activem_indexes.key_full, [key_full] & "." & [q_bb_up_pre_coeff_activem_indexes].[rs_currency] & "." & [q_bb_up_pre_coeff_activem_indexes].[exp_base_mon]
order by q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.rs_l1, q_bb_up_pre_coeff_activem_indexes.rs_l2, q_bb_up_pre_coeff_activem_indexes.rs_l3, q_bb_up_pre_coeff_activem_indexes.rs_l4, q_bb_up_pre_coeff_activem_indexes.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_unit_price
select q_bb_up_coeff.rep_month, q_bb_up_coeff.up_pr_code as p01_code, q_bb_up_coeff.l_1, q_bb_up_coeff.l_2, q_bb_up_coeff.l_3, q_bb_up_coeff.l_4, q_bb_up_coeff.l_5, q_bb_up_coeff.l_6, q_bb_up_coeff.g_month as [month], q_bb_up_coeff.g_month, q_bb_up_coeff.rs_currency as up_curr, sum([up_cost]*[an_rs_quantity]*[up_cost_coeff_all]) as unit_price_planned_coeff, q_bb_up_coeff.key_r_pc_l6
from q_bb_up_coeff
group by q_bb_up_coeff.rep_month, q_bb_up_coeff.up_pr_code, q_bb_up_coeff.l_1, q_bb_up_coeff.l_2, q_bb_up_coeff.l_3, q_bb_up_coeff.l_4, q_bb_up_coeff.l_5, q_bb_up_coeff.l_6, q_bb_up_coeff.g_month, q_bb_up_coeff.rs_currency, q_bb_up_coeff.key_r_pc_l6, q_bb_up_coeff.g_month
order by q_bb_up_coeff.rep_month, q_bb_up_coeff.up_pr_code, q_bb_up_coeff.l_1, q_bb_up_coeff.l_2, q_bb_up_coeff.l_3, q_bb_up_coeff.l_4, q_bb_up_coeff.l_5, q_bb_up_coeff.l_6, q_bb_up_coeff.g_month, q_bb_up_coeff.g_month;

----------------------------------------------------------------------------------------------------
q_bb_unit_price_crosstab
transform sum(q_bb_unit_price.unit_price_planned_coeff) as sumofunit_price_planned_coeff
select q_bb_unit_price.rep_month, q_bb_unit_price.l_1, q_bb_unit_price.l_2, q_bb_unit_price.l_3, q_bb_unit_price.l_4, q_bb_unit_price.l_5, q_bb_unit_price.l_6, q_bb_unit_price.up_curr, q_bb_unit_price.p01_code
from q_bb_unit_price
group by q_bb_unit_price.rep_month, q_bb_unit_price.l_1, q_bb_unit_price.l_2, q_bb_unit_price.l_3, q_bb_unit_price.l_4, q_bb_unit_price.l_5, q_bb_unit_price.l_6, q_bb_unit_price.up_curr, q_bb_unit_price.p01_code
pivot q_bb_unit_price.month;

----------------------------------------------------------------------------------------------------
q_bb_up_check
select q_bb_exp.rep_month, q_bb_exp.pc, q_bb_exp.l_1, q_bb_exp.l_2, q_bb_exp.l_3, q_bb_exp.l_4, q_bb_exp.l_5, q_bb_exp.l_6, q_bb_exp.up_curr, sum(q_bb_exp.total_expense) as [total expense], sum(q_bb_qty.exp_base_qty) as quantity, c6_code.unit, q_bb_work_up_without_coeff.unit_price_planned as up_without_coeff, [total expense]/[quantity] as up_average_with_coeff, [up_average_with_coeff]/[up_without_coeff] as up_average_coeff
from ((q_bb_exp left join q_bb_qty on (q_bb_exp.l_6 = q_bb_qty.l_6) and (q_bb_exp.l_5 = q_bb_qty.l_5) and (q_bb_exp.l_4 = q_bb_qty.l_4) and (q_bb_exp.l_3 = q_bb_qty.l_3) and (q_bb_exp.l_2 = q_bb_qty.l_2) and (q_bb_exp.l_1 = q_bb_qty.l_1) and (q_bb_exp.pc = q_bb_qty.pc) and (q_bb_exp.rep_month = q_bb_qty.rep_month)) left join q_bb_work_up_without_coeff on (q_bb_exp.l_6 = q_bb_work_up_without_coeff.l_6) and (q_bb_exp.l_5 = q_bb_work_up_without_coeff.l_5) and (q_bb_exp.l_4 = q_bb_work_up_without_coeff.l_4) and (q_bb_exp.l_3 = q_bb_work_up_without_coeff.l_3) and (q_bb_exp.l_2 = q_bb_work_up_without_coeff.l_2) and (q_bb_exp.l_1 = q_bb_work_up_without_coeff.l_1) and (q_bb_exp.pc = q_bb_work_up_without_coeff.pc) and (q_bb_exp.rep_month = q_bb_work_up_without_coeff.rep_month)) left join c6_code on (q_bb_exp.l_6 = c6_code.[c_l6]) and (q_bb_exp.l_5 = c6_code.[c_l5]) and (q_bb_exp.l_4 = c6_code.[c_l4]) and (q_bb_exp.l_3 = c6_code.[c_l3]) and (q_bb_exp.l_2 = c6_code.[c_l2]) and (q_bb_exp.l_1 = c6_code.[c_l1])
group by q_bb_exp.rep_month, q_bb_exp.pc, q_bb_exp.l_1, q_bb_exp.l_2, q_bb_exp.l_3, q_bb_exp.l_4, q_bb_exp.l_5, q_bb_exp.l_6, q_bb_exp.up_curr, c6_code.unit, q_bb_work_up_without_coeff.unit_price_planned;

----------------------------------------------------------------------------------------------------
q_bb_up_coeff
select q_bb_res_up_market_coeff.rep_month, q_bb_res_up_market_coeff.pc as up_pr_code, q_bb_res_up_market_coeff.l_1, q_bb_res_up_market_coeff.l_2, q_bb_res_up_market_coeff.l_3, q_bb_res_up_market_coeff.l_4, q_bb_res_up_market_coeff.l_5, q_bb_res_up_market_coeff.l_6, q_bb_res_up_market_coeff.r_1_code as up_rs_l1, q_bb_res_up_market_coeff.r_2_code as up_rs_l2, q_bb_res_up_market_coeff.r_3_code as up_rs_l3, q_bb_res_up_market_coeff.r_4_code as up_rs_l4, q_bb_res_up_market_coeff.g_month, q_bb_res_up_market_coeff.up_cost_coeff, q_bb_curr_escalation_rates.k_usd, q_bb_curr_escalation_rates.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6) as up_cost_coeff_all, q_bb_res_up_market_coeff.up_cost, q_bb_res_up_market_coeff.currency as rs_currency, q_bb_res_up_market_coeff.key_full, q_bb_res_up_market_coeff.an_rs_quantity, q_bb_res_up_market_coeff.key_r_pc_l6
from q_bb_res_up_market_coeff left join q_bb_curr_escalation_rates on q_bb_res_up_market_coeff.key_full_comb = q_bb_curr_escalation_rates.key_full_comb
group by q_bb_res_up_market_coeff.rep_month, q_bb_res_up_market_coeff.pc, q_bb_res_up_market_coeff.l_1, q_bb_res_up_market_coeff.l_2, q_bb_res_up_market_coeff.l_3, q_bb_res_up_market_coeff.l_4, q_bb_res_up_market_coeff.l_5, q_bb_res_up_market_coeff.l_6, q_bb_res_up_market_coeff.r_1_code, q_bb_res_up_market_coeff.r_2_code, q_bb_res_up_market_coeff.r_3_code, q_bb_res_up_market_coeff.r_4_code, q_bb_res_up_market_coeff.g_month, q_bb_res_up_market_coeff.up_cost_coeff, q_bb_curr_escalation_rates.k_usd, q_bb_curr_escalation_rates.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6), q_bb_res_up_market_coeff.up_cost, q_bb_res_up_market_coeff.currency, q_bb_res_up_market_coeff.key_full, q_bb_res_up_market_coeff.an_rs_quantity, q_bb_res_up_market_coeff.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_up_comp
select t_bb_res_up_add.rep_month, t_bb_res_up_add.up_pr_code, t_bb_res_up_add.up_rs_l1, t_bb_res_up_add.up_rs_l2, t_bb_res_up_add.up_rs_l3, t_bb_res_up_add.up_rs_l4, t_bb_res_up_add.up_date, t_bb_res_up_add.up_cost, t_bb_res_up_add.up_curr
from t_bb_res_up_add left join t_bb_res_up on (t_bb_res_up_add.rep_month = t_bb_res_up.rep_month) and (t_bb_res_up_add.up_pr_code = t_bb_res_up.up_pr_code) and (t_bb_res_up_add.up_rs_l1 = t_bb_res_up.up_rs_l1) and (t_bb_res_up_add.up_rs_l2 = t_bb_res_up.up_rs_l2) and (t_bb_res_up_add.up_rs_l3 = t_bb_res_up.up_rs_l3) and (t_bb_res_up_add.up_rs_l4 = t_bb_res_up.up_rs_l4) and (t_bb_res_up_add.up_date = t_bb_res_up.up_date) and (t_bb_res_up_add.up_cost = t_bb_res_up.up_cost) and (t_bb_res_up_add.up_curr = t_bb_res_up.up_curr)
where (((t_bb_res_up.up_pr_code) is null))
order by t_bb_res_up_add.rep_month, t_bb_res_up_add.up_pr_code, t_bb_res_up_add.up_rs_l1, t_bb_res_up_add.up_rs_l2, t_bb_res_up_add.up_rs_l3, t_bb_res_up_add.up_rs_l4, t_bb_res_up_add.up_date, t_bb_res_up_add.up_cost, t_bb_res_up_add.up_curr;

----------------------------------------------------------------------------------------------------
q_bb_up_pre_coeff_activem_indexes
select q_bb_analysis_activem_with_prices.rep_month, q_bb_analysis_activem_with_prices.pc, q_bb_analysis_activem_with_prices.l_1, q_bb_analysis_activem_with_prices.l_2, q_bb_analysis_activem_with_prices.l_3, q_bb_analysis_activem_with_prices.l_4, q_bb_analysis_activem_with_prices.l_5, q_bb_analysis_activem_with_prices.l_6, q_bb_analysis_activem_with_prices.exp_base_mon, q_bb_analysis_activem_with_prices.rs_l1, q_bb_analysis_activem_with_prices.rs_l2, q_bb_analysis_activem_with_prices.rs_l3, q_bb_analysis_activem_with_prices.rs_l4, t_bb_indexes.r_ufe, t_bb_indexes.r_tufe, t_bb_indexes.r_inf_usd, t_bb_indexes.r_inf_eur, t_bb_indexes.r_metal, t_bb_indexes.r_petrol, t_bb_indexes.r_cement, t_bb_indexes.r_electricity, q_bb_analysis_activem_with_prices.currency as rs_currency, q_bb_analysis_activem_with_prices.an_rs_quantity, q_bb_analysis_activem_with_prices.up_cost, q_bb_analysis_activem_with_prices.key_r4_simple, q_bb_analysis_activem_with_prices.key_r4, q_bb_analysis_activem_with_prices.key_r_pc_l6, q_bb_analysis_activem_with_prices.key_full
from q_bb_analysis_activem_with_prices left join t_bb_indexes on (q_bb_analysis_activem_with_prices.pc = t_bb_indexes.p_code) and (q_bb_analysis_activem_with_prices.rep_month = t_bb_indexes.rep_month) and (q_bb_analysis_activem_with_prices.exp_base_mon = t_bb_indexes.g_month);

----------------------------------------------------------------------------------------------------
q_bb_up_with_curr_coeff_crosstab
transform sum(q_bb_work_up_with_curr_coeff.up) as sumofup
select q_bb_work_up_with_curr_coeff.rep_month, q_bb_work_up_with_curr_coeff.pc, q_bb_work_up_with_curr_coeff.l_1, q_bb_work_up_with_curr_coeff.l_2, q_bb_work_up_with_curr_coeff.l_3, q_bb_work_up_with_curr_coeff.l_4, q_bb_work_up_with_curr_coeff.l_5, q_bb_work_up_with_curr_coeff.l_6, q_bb_work_up_with_curr_coeff.rs_currency
from q_bb_work_up_with_curr_coeff
group by q_bb_work_up_with_curr_coeff.rep_month, q_bb_work_up_with_curr_coeff.pc, q_bb_work_up_with_curr_coeff.l_1, q_bb_work_up_with_curr_coeff.l_2, q_bb_work_up_with_curr_coeff.l_3, q_bb_work_up_with_curr_coeff.l_4, q_bb_work_up_with_curr_coeff.l_5, q_bb_work_up_with_curr_coeff.l_6, q_bb_work_up_with_curr_coeff.rs_currency
order by q_bb_work_up_with_curr_coeff.rep_month, q_bb_work_up_with_curr_coeff.pc, q_bb_work_up_with_curr_coeff.l_1, q_bb_work_up_with_curr_coeff.l_2, q_bb_work_up_with_curr_coeff.l_3, q_bb_work_up_with_curr_coeff.l_4, q_bb_work_up_with_curr_coeff.l_5, q_bb_work_up_with_curr_coeff.l_6, q_bb_work_up_with_curr_coeff.month
pivot q_bb_work_up_with_curr_coeff.month;

----------------------------------------------------------------------------------------------------
q_bb_up_with_market_coeff_crosstab
transform sum(q_bb_work_up_with_market_coeff.up_with_coeff) as sumofup_with_coeff
select q_bb_work_up_with_market_coeff.rep_month, q_bb_work_up_with_market_coeff.pc, q_bb_work_up_with_market_coeff.l_1, q_bb_work_up_with_market_coeff.l_2, q_bb_work_up_with_market_coeff.l_3, q_bb_work_up_with_market_coeff.l_4, q_bb_work_up_with_market_coeff.l_5, q_bb_work_up_with_market_coeff.l_6, q_bb_work_up_with_market_coeff.currency
from q_bb_work_up_with_market_coeff
group by q_bb_work_up_with_market_coeff.rep_month, q_bb_work_up_with_market_coeff.pc, q_bb_work_up_with_market_coeff.l_1, q_bb_work_up_with_market_coeff.l_2, q_bb_work_up_with_market_coeff.l_3, q_bb_work_up_with_market_coeff.l_4, q_bb_work_up_with_market_coeff.l_5, q_bb_work_up_with_market_coeff.l_6, q_bb_work_up_with_market_coeff.currency
pivot q_bb_work_up_with_market_coeff.g_month;

----------------------------------------------------------------------------------------------------
q_bb_up_without_coeff_crosstab
transform sum(q_bb_work_up_without_coeff.unit_price_planned) as sumofunit_price_planned
select q_bb_work_up_without_coeff.rep_month, q_bb_work_up_without_coeff.pc, q_bb_work_up_without_coeff.l_1, q_bb_work_up_without_coeff.l_2, q_bb_work_up_without_coeff.l_3, q_bb_work_up_without_coeff.l_4, q_bb_work_up_without_coeff.l_5, q_bb_work_up_without_coeff.l_6, q_bb_work_up_without_coeff.rs_currency
from q_bb_work_up_without_coeff
group by q_bb_work_up_without_coeff.rep_month, q_bb_work_up_without_coeff.pc, q_bb_work_up_without_coeff.l_1, q_bb_work_up_without_coeff.l_2, q_bb_work_up_without_coeff.l_3, q_bb_work_up_without_coeff.l_4, q_bb_work_up_without_coeff.l_5, q_bb_work_up_without_coeff.l_6, q_bb_work_up_without_coeff.rs_currency
pivot q_bb_work_up_without_coeff.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_work_up_with_curr_coeff
select q_bb_analysis_activem_with_prices.rep_month, q_bb_analysis_activem_with_prices.pc, q_bb_analysis_activem_with_prices.l_1, q_bb_analysis_activem_with_prices.l_2, q_bb_analysis_activem_with_prices.l_3, q_bb_analysis_activem_with_prices.l_4, q_bb_analysis_activem_with_prices.l_5, q_bb_analysis_activem_with_prices.l_6, q_bb_analysis_activem_with_prices.exp_base_mon as [month], sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]) as up, q_bb_curr_escalation_rates.rs_currency
from q_bb_analysis_activem_with_prices left join q_bb_curr_escalation_rates on (q_bb_analysis_activem_with_prices.rep_month = q_bb_curr_escalation_rates.rep_month) and (q_bb_analysis_activem_with_prices.pc = q_bb_curr_escalation_rates.pc) and (q_bb_analysis_activem_with_prices.l_1 = q_bb_curr_escalation_rates.l_1) and (q_bb_analysis_activem_with_prices.l_2 = q_bb_curr_escalation_rates.l_2) and (q_bb_analysis_activem_with_prices.l_3 = q_bb_curr_escalation_rates.l_3) and (q_bb_analysis_activem_with_prices.l_4 = q_bb_curr_escalation_rates.l_4) and (q_bb_analysis_activem_with_prices.l_5 = q_bb_curr_escalation_rates.l_5) and (q_bb_analysis_activem_with_prices.l_6 = q_bb_curr_escalation_rates.l_6) and (q_bb_analysis_activem_with_prices.rs_l1 = q_bb_curr_escalation_rates.rs_l1) and (q_bb_analysis_activem_with_prices.rs_l2 = q_bb_curr_escalation_rates.rs_l2) and (q_bb_analysis_activem_with_prices.rs_l3 = q_bb_curr_escalation_rates.rs_l3) and (q_bb_analysis_activem_with_prices.rs_l4 = q_bb_curr_escalation_rates.rs_l4) and (q_bb_analysis_activem_with_prices.currency = q_bb_curr_escalation_rates.rs_currency) and (q_bb_analysis_activem_with_prices.exp_base_mon = q_bb_curr_escalation_rates.month)
group by q_bb_analysis_activem_with_prices.rep_month, q_bb_analysis_activem_with_prices.pc, q_bb_analysis_activem_with_prices.l_1, q_bb_analysis_activem_with_prices.l_2, q_bb_analysis_activem_with_prices.l_3, q_bb_analysis_activem_with_prices.l_4, q_bb_analysis_activem_with_prices.l_5, q_bb_analysis_activem_with_prices.l_6, q_bb_analysis_activem_with_prices.exp_base_mon, q_bb_curr_escalation_rates.rs_currency
order by q_bb_analysis_activem_with_prices.rep_month, q_bb_analysis_activem_with_prices.pc, q_bb_analysis_activem_with_prices.l_1, q_bb_analysis_activem_with_prices.l_2, q_bb_analysis_activem_with_prices.l_3, q_bb_analysis_activem_with_prices.l_4, q_bb_analysis_activem_with_prices.l_5, q_bb_analysis_activem_with_prices.l_6, q_bb_analysis_activem_with_prices.exp_base_mon, sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]);

----------------------------------------------------------------------------------------------------
q_bb_work_up_with_market_coeff
select q_bb_res_up_market_coeff.pc, q_bb_res_up_market_coeff.l_1, q_bb_res_up_market_coeff.l_2, q_bb_res_up_market_coeff.l_3, q_bb_res_up_market_coeff.l_4, q_bb_res_up_market_coeff.l_5, q_bb_res_up_market_coeff.l_6, q_bb_res_up_market_coeff.rep_month, q_bb_res_up_market_coeff.g_month, sum([an_rs_quantity]*[up_cost]*[up_cost_coeff]) as up_with_coeff, q_bb_res_up_market_coeff.currency
from q_bb_res_up_market_coeff
group by q_bb_res_up_market_coeff.pc, q_bb_res_up_market_coeff.l_1, q_bb_res_up_market_coeff.l_2, q_bb_res_up_market_coeff.l_3, q_bb_res_up_market_coeff.l_4, q_bb_res_up_market_coeff.l_5, q_bb_res_up_market_coeff.l_6, q_bb_res_up_market_coeff.rep_month, q_bb_res_up_market_coeff.g_month, q_bb_res_up_market_coeff.currency;

----------------------------------------------------------------------------------------------------
q_bb_work_up_without_coeff
select sum(([an_rs_quantity]*[up_cost])) as unit_price_planned, q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.exp_base_mon, q_bb_up_pre_coeff_activem_indexes.rs_currency
from q_bb_up_pre_coeff_activem_indexes
group by q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.exp_base_mon, q_bb_up_pre_coeff_activem_indexes.rs_currency;

----------------------------------------------------------------------------------------------------
q_budget_allprojects_detailed_report
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.pc, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5] as l5_comb, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6] as l_comb, q_cb_allprojects_report_data.desc_tr_l6, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem, t_001_projects.r03_s_name
from q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.pc, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5], [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6], q_cb_allprojects_report_data.desc_tr_l6, q_cb_allprojects_report_data.currency, t_001_projects.r03_s_name
having ((q_cb_allprojects_report_data.rep_month)=[reports]![r_cb_summary_lvl_5]![text200]) and q_cb_allprojects_report_data.[l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]='d.01.01.15.81' and ((q_cb_allprojects_report_data.pc)=[reports]![r_cb_summary_lvl_5]![text193]);

----------------------------------------------------------------------------------------------------
q_budget_allprojects_report
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.pc, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.desc_tr_l5, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from q_cb_allprojects_report_data
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.pc, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.desc_tr_l5, q_cb_allprojects_report_data.currency
having q_cb_allprojects_report_data.rep_month=[reports]![r_cb_summary_lvl_5]![text200] and q_cb_allprojects_report_data.pc=[reports]![r_cb_summary_lvl_5]![text193] and q_cb_allprojects_report_data.l_1=[reports]![r_cb_summary_lvl_5]![text61] and q_cb_allprojects_report_data.l_2=[reports]![r_cb_summary_lvl_5]![text110] and q_cb_allprojects_report_data.l_3=[reports]![r_cb_summary_lvl_5]![text111] and q_cb_allprojects_report_data.l_4=[reports]![r_cb_summary_lvl_5]![text194];

----------------------------------------------------------------------------------------------------
q_budget_comp_report
select q_cb_sum_cons_data.l_1, q_cb_sum_cons_data.l_2, q_cb_sum_cons_data.l_3, q_cb_sum_cons_data.desc_tr_l2, q_cb_sum_cons_data.desc_tr_l3, q_cb_sum_cons_data.up_curr, sum(q_cb_sum_cons_data.incomegt_first) as incomegt_first, sum(q_cb_sum_cons_data.expensegt_first) as expensegt_first, sum(q_cb_sum_cons_data.profitgt_first) as profitgt_first, sum(q_cb_sum_cons_data.incomegt_second) as incomegt_second, sum(q_cb_sum_cons_data.expensegt_second) as expensegt_second, sum(q_cb_sum_cons_data.profitgt_second) as profitgt_second, sum(q_cb_sum_cons_data.incomediffgt) as incomediffgt, sum(q_cb_sum_cons_data.expensediff_gt) as expensediff_gt, sum(q_cb_sum_cons_data.profitdiff_gt) as profitdiff_gt, sum(q_cb_sum_cons_data.incomert_first) as incomert_first, sum(q_cb_sum_cons_data.expensert_first) as expensert_first, sum(q_cb_sum_cons_data.profitrt_first) as profitrt_first, sum(q_cb_sum_cons_data.incomert_second) as incomert_second, sum(q_cb_sum_cons_data.expensert_second) as expensert_second, sum(q_cb_sum_cons_data.profitrt_second) as profitrt_second, sum(q_cb_sum_cons_data.incomediffrt) as incomediffrt, sum(q_cb_sum_cons_data.expensediff_rt) as expensediff_rt, sum(q_cb_sum_cons_data.profitdiff_rt) as profitdiff_rt, sum(q_cb_sum_cons_data.incomerem_first) as incomerem_first, sum(q_cb_sum_cons_data.expenserem_first) as expenserem_first, sum(q_cb_sum_cons_data.profitrem_first) as profitrem_first, sum(q_cb_sum_cons_data.incomerem_second) as incomerem_second, sum(q_cb_sum_cons_data.expenserem_second) as expenserem_second, sum(q_cb_sum_cons_data.profitrem_second) as profitrem_second, sum(q_cb_sum_cons_data.incomerem_diff) as incomerem_diff, sum(q_cb_sum_cons_data.expenserem_diff) as expenserem_diff, sum(q_cb_sum_cons_data.profitrem_diff) as profitrem_diff
from q_cb_sum_cons_data
group by q_cb_sum_cons_data.l_1, q_cb_sum_cons_data.l_2, q_cb_sum_cons_data.l_3, q_cb_sum_cons_data.desc_tr_l2, q_cb_sum_cons_data.desc_tr_l3, q_cb_sum_cons_data.up_curr;

----------------------------------------------------------------------------------------------------
q_budget_comp_report_detailed
select [l_1] + '.' + [l_2] + '.' + [l_3] + '.' + [l_4] + '.' + [l_5] + '.' + [l_6] as l6_comb, [l_1] + '.' + [l_2] + '.' + [l_3] + '.' + [l_4] + '.' + [l_5] as l5_comb, q_cb_sum_cons_data.desc_tr_l6, q_cb_sum_cons_data.up_curr, sum(q_cb_sum_cons_data.incomegt_first) as incomegt_first, sum(q_cb_sum_cons_data.expensegt_first) as expensegt_first, sum(q_cb_sum_cons_data.profitgt_first) as profitgt_first, sum(q_cb_sum_cons_data.incomegt_second) as incomegt_second, sum(q_cb_sum_cons_data.expensegt_second) as expensegt_second, sum(q_cb_sum_cons_data.profitgt_second) as profitgt_second, sum(q_cb_sum_cons_data.incomediffgt) as incomediffgt, sum(q_cb_sum_cons_data.expensediff_gt) as expensediff_gt, sum(q_cb_sum_cons_data.profitdiff_gt) as profitdiff_gt, sum(q_cb_sum_cons_data.incomert_first) as incomert_first, sum(q_cb_sum_cons_data.expensert_first) as expensert_first, sum(q_cb_sum_cons_data.profitrt_first) as profitrt_first, sum(q_cb_sum_cons_data.incomert_second) as incomert_second, sum(q_cb_sum_cons_data.expensert_second) as expensert_second, sum(q_cb_sum_cons_data.profitrt_second) as profitrt_second, sum(q_cb_sum_cons_data.incomediffrt) as incomediffrt, sum(q_cb_sum_cons_data.expensediff_rt) as expensediff_rt, sum(q_cb_sum_cons_data.profitdiff_rt) as profitdiff_rt, sum(q_cb_sum_cons_data.incomerem_first) as incomerem_first, sum(q_cb_sum_cons_data.expenserem_first) as expenserem_first, sum(q_cb_sum_cons_data.profitrem_first) as profitrem_first, sum(q_cb_sum_cons_data.incomerem_second) as incomerem_second, sum(q_cb_sum_cons_data.expenserem_second) as expenserem_second, sum(q_cb_sum_cons_data.profitrem_second) as profitrem_second, sum(q_cb_sum_cons_data.incomerem_diff) as incomerem_diff, sum(q_cb_sum_cons_data.expenserem_diff) as expenserem_diff, sum(q_cb_sum_cons_data.profitrem_diff) as profitrem_diff
from q_cb_sum_cons_data
group by [l_1] + '.' + [l_2] + '.' + [l_3] + '.' + [l_4] + '.' + [l_5] + '.' + [l_6], [l_1] + '.' + [l_2] + '.' + [l_3] + '.' + [l_4] + '.' + [l_5], q_cb_sum_cons_data.desc_tr_l6, q_cb_sum_cons_data.up_curr
having q_cb_sum_cons_data.[l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]='d.01.01.40.14';

----------------------------------------------------------------------------------------------------
q_budget_cons_detailed_report
select q_cb_cons_report_data.rep_month, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6] as l_comb, q_cb_cons_report_data.desc_tr_l6, q_cb_cons_report_data.currency, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5] as l5_comb
from q_cb_cons_report_data
group by q_cb_cons_report_data.rep_month, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6], q_cb_cons_report_data.desc_tr_l6, q_cb_cons_report_data.currency, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]
having (((q_cb_cons_report_data.rep_month)=forms!management!cbo_date_consolidated) and ((q_cb_cons_report_data.l_1+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5])='d.01.01.12.21'));

----------------------------------------------------------------------------------------------------
q_budget_cons_report
select q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.l_5, q_cb_cons_report_data.desc_tr_l5, q_cb_cons_report_data.currency, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem
from q_cb_cons_report_data
group by q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.l_5, q_cb_cons_report_data.desc_tr_l5, q_cb_cons_report_data.currency
having (((q_cb_cons_report_data.rep_month)=forms!management!cbo_date_consolidated) and ((q_cb_cons_report_data.l_1)=reports!r_cb_sum_cons_lvl_5!text61) and ((q_cb_cons_report_data.l_2)=reports!r_cb_sum_cons_lvl_5!text110) and ((q_cb_cons_report_data.l_3)=reports!r_cb_sum_cons_lvl_5!text111) and ((q_cb_cons_report_data.l_4)=reports!r_cb_sum_cons_lvl_5!text180));

----------------------------------------------------------------------------------------------------
q_budget_project_months
select 
rep_month,
pc,
name,
'güncel' as budget_type
from q_cb_project_months

union select
rep_month,
pc,
name,
'baz' as budget_type
from q_bb_project_months;

----------------------------------------------------------------------------------------------------
q_budget_wbs_union
select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_first_budget_gt

union

select 
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_second_budget_gt

union

select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_first_budget_rt

union select 
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_second_budget_rt;

----------------------------------------------------------------------------------------------------
q_budget_wbs_union_projects
select 
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_first_budget_gt

union

select 
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_second_budget_gt

union

select 
pc,
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_first_budget_rt

union select 
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_second_budget_rt;

----------------------------------------------------------------------------------------------------
q_cb_active_months_res_qty
select t_pl_analysis.rep_month, t_pl_analysis.p01_code as pc, q_cb_qty_activem_works.exp_cb_mon, t_pl_analysis.key_r4, q_cb_qty_activem_works.key_r_pc_l6, t_pl_analysis.key_full, t_pl_analysis.l_1, t_pl_analysis.l_2, t_pl_analysis.l_3, t_pl_analysis.rs_l1, t_pl_analysis.rs_l2, t_pl_analysis.rs_l3, t_pl_analysis.rs_l4, t_pl_analysis.l_4, t_pl_analysis.l_5, t_pl_analysis.l_6, t_pl_analysis.key_r4_simple, (1+[r_loss])*([t_pl_analysis].[an_rs_quantity]) as an_rs_quantity, t_pl_analysis.r_loss
from q_cb_qty_activem_works left join t_pl_analysis on q_cb_qty_activem_works.key_r_pc_l6 = t_pl_analysis.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_active_months_res_qty_mod
select q_cb_active_months_res_qty.rep_month, q_cb_active_months_res_qty.pc, q_cb_active_months_res_qty.l_1, q_cb_active_months_res_qty.l_2, q_cb_active_months_res_qty.l_3, q_cb_active_months_res_qty.l_4, q_cb_active_months_res_qty.l_5, q_cb_active_months_res_qty.l_6, q_cb_active_months_res_qty.exp_cb_mon, q_cb_active_months_res_qty.rs_l1, q_cb_active_months_res_qty.rs_l2, q_cb_active_months_res_qty.rs_l3, q_cb_active_months_res_qty.rs_l4, r4_code.currency as rs_currency, q_cb_active_months_res_qty.an_rs_quantity, q_cb_active_months_res_qty.key_r4_simple, q_cb_active_months_res_qty.key_full, q_cb_active_months_res_qty.key_r_pc_l6, q_cb_active_months_res_qty.key_r4
from q_cb_active_months_res_qty left join r4_code on q_cb_active_months_res_qty.key_r4_simple = r4_code.key_r4_simple
where (((q_cb_active_months_res_qty.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_allprojects_report_currmonth_data
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, sum(t_cb_profit_usd_st.income) as income, sum(t_cb_profit_usd_st.expense) as expense, sum(t_cb_profit_usd_st.profit) as profit, t_cb_profit_usd_st.currency
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency, t_cb_profit_usd_st.month
having t_cb_profit_usd_st.month<=#2022/07/01#;

----------------------------------------------------------------------------------------------------
q_cb_allprojects_report_data
select q_cb_summary_report_union.rep_month, q_cb_summary_report_union.pc, q_cb_summary_report_union.l_1, q_cb_summary_report_union.l_2, q_cb_summary_report_union.l_3, q_cb_summary_report_union.l_4, q_cb_summary_report_union.l_5, q_cb_summary_report_union.l_6, q_cb_summary_report_union.currency, c2_code.desc_tr_l2, c3_code.desc_tr_l3, sum(iif([q_cb_allprojects_report_endproject_data].[income] is null,"0",[q_cb_allprojects_report_endproject_data].[income])) as incomegt, sum(iif([q_cb_allprojects_report_endproject_data].[expense] is null,"0",[q_cb_allprojects_report_endproject_data].[expense])) as expensegt, [incomegt]-[expensegt] as profitgt, sum(iif([q_cb_summary_report_currmonth_data_group].[income] is null,"0",[q_cb_summary_report_currmonth_data_group].[income])) as incomert, sum(iif([q_cb_summary_report_currmonth_data_group].[expense] is null,"0",[q_cb_summary_report_currmonth_data_group].[expense])) as expensert, sum(iif([q_cb_summary_report_currmonth_data_group].[profit] is null,"0",[q_cb_summary_report_currmonth_data_group].[profit])) as profitrt, [incomegt]-[incomert] as incomerem, [expensegt]-[expensert] as expenserem, [profitgt]-[profitrt] as profitrem, c6_code.desc_tr_l6, c5_code.desc_tr_l5, c4_code.desc_tr_l4
from ((((((q_cb_summary_report_union left join q_cb_allprojects_report_endproject_data on (q_cb_summary_report_union.currency = q_cb_allprojects_report_endproject_data.currency) and (q_cb_summary_report_union.l_6 = q_cb_allprojects_report_endproject_data.l_6) and (q_cb_summary_report_union.l_5 = q_cb_allprojects_report_endproject_data.l_5) and (q_cb_summary_report_union.l_4 = q_cb_allprojects_report_endproject_data.l_4) and (q_cb_summary_report_union.l_3 = q_cb_allprojects_report_endproject_data.l_3) and (q_cb_summary_report_union.l_2 = q_cb_allprojects_report_endproject_data.l_2) and (q_cb_summary_report_union.l_1 = q_cb_allprojects_report_endproject_data.l_1) and (q_cb_summary_report_union.pc = q_cb_allprojects_report_endproject_data.pc) and (q_cb_summary_report_union.rep_month = q_cb_allprojects_report_endproject_data.rep_month)) left join c6_code on (q_cb_summary_report_union.l_6 = c6_code.c_l6) and (q_cb_summary_report_union.l_5 = c6_code.c_l5) and (q_cb_summary_report_union.l_4 = c6_code.c_l4) and (q_cb_summary_report_union.l_3 = c6_code.c_l3) and (q_cb_summary_report_union.l_2 = c6_code.c_l2) and (q_cb_summary_report_union.l_1 = c6_code.c_l1)) left join c3_code on (q_cb_summary_report_union.l_3 = c3_code.c_l3) and (q_cb_summary_report_union.l_2 = c3_code.c_l2) and (q_cb_summary_report_union.l_1 = c3_code.c_l1)) left join c2_code on (q_cb_summary_report_union.l_2 = c2_code.c_l2) and (q_cb_summary_report_union.l_1 = c2_code.c_l1)) left join q_cb_summary_report_currmonth_data_group on (q_cb_summary_report_union.currency = q_cb_summary_report_currmonth_data_group.currency) and (q_cb_summary_report_union.l_6 = q_cb_summary_report_currmonth_data_group.l_6) and (q_cb_summary_report_union.l_5 = q_cb_summary_report_currmonth_data_group.l_5) and (q_cb_summary_report_union.l_4 = q_cb_summary_report_currmonth_data_group.l_4) and (q_cb_summary_report_union.l_3 = q_cb_summary_report_currmonth_data_group.l_3) and (q_cb_summary_report_union.l_2 = q_cb_summary_report_currmonth_data_group.l_2) and (q_cb_summary_report_union.l_1 = q_cb_summary_report_currmonth_data_group.l_1) and (q_cb_summary_report_union.pc = q_cb_summary_report_currmonth_data_group.pc) and (q_cb_summary_report_union.rep_month = q_cb_summary_report_currmonth_data_group.rep_month)) left join c5_code on (q_cb_summary_report_union.l_5 = c5_code.c_l5) and (q_cb_summary_report_union.l_4 = c5_code.c_l4) and (q_cb_summary_report_union.l_3 = c5_code.c_l3) and (q_cb_summary_report_union.l_2 = c5_code.c_l2) and (q_cb_summary_report_union.l_1 = c5_code.c_l1)) left join c4_code on (q_cb_summary_report_union.l_4 = c4_code.c_l4) and (q_cb_summary_report_union.l_3 = c4_code.c_l3) and (q_cb_summary_report_union.l_2 = c4_code.c_l2) and (q_cb_summary_report_union.l_1 = c4_code.c_l1)
group by q_cb_summary_report_union.rep_month, q_cb_summary_report_union.pc, q_cb_summary_report_union.l_1, q_cb_summary_report_union.l_2, q_cb_summary_report_union.l_3, q_cb_summary_report_union.l_4, q_cb_summary_report_union.l_5, q_cb_summary_report_union.l_6, q_cb_summary_report_union.currency, c2_code.desc_tr_l2, c3_code.desc_tr_l3, c6_code.desc_tr_l6, c5_code.desc_tr_l5, c4_code.desc_tr_l4;

----------------------------------------------------------------------------------------------------
q_cb_allprojects_report_endproject_data
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, sum(t_cb_profit_usd_st.income) as income, sum(t_cb_profit_usd_st.expense) as expense, sum(t_cb_profit_usd_st.profit) as profit, t_cb_profit_usd_st.currency
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency;

----------------------------------------------------------------------------------------------------
q_cb_analysis_activem_with_prices
select q_cb_active_months_res_qty.rep_month, q_cb_active_months_res_qty.pc, q_cb_active_months_res_qty.exp_cb_mon, q_cb_active_months_res_qty.an_rs_quantity, q_cb_active_months_res_qty.key_r4, q_cb_active_months_res_qty.key_r_pc_l6, q_cb_active_months_res_qty.key_full, t_pl_res_up.up_cost, q_cb_active_months_res_qty.l_1, q_cb_active_months_res_qty.l_2, q_cb_active_months_res_qty.l_3, q_cb_active_months_res_qty.l_4, q_cb_active_months_res_qty.l_5, q_cb_active_months_res_qty.l_6, q_cb_active_months_res_qty.rs_l1, q_cb_active_months_res_qty.rs_l2, q_cb_active_months_res_qty.rs_l3, q_cb_active_months_res_qty.rs_l4, r4_code.currency, q_cb_active_months_res_qty.key_r4_simple
from (q_cb_active_months_res_qty left join t_pl_res_up on q_cb_active_months_res_qty.key_r4 = t_pl_res_up.key_r4) left join r4_code on q_cb_active_months_res_qty.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_cb_analysis_activem_with_prices_mod
select q_cb_active_months_res_qty_mod.rep_month, q_cb_active_months_res_qty_mod.pc, q_cb_active_months_res_qty_mod.rs_l1, q_cb_active_months_res_qty_mod.rs_l2, q_cb_active_months_res_qty_mod.rs_l3, q_cb_active_months_res_qty_mod.rs_l4, q_cb_active_months_res_qty_mod.l_1, q_cb_active_months_res_qty_mod.l_2, q_cb_active_months_res_qty_mod.l_3, q_cb_active_months_res_qty_mod.l_4, q_cb_active_months_res_qty_mod.l_5, q_cb_active_months_res_qty_mod.l_6, q_cb_active_months_res_qty_mod.exp_cb_mon, q_cb_active_months_res_qty_mod.rs_currency, q_cb_active_months_res_qty_mod.an_rs_quantity, t_pl_res_up.up_cost, q_cb_active_months_res_qty_mod.key_r4, q_cb_active_months_res_qty_mod.key_r_pc_l6, q_cb_active_months_res_qty_mod.key_full, q_cb_active_months_res_qty_mod.key_r4_simple
from q_cb_active_months_res_qty_mod left join t_pl_res_up on q_cb_active_months_res_qty_mod.key_r4 = t_pl_res_up.key_r4;

----------------------------------------------------------------------------------------------------
q_cb_cons_report_currmonth_data
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, sum(t_cb_profit_usd_st.income) as income, sum(t_cb_profit_usd_st.expense) as expense, sum(t_cb_profit_usd_st.profit) as profit, t_cb_profit_usd_st.currency
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency, t_cb_profit_usd_st.month
having t_cb_profit_usd_st.month<=#2022/07/01#;

----------------------------------------------------------------------------------------------------
q_cb_cons_report_currmonth_data_group
select q_cb_cons_report_currmonth_data.rep_month, q_cb_cons_report_currmonth_data.l_1, q_cb_cons_report_currmonth_data.l_2, q_cb_cons_report_currmonth_data.l_3, q_cb_cons_report_currmonth_data.l_4, q_cb_cons_report_currmonth_data.l_5, q_cb_cons_report_currmonth_data.l_6, q_cb_cons_report_currmonth_data.desc_tr_l2, q_cb_cons_report_currmonth_data.desc_tr_l3, q_cb_cons_report_currmonth_data.desc_tr_l6, sum(q_cb_cons_report_currmonth_data.income) as income, sum(q_cb_cons_report_currmonth_data.expense) as expense, sum(q_cb_cons_report_currmonth_data.profit) as profit, q_cb_cons_report_currmonth_data.currency
from q_cb_cons_report_currmonth_data
group by q_cb_cons_report_currmonth_data.rep_month, q_cb_cons_report_currmonth_data.l_1, q_cb_cons_report_currmonth_data.l_2, q_cb_cons_report_currmonth_data.l_3, q_cb_cons_report_currmonth_data.l_4, q_cb_cons_report_currmonth_data.l_5, q_cb_cons_report_currmonth_data.l_6, q_cb_cons_report_currmonth_data.desc_tr_l2, q_cb_cons_report_currmonth_data.desc_tr_l3, q_cb_cons_report_currmonth_data.desc_tr_l6, q_cb_cons_report_currmonth_data.currency;

----------------------------------------------------------------------------------------------------
q_cb_cons_report_data
select q_cb_cons_report_union.rep_month, q_cb_cons_report_union.l_1, q_cb_cons_report_union.l_2, q_cb_cons_report_union.l_3, q_cb_cons_report_union.l_4, q_cb_cons_report_union.l_5, q_cb_cons_report_union.l_6, q_cb_cons_report_union.currency, sum(iif([q_cb_cons_report_endproject_data].[income] is null,"0",[q_cb_cons_report_endproject_data].[income])) as incomegt, sum(iif([q_cb_cons_report_endproject_data].[expense] is null,"0",[q_cb_cons_report_endproject_data].[expense])) as expensegt, [incomegt]-[expensegt] as profitgt, sum(iif([q_cb_cons_report_currmonth_data_group].[income] is null,"0",[q_cb_cons_report_currmonth_data_group].[income])) as incomert, sum(iif([q_cb_cons_report_currmonth_data_group].[expense] is null,"0",[q_cb_cons_report_currmonth_data_group].[expense])) as expensert, [incomert]-[expensert] as profitrt, c6_code.desc_tr_l6, c2_code.desc_tr_l2, c3_code.desc_tr_l3, [incomegt]-[incomert] as incomerem, [expensegt]-[expensert] as expenserem, [profitgt]-[profitrt] as profitrem, c5_code.desc_tr_l5, c4_code.desc_tr_l4
from ((((((q_cb_cons_report_union left join q_cb_cons_report_currmonth_data_group on (q_cb_cons_report_union.rep_month = q_cb_cons_report_currmonth_data_group.rep_month) and (q_cb_cons_report_union.l_1 = q_cb_cons_report_currmonth_data_group.l_1) and (q_cb_cons_report_union.l_2 = q_cb_cons_report_currmonth_data_group.l_2) and (q_cb_cons_report_union.l_3 = q_cb_cons_report_currmonth_data_group.l_3) and (q_cb_cons_report_union.l_4 = q_cb_cons_report_currmonth_data_group.l_4) and (q_cb_cons_report_union.l_5 = q_cb_cons_report_currmonth_data_group.l_5) and (q_cb_cons_report_union.l_6 = q_cb_cons_report_currmonth_data_group.l_6) and (q_cb_cons_report_union.currency = q_cb_cons_report_currmonth_data_group.currency)) left join q_cb_cons_report_endproject_data on (q_cb_cons_report_union.rep_month = q_cb_cons_report_endproject_data.rep_month) and (q_cb_cons_report_union.l_1 = q_cb_cons_report_endproject_data.l_1) and (q_cb_cons_report_union.l_2 = q_cb_cons_report_endproject_data.l_2) and (q_cb_cons_report_union.l_3 = q_cb_cons_report_endproject_data.l_3) and (q_cb_cons_report_union.l_4 = q_cb_cons_report_endproject_data.l_4) and (q_cb_cons_report_union.l_5 = q_cb_cons_report_endproject_data.l_5) and (q_cb_cons_report_union.l_6 = q_cb_cons_report_endproject_data.l_6) and (q_cb_cons_report_union.currency = q_cb_cons_report_endproject_data.currency)) left join c6_code on (q_cb_cons_report_union.l_1 = c6_code.c_l1) and (q_cb_cons_report_union.l_2 = c6_code.c_l2) and (q_cb_cons_report_union.l_3 = c6_code.c_l3) and (q_cb_cons_report_union.l_4 = c6_code.c_l4) and (q_cb_cons_report_union.l_5 = c6_code.c_l5) and (q_cb_cons_report_union.l_6 = c6_code.c_l6)) left join c2_code on (q_cb_cons_report_union.l_1 = c2_code.c_l1) and (q_cb_cons_report_union.l_2 = c2_code.c_l2)) left join c3_code on (q_cb_cons_report_union.l_1 = c3_code.c_l1) and (q_cb_cons_report_union.l_2 = c3_code.c_l2) and (q_cb_cons_report_union.l_3 = c3_code.c_l3)) left join c5_code on (q_cb_cons_report_union.l_5 = c5_code.c_l5) and (q_cb_cons_report_union.l_4 = c5_code.c_l4) and (q_cb_cons_report_union.l_3 = c5_code.c_l3) and (q_cb_cons_report_union.l_2 = c5_code.c_l2) and (q_cb_cons_report_union.l_1 = c5_code.c_l1)) left join c4_code on (q_cb_cons_report_union.l_4 = c4_code.c_l4) and (q_cb_cons_report_union.l_3 = c4_code.c_l3) and (q_cb_cons_report_union.l_2 = c4_code.c_l2) and (q_cb_cons_report_union.l_1 = c4_code.c_l1)
group by q_cb_cons_report_union.rep_month, q_cb_cons_report_union.l_1, q_cb_cons_report_union.l_2, q_cb_cons_report_union.l_3, q_cb_cons_report_union.l_4, q_cb_cons_report_union.l_5, q_cb_cons_report_union.l_6, q_cb_cons_report_union.currency, c6_code.desc_tr_l6, c2_code.desc_tr_l2, c3_code.desc_tr_l3, c5_code.desc_tr_l5, c4_code.desc_tr_l4;

----------------------------------------------------------------------------------------------------
q_cb_cons_report_endproject_data
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, sum(t_cb_profit_usd_st.income) as income, sum(t_cb_profit_usd_st.expense) as expense, sum(t_cb_profit_usd_st.profit) as profit, t_cb_profit_usd_st.currency
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency;

----------------------------------------------------------------------------------------------------
q_cb_cons_report_union
select 
		rep_month,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency
	from 
		q_cb_cons_report_currmonth_data

union select 
		rep_month,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency

	from 
		q_cb_cons_report_endproject_data;

----------------------------------------------------------------------------------------------------
q_cb_curr_base_month
select q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month
from t_rep_month right join q_budget_project_months on t_rep_month.rep_month = q_budget_project_months.rep_month
group by q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month;

----------------------------------------------------------------------------------------------------
q_cb_curr_base_month_mod
select q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month
from t_rep_month right join q_budget_project_months on t_rep_month.rep_month = q_budget_project_months.rep_month
group by q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month;

----------------------------------------------------------------------------------------------------
q_cb_curr_base_val
select q_cb_curr_base_month.rep_month, q_cb_curr_base_month.rep_month_date, mon_curr_rates.r_eur_eur, mon_curr_rates.r_eur_try, mon_curr_rates.r_eur_usd, mon_curr_rates.r_try_eur, mon_curr_rates.r_try_try, mon_curr_rates.r_try_usd, mon_curr_rates.r_usd_eur, mon_curr_rates.r_usd_try, mon_curr_rates.r_usd_usd
from q_cb_curr_base_month left join mon_curr_rates on (q_cb_curr_base_month.rep_month_date = mon_curr_rates.month) and (q_cb_curr_base_month.rep_month = mon_curr_rates.rep_month)
group by q_cb_curr_base_month.rep_month, q_cb_curr_base_month.rep_month_date, mon_curr_rates.r_eur_eur, mon_curr_rates.r_eur_try, mon_curr_rates.r_eur_usd, mon_curr_rates.r_try_eur, mon_curr_rates.r_try_try, mon_curr_rates.r_try_usd, mon_curr_rates.r_usd_eur, mon_curr_rates.r_usd_try, mon_curr_rates.r_usd_usd;

----------------------------------------------------------------------------------------------------
q_cb_curr_base_val_mod
select q_cb_curr_base_month.rep_month_date, q_monthly_curr_rates_mod_crosstab.r_eur_eur, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_try_eur, q_monthly_curr_rates_mod_crosstab.r_try_try, q_monthly_curr_rates_mod_crosstab.r_try_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur, q_monthly_curr_rates_mod_crosstab.r_usd_try, q_monthly_curr_rates_mod_crosstab.r_usd_usd, q_cb_curr_base_month.rep_month
from q_cb_curr_base_month left join q_monthly_curr_rates_mod_crosstab on q_cb_curr_base_month.rep_month_date = q_monthly_curr_rates_mod_crosstab.month
group by q_cb_curr_base_month.rep_month_date, q_monthly_curr_rates_mod_crosstab.r_eur_eur, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_try_eur, q_monthly_curr_rates_mod_crosstab.r_try_try, q_monthly_curr_rates_mod_crosstab.r_try_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur, q_monthly_curr_rates_mod_crosstab.r_usd_try, q_monthly_curr_rates_mod_crosstab.r_usd_usd, q_cb_curr_base_month.rep_month;

----------------------------------------------------------------------------------------------------
q_cb_curr_escalation_rates
select q_cb_active_months_res_qty.rep_month, q_cb_active_months_res_qty.pc, q_cb_active_months_res_qty.l_1, q_cb_active_months_res_qty.l_2, q_cb_active_months_res_qty.l_3, q_cb_active_months_res_qty.l_4, q_cb_active_months_res_qty.l_5, q_cb_active_months_res_qty.l_6, q_cb_active_months_res_qty.exp_cb_mon as [month], q_cb_active_months_res_qty.rs_l1, q_cb_active_months_res_qty.rs_l2, q_cb_active_months_res_qty.rs_l3, q_cb_active_months_res_qty.rs_l4, iif(([currency]="try" and [w_inf_usd]<>0),1+round([rt_usd_try]*[w_inf_usd],6),(iif([currency]="eur" and [w_inf_usd]<>0,1+round([rt_usd_eur]*[w_inf_usd],6),1))) as k_usd, iif(([currency]="try" and [w_inf_eur]<>0),1+round([rt_eur_try]*[w_inf_eur],6),(iif([currency]="usd" and [w_inf_eur]<>0,1+round([rt_eur_usd]*[w_inf_eur],6),1))) as k_eur, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.currency as rs_currency, q_cb_active_months_res_qty.key_r4_simple, q_cb_active_months_res_qty.key_full, q_cb_active_months_res_qty.key_r_pc_l6, q_cb_active_months_res_qty.key_r4, [key_full] & "." & [rs_currency] & "." & [month] as key_full_comb
from (q_cb_active_months_res_qty left join q_cb_monthly_curr_rates_inc on (q_cb_active_months_res_qty.rep_month = q_cb_monthly_curr_rates_inc.rep_month) and (q_cb_active_months_res_qty.pc = q_cb_monthly_curr_rates_inc.pc) and (q_cb_active_months_res_qty.exp_cb_mon = q_cb_monthly_curr_rates_inc.exp_cb_mon)) left join r4_code on q_cb_active_months_res_qty.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_cb_curr_escalation_rates_mod
select q_cb_active_months_res_qty_mod.rep_month, q_cb_active_months_res_qty_mod.pc, q_cb_active_months_res_qty_mod.l_1, q_cb_active_months_res_qty_mod.l_2, q_cb_active_months_res_qty_mod.l_3, q_cb_active_months_res_qty_mod.l_4, q_cb_active_months_res_qty_mod.l_5, q_cb_active_months_res_qty_mod.l_6, q_cb_active_months_res_qty_mod.exp_cb_mon as [month], q_cb_active_months_res_qty_mod.rs_l1, q_cb_active_months_res_qty_mod.rs_l2, q_cb_active_months_res_qty_mod.rs_l3, q_cb_active_months_res_qty_mod.rs_l4, iif(([currency]="try" and [w_inf_usd]<>0),1+round([rt_usd_try]*[w_inf_usd],6),(iif([currency]="eur" and [w_inf_usd]<>0,1+round([rt_usd_eur]*[w_inf_usd],6),1))) as k_usd, iif(([currency]="try" and [w_inf_eur]<>0),1+round([rt_eur_try]*[w_inf_eur],6),(iif([currency]="usd" and [w_inf_eur]<>0,1+round([rt_eur_usd]*[w_inf_eur],6),1))) as k_eur, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.currency as rs_currency, q_cb_active_months_res_qty_mod.key_r4_simple, q_cb_active_months_res_qty_mod.key_full, q_cb_active_months_res_qty_mod.key_r_pc_l6, q_cb_active_months_res_qty_mod.key_r4, [key_full] & "." & [rs_currency] & "." & [month] as key_full_comb
from (q_cb_active_months_res_qty_mod left join q_cb_monthly_curr_rates_inc_mod on (q_cb_active_months_res_qty_mod.exp_cb_mon = q_cb_monthly_curr_rates_inc_mod.exp_cb_mon) and (q_cb_active_months_res_qty_mod.pc = q_cb_monthly_curr_rates_inc_mod.pc) and (q_cb_active_months_res_qty_mod.rep_month = q_cb_monthly_curr_rates_inc_mod.rep_month)) left join r4_code on q_cb_active_months_res_qty_mod.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_cb_exp
select 
		*
	from 
q_pl_exp
		
where total_expense <>0

union all select 
		*
	from 
		t_ac_exp

where exp_ac_exp <>0;

----------------------------------------------------------------------------------------------------
q_cb_exp_diff
select q_cb_exp_mod.rep_month, q_cb_exp_mod.p01_code, q_cb_exp_mod.l_1, q_cb_exp_mod.l_2, q_cb_exp_mod.l_3, q_cb_exp_mod.l_4, q_cb_exp_mod.l_5, q_cb_exp_mod.l_6, q_cb_exp_mod.month, q_cb_exp_mod.up_curr, q_cb_exp.total_expense as exp_orj, q_cb_exp_mod.total_expense as exp_mod, ([exp_orj])-([exp_mod]) as diff
from q_cb_exp_mod left join q_cb_exp on (q_cb_exp_mod.rep_month = q_cb_exp.rep_month) and (q_cb_exp_mod.p01_code = q_cb_exp.p01_code) and (q_cb_exp_mod.l_1 = q_cb_exp.l_1) and (q_cb_exp_mod.l_2 = q_cb_exp.l_2) and (q_cb_exp_mod.l_3 = q_cb_exp.l_3) and (q_cb_exp_mod.l_4 = q_cb_exp.l_4) and (q_cb_exp_mod.l_5 = q_cb_exp.l_5) and (q_cb_exp_mod.l_6 = q_cb_exp.l_6) and (q_cb_exp_mod.month = q_cb_exp.month) and (q_cb_exp_mod.up_curr = q_cb_exp.up_curr);

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_eur_with_dummy
transform sum(q_cb_exp_eur_with_dummy.eur_expense) as sumofeur_expense
select q_cb_exp_eur_with_dummy.rep_month, q_cb_exp_eur_with_dummy.pc, q_cb_exp_eur_with_dummy.l_1, q_cb_exp_eur_with_dummy.l_2, q_cb_exp_eur_with_dummy.l_3, q_cb_exp_eur_with_dummy.l_4, q_cb_exp_eur_with_dummy.l_5, q_cb_exp_eur_with_dummy.l_6, q_cb_exp_eur_with_dummy.up_curr_conv
from q_cb_exp_eur_with_dummy
group by q_cb_exp_eur_with_dummy.rep_month, q_cb_exp_eur_with_dummy.pc, q_cb_exp_eur_with_dummy.l_1, q_cb_exp_eur_with_dummy.l_2, q_cb_exp_eur_with_dummy.l_3, q_cb_exp_eur_with_dummy.l_4, q_cb_exp_eur_with_dummy.l_5, q_cb_exp_eur_with_dummy.l_6, q_cb_exp_eur_with_dummy.up_curr_conv
pivot q_cb_exp_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_eur_with_dummy_mod
transform sum(q_cb_exp_eur_with_dummy_mod.eur_expense) as sumofeur_expense
select q_cb_exp_eur_with_dummy_mod.rep_month as expr1, q_cb_exp_eur_with_dummy_mod.p01_code as expr2, q_cb_exp_eur_with_dummy_mod.l_1 as expr3, q_cb_exp_eur_with_dummy_mod.l_2 as expr4, q_cb_exp_eur_with_dummy_mod.l_3 as expr5, q_cb_exp_eur_with_dummy_mod.l_4 as expr6, q_cb_exp_eur_with_dummy_mod.l_5 as expr7, q_cb_exp_eur_with_dummy_mod.l_6 as expr8, q_cb_exp_eur_with_dummy_mod.up_curr_conv as expr9
from q_cb_exp_eur_with_dummy_mod
where (((q_cb_exp_eur_with_dummy_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
group by q_cb_exp_eur_with_dummy_mod.rep_month, q_cb_exp_eur_with_dummy_mod.p01_code, q_cb_exp_eur_with_dummy_mod.l_1, q_cb_exp_eur_with_dummy_mod.l_2, q_cb_exp_eur_with_dummy_mod.l_3, q_cb_exp_eur_with_dummy_mod.l_4, q_cb_exp_eur_with_dummy_mod.l_5, q_cb_exp_eur_with_dummy_mod.l_6, q_cb_exp_eur_with_dummy_mod.up_curr_conv
order by q_cb_exp_eur_with_dummy_mod.rep_month, q_cb_exp_eur_with_dummy_mod.p01_code, q_cb_exp_eur_with_dummy_mod.l_1, q_cb_exp_eur_with_dummy_mod.l_2, q_cb_exp_eur_with_dummy_mod.l_3, q_cb_exp_eur_with_dummy_mod.l_4, q_cb_exp_eur_with_dummy_mod.l_5, q_cb_exp_eur_with_dummy_mod.l_6, q_cb_exp_eur_with_dummy_mod.month
pivot q_cb_exp_eur_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_try_with_dummy
transform sum(q_cb_exp_try_with_dummy.try_expense) as sumoftry_expense
select q_cb_exp_try_with_dummy.rep_month, q_cb_exp_try_with_dummy.pc, q_cb_exp_try_with_dummy.l_1, q_cb_exp_try_with_dummy.l_2, q_cb_exp_try_with_dummy.l_3, q_cb_exp_try_with_dummy.l_4, q_cb_exp_try_with_dummy.l_5, q_cb_exp_try_with_dummy.l_6, q_cb_exp_try_with_dummy.up_curr_conv
from q_cb_exp_try_with_dummy
group by q_cb_exp_try_with_dummy.rep_month, q_cb_exp_try_with_dummy.pc, q_cb_exp_try_with_dummy.l_1, q_cb_exp_try_with_dummy.l_2, q_cb_exp_try_with_dummy.l_3, q_cb_exp_try_with_dummy.l_4, q_cb_exp_try_with_dummy.l_5, q_cb_exp_try_with_dummy.l_6, q_cb_exp_try_with_dummy.up_curr_conv
pivot q_cb_exp_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_try_with_dummy_mod
transform sum(q_cb_exp_try_with_dummy_mod.try_expense) as sumoftry_expense
select q_cb_exp_try_with_dummy_mod.rep_month as expr1, q_cb_exp_try_with_dummy_mod.p01_code as expr2, q_cb_exp_try_with_dummy_mod.l_1 as expr3, q_cb_exp_try_with_dummy_mod.l_2 as expr4, q_cb_exp_try_with_dummy_mod.l_3 as expr5, q_cb_exp_try_with_dummy_mod.l_4 as expr6, q_cb_exp_try_with_dummy_mod.l_5 as expr7, q_cb_exp_try_with_dummy_mod.l_6 as expr8, q_cb_exp_try_with_dummy_mod.up_curr_conv as expr9
from q_cb_exp_try_with_dummy_mod
where (((q_cb_exp_try_with_dummy_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
group by q_cb_exp_try_with_dummy_mod.rep_month, q_cb_exp_try_with_dummy_mod.p01_code, q_cb_exp_try_with_dummy_mod.l_1, q_cb_exp_try_with_dummy_mod.l_2, q_cb_exp_try_with_dummy_mod.l_3, q_cb_exp_try_with_dummy_mod.l_4, q_cb_exp_try_with_dummy_mod.l_5, q_cb_exp_try_with_dummy_mod.l_6, q_cb_exp_try_with_dummy_mod.up_curr_conv
pivot q_cb_exp_try_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_usd_with_dummy
transform sum(q_cb_exp_usd_with_dummy.usd_expense) as sumofusd_expense
select q_cb_exp_usd_with_dummy.rep_month, q_cb_exp_usd_with_dummy.pc, q_cb_exp_usd_with_dummy.l_1, q_cb_exp_usd_with_dummy.l_2, q_cb_exp_usd_with_dummy.l_3, q_cb_exp_usd_with_dummy.l_4, q_cb_exp_usd_with_dummy.l_5, q_cb_exp_usd_with_dummy.l_6, q_cb_exp_usd_with_dummy.up_curr_conv
from q_cb_exp_usd_with_dummy
group by q_cb_exp_usd_with_dummy.rep_month, q_cb_exp_usd_with_dummy.pc, q_cb_exp_usd_with_dummy.l_1, q_cb_exp_usd_with_dummy.l_2, q_cb_exp_usd_with_dummy.l_3, q_cb_exp_usd_with_dummy.l_4, q_cb_exp_usd_with_dummy.l_5, q_cb_exp_usd_with_dummy.l_6, q_cb_exp_usd_with_dummy.up_curr_conv
pivot q_cb_exp_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_usd_with_dummy_mod
transform sum(q_cb_exp_usd_with_dummy_mod.usd_expense) as sumofusd_expense
select q_cb_exp_usd_with_dummy_mod.rep_month, q_cb_exp_usd_with_dummy_mod.p01_code as pc, q_cb_exp_usd_with_dummy_mod.l_1, q_cb_exp_usd_with_dummy_mod.l_2, q_cb_exp_usd_with_dummy_mod.l_3, q_cb_exp_usd_with_dummy_mod.l_4, q_cb_exp_usd_with_dummy_mod.l_5, q_cb_exp_usd_with_dummy_mod.l_6, q_cb_exp_usd_with_dummy_mod.up_curr_conv
from q_cb_exp_usd_with_dummy_mod
where (((q_cb_exp_usd_with_dummy_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
group by q_cb_exp_usd_with_dummy_mod.rep_month, q_cb_exp_usd_with_dummy_mod.p01_code, q_cb_exp_usd_with_dummy_mod.l_1, q_cb_exp_usd_with_dummy_mod.l_2, q_cb_exp_usd_with_dummy_mod.l_3, q_cb_exp_usd_with_dummy_mod.l_4, q_cb_exp_usd_with_dummy_mod.l_5, q_cb_exp_usd_with_dummy_mod.l_6, q_cb_exp_usd_with_dummy_mod.up_curr_conv
pivot q_cb_exp_usd_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_with_dummy
transform sum(q_cb_exp_with_dummy.total_expense) as sumoftotal_expense
select q_cb_exp_with_dummy.rep_month, q_cb_exp_with_dummy.p01_code, q_cb_exp_with_dummy.l_1, q_cb_exp_with_dummy.l_2, q_cb_exp_with_dummy.l_3, q_cb_exp_with_dummy.l_4, q_cb_exp_with_dummy.l_5, q_cb_exp_with_dummy.l_6, q_cb_exp_with_dummy.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")) as exc_try, iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_exp_with_dummy
group by q_cb_exp_with_dummy.rep_month, q_cb_exp_with_dummy.p01_code, q_cb_exp_with_dummy.l_1, q_cb_exp_with_dummy.l_2, q_cb_exp_with_dummy.l_3, q_cb_exp_with_dummy.l_4, q_cb_exp_with_dummy.l_5, q_cb_exp_with_dummy.l_6, q_cb_exp_with_dummy.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")), iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")), iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_exp_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_with_dummy_mod
transform sum(q_cb_exp_with_dummy_mod.total_expense) as sumoftotal_expense
select q_cb_exp_with_dummy_mod.rep_month as expr1, q_cb_exp_with_dummy_mod.p01_code as expr2, q_cb_exp_with_dummy_mod.l_1 as expr3, q_cb_exp_with_dummy_mod.l_2 as expr4, q_cb_exp_with_dummy_mod.l_3 as expr5, q_cb_exp_with_dummy_mod.l_4 as expr6, q_cb_exp_with_dummy_mod.l_5 as expr7, q_cb_exp_with_dummy_mod.l_6 as expr8, q_cb_exp_with_dummy_mod.up_curr as expr9, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")) as exc_try, iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_exp_with_dummy_mod
where (((q_cb_exp_with_dummy_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
group by q_cb_exp_with_dummy_mod.rep_month, q_cb_exp_with_dummy_mod.p01_code, q_cb_exp_with_dummy_mod.l_1, q_cb_exp_with_dummy_mod.l_2, q_cb_exp_with_dummy_mod.l_3, q_cb_exp_with_dummy_mod.l_4, q_cb_exp_with_dummy_mod.l_5, q_cb_exp_with_dummy_mod.l_6, q_cb_exp_with_dummy_mod.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")), iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")), iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_exp_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_eur
select t_q_cb_exp.rep_month, t_q_cb_exp.pc, t_q_cb_exp.l_1, t_q_cb_exp.l_2, t_q_cb_exp.l_3, t_q_cb_exp.l_4, t_q_cb_exp.l_5, t_q_cb_exp.l_6, t_q_cb_exp.month, t_q_cb_exp.total_expense, t_q_cb_exp.up_curr, iif([up_curr]="eur",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_eur],[total_expense]*[r_try_eur])) as eur_expense, "eur" as up_curr_conv, t_q_cb_exp.key_r_pc_l6
from t_q_cb_exp left join mon_curr_rates on (t_q_cb_exp.month = mon_curr_rates.month) and (t_q_cb_exp.rep_month = mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_exp_eur_mod
select t_q_cb_exp_mod.rep_month, t_q_cb_exp_mod.p01_code, t_q_cb_exp_mod.l_1, t_q_cb_exp_mod.l_2, t_q_cb_exp_mod.l_3, t_q_cb_exp_mod.l_4, t_q_cb_exp_mod.l_5, t_q_cb_exp_mod.l_6, t_q_cb_exp_mod.month, t_q_cb_exp_mod.total_expense, t_q_cb_exp_mod.up_curr, iif([up_curr]="eur",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_eur],[total_expense]*[r_try_eur])) as eur_expense, "eur" as up_curr_conv, t_q_cb_exp_mod.key_r_pc_l6
from t_q_cb_exp_mod left join q_monthly_curr_rates_mod_crosstab on t_q_cb_exp_mod.month = q_monthly_curr_rates_mod_crosstab.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_eur_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_eur

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_eur_with_dummy_mod
select 
		rep_month,
p01_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_eur_mod


union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_lastm
select t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6, max(t_ac_exp.exp_ac_mon) as lastm
from t_ac_exp
group by t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6;

----------------------------------------------------------------------------------------------------
q_cb_exp_lastm_mod
select q_cb_exp_lastm.rep_month, q_cb_exp_lastm.pc, q_cb_exp_lastm.l_1, q_cb_exp_lastm.l_2, q_cb_exp_lastm.l_3, q_cb_exp_lastm.l_4, q_cb_exp_lastm.l_5, q_cb_exp_lastm.l_6, q_cb_exp_lastm.lastm
from q_cb_exp_lastm
where (((q_cb_exp_lastm.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_exp_mod
select 
		*
	from 
q_pl_exp_mod
		
where total_expense <>0

union all select 
		*
	from 
		q_cb_exp_pre_mod

where total_expense <>0;

----------------------------------------------------------------------------------------------------
q_cb_exp_mod_mt
select q_cb_exp_mod.rep_month, q_cb_exp_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_mod.month, q_cb_exp_mod.total_expense, q_cb_exp_mod.up_curr, q_cb_exp_mod.l_1, q_cb_exp_mod.l_2, q_cb_exp_mod.l_3, q_cb_exp_mod.l_4, q_cb_exp_mod.l_5, q_cb_exp_mod.l_6, q_cb_exp_mod.key_r_pc_l6 into t_q_cb_exp_mod
from q_cb_exp_mod left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_exp_mod.l_1 = c3_code.[c_l1]) and (q_cb_exp_mod.l_2 = c3_code.[c_l2]) and (q_cb_exp_mod.l_3 = c3_code.[c_l3])
group by q_cb_exp_mod.rep_month, q_cb_exp_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_mod.month, q_cb_exp_mod.total_expense, q_cb_exp_mod.up_curr, q_cb_exp_mod.l_1, q_cb_exp_mod.l_2, q_cb_exp_mod.l_3, q_cb_exp_mod.l_4, q_cb_exp_mod.l_5, q_cb_exp_mod.l_6, q_cb_exp_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mod_mt_eur
select q_cb_exp_eur_mod.rep_month, q_cb_exp_eur_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_eur_mod.month, q_cb_exp_eur_mod.eur_expense, q_cb_exp_eur_mod.up_curr_conv, q_cb_exp_eur_mod.l_1, q_cb_exp_eur_mod.l_2, q_cb_exp_eur_mod.l_3, q_cb_exp_eur_mod.l_4, q_cb_exp_eur_mod.l_5, q_cb_exp_eur_mod.l_6, q_cb_exp_eur_mod.key_r_pc_l6 into t_q_cb_exp_eur_mod
from q_cb_exp_eur_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_exp_eur_mod.l_3 = c3_code.[c_l3]) and (q_cb_exp_eur_mod.l_2 = c3_code.[c_l2]) and (q_cb_exp_eur_mod.l_1 = c3_code.[c_l1])
group by q_cb_exp_eur_mod.rep_month, q_cb_exp_eur_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_eur_mod.month, q_cb_exp_eur_mod.eur_expense, q_cb_exp_eur_mod.up_curr_conv, q_cb_exp_eur_mod.l_1, q_cb_exp_eur_mod.l_2, q_cb_exp_eur_mod.l_3, q_cb_exp_eur_mod.l_4, q_cb_exp_eur_mod.l_5, q_cb_exp_eur_mod.l_6, q_cb_exp_eur_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mod_mt_try
select q_cb_exp_try_mod.rep_month, q_cb_exp_try_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_try_mod.month, q_cb_exp_try_mod.try_expense, q_cb_exp_try_mod.up_curr_conv, q_cb_exp_try_mod.l_1, q_cb_exp_try_mod.l_2, q_cb_exp_try_mod.l_3, q_cb_exp_try_mod.l_4, q_cb_exp_try_mod.l_5, q_cb_exp_try_mod.l_6, q_cb_exp_try_mod.key_r_pc_l6 into t_q_cb_exp_try_mod
from q_cb_exp_try_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_exp_try_mod.l_3 = c3_code.[c_l3]) and (q_cb_exp_try_mod.l_2 = c3_code.[c_l2]) and (q_cb_exp_try_mod.l_1 = c3_code.[c_l1])
group by q_cb_exp_try_mod.rep_month, q_cb_exp_try_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_try_mod.month, q_cb_exp_try_mod.try_expense, q_cb_exp_try_mod.up_curr_conv, q_cb_exp_try_mod.l_1, q_cb_exp_try_mod.l_2, q_cb_exp_try_mod.l_3, q_cb_exp_try_mod.l_4, q_cb_exp_try_mod.l_5, q_cb_exp_try_mod.l_6, q_cb_exp_try_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mod_mt_usd
select q_cb_exp_usd_mod.rep_month, q_cb_exp_usd_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_usd_mod.month, q_cb_exp_usd_mod.usd_expense, q_cb_exp_usd_mod.up_curr_conv, q_cb_exp_usd_mod.l_1, q_cb_exp_usd_mod.l_2, q_cb_exp_usd_mod.l_3, q_cb_exp_usd_mod.l_4, q_cb_exp_usd_mod.l_5, q_cb_exp_usd_mod.l_6, q_cb_exp_usd_mod.key_r_pc_l6 into t_q_cb_exp_usd_mod
from q_cb_exp_usd_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_exp_usd_mod.l_3 = c3_code.[c_l3]) and (q_cb_exp_usd_mod.l_2 = c3_code.[c_l2]) and (q_cb_exp_usd_mod.l_1 = c3_code.[c_l1])
group by q_cb_exp_usd_mod.rep_month, q_cb_exp_usd_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_usd_mod.month, q_cb_exp_usd_mod.usd_expense, q_cb_exp_usd_mod.up_curr_conv, q_cb_exp_usd_mod.l_1, q_cb_exp_usd_mod.l_2, q_cb_exp_usd_mod.l_3, q_cb_exp_usd_mod.l_4, q_cb_exp_usd_mod.l_5, q_cb_exp_usd_mod.l_6, q_cb_exp_usd_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mt
select q_cb_exp.rep_month, q_cb_exp.p01_code as pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp.month, sum(q_cb_exp.total_expense) as total_expense, q_cb_exp.up_curr, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.key_r_pc_l6 into t_q_cb_exp
from q_cb_exp left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_exp.l_1 = c3_code.[c_l1]) and (q_cb_exp.l_2 = c3_code.[c_l2]) and (q_cb_exp.l_3 = c3_code.[c_l3])
group by q_cb_exp.rep_month, q_cb_exp.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp.month, q_cb_exp.up_curr, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mt_eur
select q_cb_exp_eur.rep_month, q_cb_exp_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_eur.month, sum(q_cb_exp_eur.eur_expense) as sumofeur_expense, q_cb_exp_eur.up_curr_conv, q_cb_exp_eur.l_1, q_cb_exp_eur.l_2, q_cb_exp_eur.l_3, q_cb_exp_eur.l_4, q_cb_exp_eur.l_5, q_cb_exp_eur.l_6, q_cb_exp_eur.key_r_pc_l6 into t_q_cb_exp_eur
from q_cb_exp_eur left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_exp_eur.l_1 = c3_code.[c_l1]) and (q_cb_exp_eur.l_2 = c3_code.[c_l2]) and (q_cb_exp_eur.l_3 = c3_code.[c_l3])
group by q_cb_exp_eur.rep_month, q_cb_exp_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_eur.month, q_cb_exp_eur.up_curr_conv, q_cb_exp_eur.l_1, q_cb_exp_eur.l_2, q_cb_exp_eur.l_3, q_cb_exp_eur.l_4, q_cb_exp_eur.l_5, q_cb_exp_eur.l_6, q_cb_exp_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mt_try
select q_cb_exp_try.rep_month, q_cb_exp_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_try.month, sum(q_cb_exp_try.try_expense) as try_expense, q_cb_exp_try.up_curr_conv, q_cb_exp_try.l_1, q_cb_exp_try.l_2, q_cb_exp_try.l_3, q_cb_exp_try.l_4, q_cb_exp_try.l_5, q_cb_exp_try.l_6, q_cb_exp_try.key_r_pc_l6 into t_q_cb_exp_try
from q_cb_exp_try left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_exp_try.l_1 = c3_code.[c_l1]) and (q_cb_exp_try.l_2 = c3_code.[c_l2]) and (q_cb_exp_try.l_3 = c3_code.[c_l3])
group by q_cb_exp_try.rep_month, q_cb_exp_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_try.month, q_cb_exp_try.up_curr_conv, q_cb_exp_try.l_1, q_cb_exp_try.l_2, q_cb_exp_try.l_3, q_cb_exp_try.l_4, q_cb_exp_try.l_5, q_cb_exp_try.l_6, q_cb_exp_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mt_usd
select q_cb_exp_usd.rep_month, q_cb_exp_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_usd.month, sum(q_cb_exp_usd.usd_expense) as usd_expense, q_cb_exp_usd.up_curr_conv, q_cb_exp_usd.l_1, q_cb_exp_usd.l_2, q_cb_exp_usd.l_3, q_cb_exp_usd.l_4, q_cb_exp_usd.l_5, q_cb_exp_usd.l_6, q_cb_exp_usd.key_r_pc_l6 into t_q_cb_exp_usd
from q_cb_exp_usd left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_exp_usd.l_1 = c3_code.[c_l1]) and (q_cb_exp_usd.l_2 = c3_code.[c_l2]) and (q_cb_exp_usd.l_3 = c3_code.[c_l3])
group by q_cb_exp_usd.rep_month, q_cb_exp_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_usd.month, q_cb_exp_usd.up_curr_conv, q_cb_exp_usd.l_1, q_cb_exp_usd.l_2, q_cb_exp_usd.l_3, q_cb_exp_usd.l_4, q_cb_exp_usd.l_5, q_cb_exp_usd.l_6, q_cb_exp_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_pre_mod
select t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6, t_ac_exp.exp_ac_mon as [month], t_ac_exp.exp_ac_exp as total_expense, t_ac_exp.up_curr, t_ac_exp.key_r_pc_l6
from t_ac_exp
where (((t_ac_exp.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_exp_try
select t_q_cb_exp.rep_month, t_q_cb_exp.pc, t_q_cb_exp.l_1, t_q_cb_exp.l_2, t_q_cb_exp.l_3, t_q_cb_exp.l_4, t_q_cb_exp.l_5, t_q_cb_exp.l_6, t_q_cb_exp.month, t_q_cb_exp.total_expense, t_q_cb_exp.up_curr, iif([up_curr]="try",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_try],[total_expense]*[r_eur_try])) as try_expense, "try" as up_curr_conv, t_q_cb_exp.key_r_pc_l6
from t_q_cb_exp left join mon_curr_rates on (t_q_cb_exp.month = mon_curr_rates.month) and (t_q_cb_exp.rep_month = mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_exp_try_mod
select t_q_cb_exp_mod.rep_month, t_q_cb_exp_mod.p01_code, t_q_cb_exp_mod.l_1, t_q_cb_exp_mod.l_2, t_q_cb_exp_mod.l_3, t_q_cb_exp_mod.l_4, t_q_cb_exp_mod.l_5, t_q_cb_exp_mod.l_6, t_q_cb_exp_mod.month, t_q_cb_exp_mod.total_expense, t_q_cb_exp_mod.up_curr, iif([up_curr]="try",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_try],[total_expense]*[r_eur_try])) as try_expense, "try" as up_curr_conv, t_q_cb_exp_mod.key_r_pc_l6
from t_q_cb_exp_mod left join q_monthly_curr_rates_mod_crosstab on t_q_cb_exp_mod.month = q_monthly_curr_rates_mod_crosstab.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_try_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_expense,
up_curr_conv,
key_r_pc_l6


	from 
		q_cb_exp_try

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_try_with_dummy_mod
select 
		rep_month,
p01_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_try_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_usd
select t_q_cb_exp.rep_month, t_q_cb_exp.pc, t_q_cb_exp.l_1, t_q_cb_exp.l_2, t_q_cb_exp.l_3, t_q_cb_exp.l_4, t_q_cb_exp.l_5, t_q_cb_exp.l_6, t_q_cb_exp.month, t_q_cb_exp.total_expense, t_q_cb_exp.up_curr, iif([up_curr]="usd",[total_expense],iif([up_curr]="eur",[total_expense]*[r_eur_usd],[total_expense]*[r_try_usd])) as usd_expense, "usd" as up_curr_conv, t_q_cb_exp.key_r_pc_l6
from t_q_cb_exp left join mon_curr_rates on (t_q_cb_exp.month = mon_curr_rates.month) and (t_q_cb_exp.rep_month = mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_exp_usd_diff
select q_cb_exp_usd_mod.rep_month, q_cb_exp_usd_mod.month, q_cb_exp_usd_mod.p01_code, q_cb_exp_usd_mod.l_1, q_cb_exp_usd_mod.l_2, q_cb_exp_usd_mod.l_3, q_cb_exp_usd_mod.l_4, q_cb_exp_usd_mod.l_5, q_cb_exp_usd_mod.l_6, q_cb_exp_usd_mod.up_curr_conv, q_cb_exp_usd.usd_expense as exp_orj, q_cb_exp_usd_mod.usd_expense as exp_mod, [exp_orj]-[exp_mod] as diff, q_cb_exp_usd_mod.up_curr
from q_cb_exp_usd_mod left join q_cb_exp_usd on (q_cb_exp_usd_mod.rep_month = q_cb_exp_usd.rep_month) and (q_cb_exp_usd_mod.p01_code = q_cb_exp_usd.pc) and (q_cb_exp_usd_mod.l_1 = q_cb_exp_usd.l_1) and (q_cb_exp_usd_mod.l_2 = q_cb_exp_usd.l_2) and (q_cb_exp_usd_mod.l_3 = q_cb_exp_usd.l_3) and (q_cb_exp_usd_mod.l_4 = q_cb_exp_usd.l_4) and (q_cb_exp_usd_mod.l_5 = q_cb_exp_usd.l_5) and (q_cb_exp_usd_mod.l_6 = q_cb_exp_usd.l_6) and (q_cb_exp_usd_mod.month = q_cb_exp_usd.month) and (q_cb_exp_usd_mod.up_curr = q_cb_exp_usd.up_curr) and (q_cb_exp_usd_mod.up_curr_conv = q_cb_exp_usd.up_curr_conv)
order by q_cb_exp_usd_mod.rep_month, q_cb_exp_usd_mod.month, q_cb_exp_usd_mod.p01_code, q_cb_exp_usd_mod.l_1, q_cb_exp_usd_mod.l_2, q_cb_exp_usd_mod.l_3, q_cb_exp_usd_mod.l_4, q_cb_exp_usd_mod.l_5, q_cb_exp_usd_mod.l_6, q_cb_exp_usd_mod.up_curr_conv;

----------------------------------------------------------------------------------------------------
q_cb_exp_usd_mod
select t_q_cb_exp_mod.rep_month, t_q_cb_exp_mod.p01_code, t_q_cb_exp_mod.l_1, t_q_cb_exp_mod.l_2, t_q_cb_exp_mod.l_3, t_q_cb_exp_mod.l_4, t_q_cb_exp_mod.l_5, t_q_cb_exp_mod.l_6, t_q_cb_exp_mod.month, t_q_cb_exp_mod.total_expense, t_q_cb_exp_mod.up_curr, iif([up_curr]="usd",[total_expense],iif([up_curr]="eur",[total_expense]*[r_eur_usd],[total_expense]*[r_try_usd])) as usd_expense, "usd" as up_curr_conv, t_q_cb_exp_mod.key_r_pc_l6
from t_q_cb_exp_mod left join q_monthly_curr_rates_mod_crosstab on t_q_cb_exp_mod.month = q_monthly_curr_rates_mod_crosstab.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_usd_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_usd

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_usd_with_dummy_mod
select 
		rep_month,
p01_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_usd_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_with_dummy
select 
		*
	from 
		q_cb_exp

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_with_dummy_mod
select 
		*
	from 
		q_cb_exp_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_calculation
select t_cb_inc_qty.rep_month, t_cb_inc_qty.pc, t_cb_inc_qty.l_1, t_cb_inc_qty.l_2, t_cb_inc_qty.l_3, t_cb_inc_qty.l_4, t_cb_inc_qty.l_5, t_cb_inc_qty.l_6, t_cb_inc_qty.inc_base_mon, iif([inc_rate] is null,1,1+[inc_rate]) as inc_rate_1, iif([inc_rate_pcode] is null,1,1+[inc_rate_pcode]) as inc_rate_2, t_cb_inc_wbs.up, t_cb_inc_wbs.currency, [up]*[inc_rate_1]*[inc_rate_2] as up_total, t_cb_inc_qty.inc_base_qty, [up_total]*[inc_base_qty] as inc_total, t_cb_inc_qty.key_r_pc_l6
from ((t_cb_inc_qty left join t_cb_inc_esc_rates_l6 on (t_cb_inc_qty.inc_base_mon = t_cb_inc_esc_rates_l6.month) and (t_cb_inc_qty.l_6 = t_cb_inc_esc_rates_l6.c_l6) and (t_cb_inc_qty.l_5 = t_cb_inc_esc_rates_l6.c_l5) and (t_cb_inc_qty.l_4 = t_cb_inc_esc_rates_l6.c_l4) and (t_cb_inc_qty.l_3 = t_cb_inc_esc_rates_l6.c_l3) and (t_cb_inc_qty.l_2 = t_cb_inc_esc_rates_l6.c_l2) and (t_cb_inc_qty.l_1 = t_cb_inc_esc_rates_l6.c_l1) and (t_cb_inc_qty.pc = t_cb_inc_esc_rates_l6.p01_code) and (t_cb_inc_qty.rep_month = t_cb_inc_esc_rates_l6.rep_month)) left join t_cb_inc_esc_rates_pcode on (t_cb_inc_qty.inc_base_mon = t_cb_inc_esc_rates_pcode.month) and (t_cb_inc_qty.pc = t_cb_inc_esc_rates_pcode.p01_code) and (t_cb_inc_qty.rep_month = t_cb_inc_esc_rates_pcode.rep_month)) left join t_cb_inc_wbs on t_cb_inc_qty.key_r_pc_l6 = t_cb_inc_wbs.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_eur_with_dummy_crosstab
transform sum(q_cb_inc_eur_with_dummy.eur_income) as eur_income
select q_cb_inc_eur_with_dummy.rep_month, q_cb_inc_eur_with_dummy.pc, q_cb_inc_eur_with_dummy.l_1, q_cb_inc_eur_with_dummy.l_2, q_cb_inc_eur_with_dummy.l_3, q_cb_inc_eur_with_dummy.l_4, q_cb_inc_eur_with_dummy.l_5, q_cb_inc_eur_with_dummy.l_6, q_cb_inc_eur_with_dummy.up_curr_conv
from q_cb_inc_eur_with_dummy
group by q_cb_inc_eur_with_dummy.rep_month, q_cb_inc_eur_with_dummy.pc, q_cb_inc_eur_with_dummy.l_1, q_cb_inc_eur_with_dummy.l_2, q_cb_inc_eur_with_dummy.l_3, q_cb_inc_eur_with_dummy.l_4, q_cb_inc_eur_with_dummy.l_5, q_cb_inc_eur_with_dummy.l_6, q_cb_inc_eur_with_dummy.up_curr_conv
pivot q_cb_inc_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_eur_with_dummy_crosstab_mod
transform sum(q_cb_inc_eur_with_dummy_mod.eur_income) as eur_income
select q_cb_inc_eur_with_dummy_mod.rep_month, q_cb_inc_eur_with_dummy_mod.pc, q_cb_inc_eur_with_dummy_mod.l_1, q_cb_inc_eur_with_dummy_mod.l_2, q_cb_inc_eur_with_dummy_mod.l_3, q_cb_inc_eur_with_dummy_mod.l_4, q_cb_inc_eur_with_dummy_mod.l_5, q_cb_inc_eur_with_dummy_mod.l_6, q_cb_inc_eur_with_dummy_mod.up_curr_conv
from q_cb_inc_eur_with_dummy_mod
group by q_cb_inc_eur_with_dummy_mod.rep_month, q_cb_inc_eur_with_dummy_mod.pc, q_cb_inc_eur_with_dummy_mod.l_1, q_cb_inc_eur_with_dummy_mod.l_2, q_cb_inc_eur_with_dummy_mod.l_3, q_cb_inc_eur_with_dummy_mod.l_4, q_cb_inc_eur_with_dummy_mod.l_5, q_cb_inc_eur_with_dummy_mod.l_6, q_cb_inc_eur_with_dummy_mod.up_curr_conv
pivot q_cb_inc_eur_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_try_with_dummy_crosstab
transform sum(q_cb_inc_try_with_dummy.try_income) as try_income
select q_cb_inc_try_with_dummy.rep_month, q_cb_inc_try_with_dummy.pc, q_cb_inc_try_with_dummy.l_1, q_cb_inc_try_with_dummy.l_2, q_cb_inc_try_with_dummy.l_3, q_cb_inc_try_with_dummy.l_4, q_cb_inc_try_with_dummy.l_5, q_cb_inc_try_with_dummy.l_6, q_cb_inc_try_with_dummy.up_curr_conv
from q_cb_inc_try_with_dummy
group by q_cb_inc_try_with_dummy.rep_month, q_cb_inc_try_with_dummy.pc, q_cb_inc_try_with_dummy.l_1, q_cb_inc_try_with_dummy.l_2, q_cb_inc_try_with_dummy.l_3, q_cb_inc_try_with_dummy.l_4, q_cb_inc_try_with_dummy.l_5, q_cb_inc_try_with_dummy.l_6, q_cb_inc_try_with_dummy.up_curr_conv
pivot q_cb_inc_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_try_with_dummy_crosstab_mod
transform sum(q_cb_inc_try_with_dummy_mod.try_income) as try_income
select q_cb_inc_try_with_dummy_mod.rep_month, q_cb_inc_try_with_dummy_mod.pc, q_cb_inc_try_with_dummy_mod.l_1, q_cb_inc_try_with_dummy_mod.l_2, q_cb_inc_try_with_dummy_mod.l_3, q_cb_inc_try_with_dummy_mod.l_4, q_cb_inc_try_with_dummy_mod.l_5, q_cb_inc_try_with_dummy_mod.l_6, q_cb_inc_try_with_dummy_mod.up_curr_conv
from q_cb_inc_try_with_dummy_mod
group by q_cb_inc_try_with_dummy_mod.rep_month, q_cb_inc_try_with_dummy_mod.pc, q_cb_inc_try_with_dummy_mod.l_1, q_cb_inc_try_with_dummy_mod.l_2, q_cb_inc_try_with_dummy_mod.l_3, q_cb_inc_try_with_dummy_mod.l_4, q_cb_inc_try_with_dummy_mod.l_5, q_cb_inc_try_with_dummy_mod.l_6, q_cb_inc_try_with_dummy_mod.up_curr_conv
pivot q_cb_inc_try_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_usd_with_dummy_crosstab
transform sum(q_cb_inc_usd_with_dummy.usd_income) as usd_income
select q_cb_inc_usd_with_dummy.rep_month, q_cb_inc_usd_with_dummy.pc, q_cb_inc_usd_with_dummy.l_1, q_cb_inc_usd_with_dummy.l_2, q_cb_inc_usd_with_dummy.l_3, q_cb_inc_usd_with_dummy.l_4, q_cb_inc_usd_with_dummy.l_5, q_cb_inc_usd_with_dummy.l_6, q_cb_inc_usd_with_dummy.up_curr_conv
from q_cb_inc_usd_with_dummy
group by q_cb_inc_usd_with_dummy.rep_month, q_cb_inc_usd_with_dummy.pc, q_cb_inc_usd_with_dummy.l_1, q_cb_inc_usd_with_dummy.l_2, q_cb_inc_usd_with_dummy.l_3, q_cb_inc_usd_with_dummy.l_4, q_cb_inc_usd_with_dummy.l_5, q_cb_inc_usd_with_dummy.l_6, q_cb_inc_usd_with_dummy.up_curr_conv
pivot q_cb_inc_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_usd_with_dummy_crosstab_mod
transform sum(q_cb_inc_usd_with_dummy_mod.usd_income) as usd_income
select q_cb_inc_usd_with_dummy_mod.rep_month, q_cb_inc_usd_with_dummy_mod.pc, q_cb_inc_usd_with_dummy_mod.l_1, q_cb_inc_usd_with_dummy_mod.l_2, q_cb_inc_usd_with_dummy_mod.l_3, q_cb_inc_usd_with_dummy_mod.l_4, q_cb_inc_usd_with_dummy_mod.l_5, q_cb_inc_usd_with_dummy_mod.l_6, q_cb_inc_usd_with_dummy_mod.up_curr_conv
from q_cb_inc_usd_with_dummy_mod
group by q_cb_inc_usd_with_dummy_mod.rep_month, q_cb_inc_usd_with_dummy_mod.pc, q_cb_inc_usd_with_dummy_mod.l_1, q_cb_inc_usd_with_dummy_mod.l_2, q_cb_inc_usd_with_dummy_mod.l_3, q_cb_inc_usd_with_dummy_mod.l_4, q_cb_inc_usd_with_dummy_mod.l_5, q_cb_inc_usd_with_dummy_mod.l_6, q_cb_inc_usd_with_dummy_mod.up_curr_conv
pivot q_cb_inc_usd_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_with_dummy_crosstab
transform sum(q_cb_inc_with_dummy.inc_total) as total_income
select q_cb_inc_with_dummy.rep_month, q_cb_inc_with_dummy.pc, q_cb_inc_with_dummy.l_1, q_cb_inc_with_dummy.l_2, q_cb_inc_with_dummy.l_3, q_cb_inc_with_dummy.l_4, q_cb_inc_with_dummy.l_5, q_cb_inc_with_dummy.l_6, q_cb_inc_with_dummy.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")) as exc_try, iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_inc_with_dummy
group by q_cb_inc_with_dummy.rep_month, q_cb_inc_with_dummy.pc, q_cb_inc_with_dummy.l_1, q_cb_inc_with_dummy.l_2, q_cb_inc_with_dummy.l_3, q_cb_inc_with_dummy.l_4, q_cb_inc_with_dummy.l_5, q_cb_inc_with_dummy.l_6, q_cb_inc_with_dummy.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")), iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")), iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_inc_with_dummy.inc_base_mon;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur
select t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6, t_cb_inc_total_st.inc_total, t_cb_inc_total_st.currency, iif([currency]="eur",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_eur],[inc_total]*[r_try_eur])) as eur_income, "eur" as up_curr_conv, t_cb_inc_total_st.inc_base_mon as [month], t_cb_inc_total_st.key_r_pc_l6
from t_cb_inc_total_st left join mon_curr_rates on (t_cb_inc_total_st.inc_base_mon = mon_curr_rates.month) and (t_cb_inc_total_st.rep_month = mon_curr_rates.rep_month)
order by t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_mod
select q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, iif([currency]="eur",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_eur],[inc_total]*[r_try_eur])) as eur_income, "eur" as up_curr_conv, q_cb_inc_total_mod.month as [month], q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.key_r_pc_l6
from q_cb_inc_total_mod left join q_monthly_curr_rates_mod_crosstab on q_cb_inc_total_mod.month = q_monthly_curr_rates_mod_crosstab.month
where (((q_cb_inc_total_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_mod_mt
select q_cb_inc_eur_mod.rep_month, q_cb_inc_eur_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_eur_mod.month, q_cb_inc_eur_mod.eur_income, q_cb_inc_eur_mod.up_curr_conv, q_cb_inc_eur_mod.l_1, q_cb_inc_eur_mod.l_2, q_cb_inc_eur_mod.l_3, q_cb_inc_eur_mod.l_4, q_cb_inc_eur_mod.l_5, q_cb_inc_eur_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_eur_mod.key_r_pc_l6 into t_cb_inc_eur_mod_st
from (q_cb_inc_eur_mod left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_inc_eur_mod.l_3 = c3_code.c_l3) and (q_cb_inc_eur_mod.l_2 = c3_code.c_l2) and (q_cb_inc_eur_mod.l_1 = c3_code.c_l1)) left join c6_code on (q_cb_inc_eur_mod.l_6 = c6_code.c_l6) and (q_cb_inc_eur_mod.l_5 = c6_code.c_l5) and (q_cb_inc_eur_mod.l_4 = c6_code.c_l4) and (q_cb_inc_eur_mod.l_3 = c6_code.c_l3) and (q_cb_inc_eur_mod.l_2 = c6_code.c_l2) and (q_cb_inc_eur_mod.l_1 = c6_code.c_l1)
group by q_cb_inc_eur_mod.rep_month, q_cb_inc_eur_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_eur_mod.month, q_cb_inc_eur_mod.eur_income, q_cb_inc_eur_mod.up_curr_conv, q_cb_inc_eur_mod.l_1, q_cb_inc_eur_mod.l_2, q_cb_inc_eur_mod.l_3, q_cb_inc_eur_mod.l_4, q_cb_inc_eur_mod.l_5, q_cb_inc_eur_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_eur_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_mt
select q_cb_inc_eur.rep_month, q_cb_inc_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_eur.month, sum(q_cb_inc_eur.eur_income) as eur_income, q_cb_inc_eur.up_curr_conv, q_cb_inc_eur.l_1, q_cb_inc_eur.l_2, q_cb_inc_eur.l_3, q_cb_inc_eur.l_4, q_cb_inc_eur.l_5, q_cb_inc_eur.l_6, c6_code.desc_tr_l6, q_cb_inc_eur.key_r_pc_l6 into t_cb_inc_eur_st
from (q_cb_inc_eur left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_inc_eur.l_3 = c3_code.c_l3) and (q_cb_inc_eur.l_2 = c3_code.c_l2) and (q_cb_inc_eur.l_1 = c3_code.c_l1)) left join c6_code on (q_cb_inc_eur.l_6 = c6_code.c_l6) and (q_cb_inc_eur.l_5 = c6_code.c_l5) and (q_cb_inc_eur.l_4 = c6_code.c_l4) and (q_cb_inc_eur.l_3 = c6_code.c_l3) and (q_cb_inc_eur.l_2 = c6_code.c_l2) and (q_cb_inc_eur.l_1 = c6_code.c_l1)
group by q_cb_inc_eur.rep_month, q_cb_inc_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_eur.month, q_cb_inc_eur.up_curr_conv, q_cb_inc_eur.l_1, q_cb_inc_eur.l_2, q_cb_inc_eur.l_3, q_cb_inc_eur.l_4, q_cb_inc_eur.l_5, q_cb_inc_eur.l_6, c6_code.desc_tr_l6, q_cb_inc_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_income,
up_curr_conv,
key_r_pc_l6

from 
q_cb_inc_eur

union all select 
*
from 
q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_income,
up_curr_conv,
key_r_pc_l6

from 
q_cb_inc_eur_mod

union all select 
*
from 
q_bb_qty_dummy_full

where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_inc_qty
select *
from t_cb_inc_qty;

----------------------------------------------------------------------------------------------------
q_cb_inc_qty_crosstab
transform sum(q_cb_inc_qty.inc_base_qty) as inc_base_qty
select q_cb_inc_qty.rep_month, q_cb_inc_qty.pc, q_cb_inc_qty.l_1, q_cb_inc_qty.l_2, q_cb_inc_qty.l_3, q_cb_inc_qty.l_4, q_cb_inc_qty.l_5, q_cb_inc_qty.l_6
from q_cb_inc_qty
group by q_cb_inc_qty.rep_month, q_cb_inc_qty.pc, q_cb_inc_qty.l_1, q_cb_inc_qty.l_2, q_cb_inc_qty.l_3, q_cb_inc_qty.l_4, q_cb_inc_qty.l_5, q_cb_inc_qty.l_6
order by q_cb_inc_qty.rep_month, q_cb_inc_qty.pc, q_cb_inc_qty.l_1, q_cb_inc_qty.l_2, q_cb_inc_qty.l_3, q_cb_inc_qty.l_4, q_cb_inc_qty.l_5, q_cb_inc_qty.l_6
pivot q_cb_inc_qty.inc_base_mon;

----------------------------------------------------------------------------------------------------
q_cb_inc_total
select q_cb_inc_calculation.rep_month, q_cb_inc_calculation.pc, q_cb_inc_calculation.l_1, q_cb_inc_calculation.l_2, q_cb_inc_calculation.l_3, q_cb_inc_calculation.l_4, q_cb_inc_calculation.l_5, q_cb_inc_calculation.l_6, q_cb_inc_calculation.inc_base_mon, sum(q_cb_inc_calculation.inc_total) as inc_total, q_cb_inc_calculation.currency, q_cb_inc_calculation.key_r_pc_l6
from q_cb_inc_calculation
group by q_cb_inc_calculation.rep_month, q_cb_inc_calculation.pc, q_cb_inc_calculation.l_1, q_cb_inc_calculation.l_2, q_cb_inc_calculation.l_3, q_cb_inc_calculation.l_4, q_cb_inc_calculation.l_5, q_cb_inc_calculation.l_6, q_cb_inc_calculation.inc_base_mon, q_cb_inc_calculation.currency, q_cb_inc_calculation.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_total_mod
select t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6, t_cb_inc_total_st.inc_base_mon as [month], t_cb_inc_total_st.inc_total, t_cb_inc_total_st.currency, t_cb_inc_total_st.key_r_pc_l6
from t_cb_inc_total_st
where (((t_cb_inc_total_st.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_inc_total_mod_mt
select q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_total_mod.month, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_total_mod.key_r_pc_l6 into t_cb_inc_total_mod_st
from (q_cb_inc_total_mod left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_inc_total_mod.l_3 = c3_code.c_l3) and (q_cb_inc_total_mod.l_2 = c3_code.c_l2) and (q_cb_inc_total_mod.l_1 = c3_code.c_l1)) left join c6_code on (q_cb_inc_total_mod.l_6 = c6_code.c_l6) and (q_cb_inc_total_mod.l_5 = c6_code.c_l5) and (q_cb_inc_total_mod.l_4 = c6_code.c_l4) and (q_cb_inc_total_mod.l_3 = c6_code.c_l3) and (q_cb_inc_total_mod.l_2 = c6_code.c_l2) and (q_cb_inc_total_mod.l_1 = c6_code.c_l1)
group by q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_total_mod.month, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_total_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_total_mt
select q_cb_inc_total.rep_month, q_cb_inc_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_total.inc_base_mon, sum(q_cb_inc_total.inc_total) as inc_total, q_cb_inc_total.currency, q_cb_inc_total.l_1, q_cb_inc_total.l_2, q_cb_inc_total.l_3, q_cb_inc_total.l_4, q_cb_inc_total.l_5, q_cb_inc_total.l_6, c6_code.desc_tr_l6, q_cb_inc_total.key_r_pc_l6 into t_cb_inc_total_st
from (q_cb_inc_total left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_inc_total.l_3 = c3_code.c_l3) and (q_cb_inc_total.l_2 = c3_code.c_l2) and (q_cb_inc_total.l_1 = c3_code.c_l1)) left join c6_code on (q_cb_inc_total.l_6 = c6_code.c_l6) and (q_cb_inc_total.l_5 = c6_code.c_l5) and (q_cb_inc_total.l_4 = c6_code.c_l4) and (q_cb_inc_total.l_3 = c6_code.c_l3) and (q_cb_inc_total.l_2 = c6_code.c_l2) and (q_cb_inc_total.l_1 = c6_code.c_l1)
group by q_cb_inc_total.rep_month, q_cb_inc_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_total.inc_base_mon, q_cb_inc_total.currency, q_cb_inc_total.l_1, q_cb_inc_total.l_2, q_cb_inc_total.l_3, q_cb_inc_total.l_4, q_cb_inc_total.l_5, q_cb_inc_total.l_6, c6_code.desc_tr_l6, q_cb_inc_total.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_try
select t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6, t_cb_inc_total_st.inc_total, t_cb_inc_total_st.currency, iif([currency]="try",[inc_total],iif([currency]="eur",[inc_total]*[r_eur_try],[inc_total]*[r_usd_try])) as try_income, "try" as up_curr_conv, t_cb_inc_total_st.inc_base_mon as [month], t_cb_inc_total_st.key_r_pc_l6
from t_cb_inc_total_st left join mon_curr_rates on (t_cb_inc_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_inc_total_st.inc_base_mon = mon_curr_rates.month);

----------------------------------------------------------------------------------------------------
q_cb_inc_try_mod
select q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, iif([currency]="try",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_try],[inc_total]*[r_eur_try])) as try_income, "try" as up_curr_conv, q_cb_inc_total_mod.month as [month], q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.key_r_pc_l6
from q_cb_inc_total_mod left join q_monthly_curr_rates_mod_crosstab on q_cb_inc_total_mod.month = q_monthly_curr_rates_mod_crosstab.month
where (((q_cb_inc_total_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6;

----------------------------------------------------------------------------------------------------
q_cb_inc_try_mod_mt
select q_cb_inc_try_mod.rep_month, q_cb_inc_try_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_try_mod.month, q_cb_inc_try_mod.try_income, q_cb_inc_try_mod.up_curr_conv, q_cb_inc_try_mod.l_1, q_cb_inc_try_mod.l_2, q_cb_inc_try_mod.l_3, q_cb_inc_try_mod.l_4, q_cb_inc_try_mod.l_5, q_cb_inc_try_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_try_mod.key_r_pc_l6 into t_cb_inc_try_mod_st
from (q_cb_inc_try_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_inc_try_mod.l_1 = c3_code.c_l1) and (q_cb_inc_try_mod.l_2 = c3_code.c_l2) and (q_cb_inc_try_mod.l_3 = c3_code.c_l3)) left join c6_code on (q_cb_inc_try_mod.l_1 = c6_code.c_l1) and (q_cb_inc_try_mod.l_2 = c6_code.c_l2) and (q_cb_inc_try_mod.l_3 = c6_code.c_l3) and (q_cb_inc_try_mod.l_4 = c6_code.c_l4) and (q_cb_inc_try_mod.l_5 = c6_code.c_l5) and (q_cb_inc_try_mod.l_6 = c6_code.c_l6)
group by q_cb_inc_try_mod.rep_month, q_cb_inc_try_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_try_mod.month, q_cb_inc_try_mod.try_income, q_cb_inc_try_mod.up_curr_conv, q_cb_inc_try_mod.l_1, q_cb_inc_try_mod.l_2, q_cb_inc_try_mod.l_3, q_cb_inc_try_mod.l_4, q_cb_inc_try_mod.l_5, q_cb_inc_try_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_try_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_try_mt
select q_cb_inc_try.rep_month, q_cb_inc_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_try.month, sum(q_cb_inc_try.try_income) as try_income, q_cb_inc_try.up_curr_conv, q_cb_inc_try.l_1, q_cb_inc_try.l_2, q_cb_inc_try.l_3, q_cb_inc_try.l_4, q_cb_inc_try.l_5, q_cb_inc_try.l_6, c6_code.desc_tr_l6, q_cb_inc_try.key_r_pc_l6 into t_cb_inc_try_st
from (q_cb_inc_try left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_inc_try.l_1 = c3_code.c_l1) and (q_cb_inc_try.l_2 = c3_code.c_l2) and (q_cb_inc_try.l_3 = c3_code.c_l3)) left join c6_code on (q_cb_inc_try.l_1 = c6_code.c_l1) and (q_cb_inc_try.l_2 = c6_code.c_l2) and (q_cb_inc_try.l_3 = c6_code.c_l3) and (q_cb_inc_try.l_4 = c6_code.c_l4) and (q_cb_inc_try.l_5 = c6_code.c_l5) and (q_cb_inc_try.l_6 = c6_code.c_l6)
group by q_cb_inc_try.rep_month, q_cb_inc_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_try.month, q_cb_inc_try.up_curr_conv, q_cb_inc_try.l_1, q_cb_inc_try.l_2, q_cb_inc_try.l_3, q_cb_inc_try.l_4, q_cb_inc_try.l_5, q_cb_inc_try.l_6, c6_code.desc_tr_l6, q_cb_inc_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_try_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_inc_try

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_try_with_dummy_mod
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_inc_try_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full


where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_inc_usd
select t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6, t_cb_inc_total_st.inc_total, t_cb_inc_total_st.currency, iif([currency]="usd",[inc_total],iif([currency]="eur",[inc_total]*[r_eur_usd],[inc_total]*[r_try_usd])) as usd_income, "usd" as up_curr_conv, t_cb_inc_total_st.inc_base_mon as [month], t_cb_inc_total_st.key_r_pc_l6, mon_curr_rates.r_usd_try, mon_curr_rates.r_try_usd
from t_cb_inc_total_st left join mon_curr_rates on (t_cb_inc_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_inc_total_st.inc_base_mon = mon_curr_rates.month);

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_mod
select q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, iif([currency]="usd",[inc_total],iif([currency]="eur",[inc_total]*[r_eur_usd],[inc_total]*[r_try_usd])) as usd_income, "usd" as up_curr_conv, q_cb_inc_total_mod.month as [month], q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.key_r_pc_l6
from q_cb_inc_total_mod left join q_monthly_curr_rates_mod_crosstab on q_cb_inc_total_mod.month = q_monthly_curr_rates_mod_crosstab.month
where (((q_cb_inc_total_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6;

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_mod_mt
select q_cb_inc_usd_mod.rep_month, q_cb_inc_usd_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_usd_mod.month, q_cb_inc_usd_mod.usd_income, q_cb_inc_usd_mod.up_curr_conv, q_cb_inc_usd_mod.l_1, q_cb_inc_usd_mod.l_2, q_cb_inc_usd_mod.l_3, q_cb_inc_usd_mod.l_4, q_cb_inc_usd_mod.l_5, q_cb_inc_usd_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_usd_mod.key_r_pc_l6 into t_cb_inc_usd_mod_st
from (q_cb_inc_usd_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_inc_usd_mod.l_1 = c3_code.c_l1) and (q_cb_inc_usd_mod.l_2 = c3_code.c_l2) and (q_cb_inc_usd_mod.l_3 = c3_code.c_l3)) left join c6_code on (q_cb_inc_usd_mod.l_1 = c6_code.c_l1) and (q_cb_inc_usd_mod.l_2 = c6_code.c_l2) and (q_cb_inc_usd_mod.l_3 = c6_code.c_l3) and (q_cb_inc_usd_mod.l_4 = c6_code.c_l4) and (q_cb_inc_usd_mod.l_5 = c6_code.c_l5) and (q_cb_inc_usd_mod.l_6 = c6_code.c_l6)
group by q_cb_inc_usd_mod.rep_month, q_cb_inc_usd_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_usd_mod.month, q_cb_inc_usd_mod.usd_income, q_cb_inc_usd_mod.up_curr_conv, q_cb_inc_usd_mod.l_1, q_cb_inc_usd_mod.l_2, q_cb_inc_usd_mod.l_3, q_cb_inc_usd_mod.l_4, q_cb_inc_usd_mod.l_5, q_cb_inc_usd_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_usd_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_mt
select q_cb_inc_usd.rep_month, q_cb_inc_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_usd.month, sum(q_cb_inc_usd.usd_income) as usd_income, q_cb_inc_usd.up_curr_conv, q_cb_inc_usd.l_1, q_cb_inc_usd.l_2, q_cb_inc_usd.l_3, q_cb_inc_usd.l_4, q_cb_inc_usd.l_5, q_cb_inc_usd.l_6, c6_code.desc_tr_l6, q_cb_inc_usd.key_r_pc_l6 into t_cb_inc_usd_st
from (q_cb_inc_usd left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_inc_usd.l_1 = c3_code.c_l1) and (q_cb_inc_usd.l_2 = c3_code.c_l2) and (q_cb_inc_usd.l_3 = c3_code.c_l3)) left join c6_code on (q_cb_inc_usd.l_1 = c6_code.c_l1) and (q_cb_inc_usd.l_2 = c6_code.c_l2) and (q_cb_inc_usd.l_3 = c6_code.c_l3) and (q_cb_inc_usd.l_4 = c6_code.c_l4) and (q_cb_inc_usd.l_5 = c6_code.c_l5) and (q_cb_inc_usd.l_6 = c6_code.c_l6)
group by q_cb_inc_usd.rep_month, q_cb_inc_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_usd.month, q_cb_inc_usd.up_curr_conv, q_cb_inc_usd.l_1, q_cb_inc_usd.l_2, q_cb_inc_usd.l_3, q_cb_inc_usd.l_4, q_cb_inc_usd.l_5, q_cb_inc_usd.l_6, c6_code.desc_tr_l6, q_cb_inc_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_income,
up_curr_conv,
key_r_pc_l6


	from 
		q_cb_inc_usd

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_with_dummy_mod
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_inc_usd_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full


where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_inc_with_dummy
select 
		*
	from 
		q_cb_inc_total

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_with_dummy_crosstab_mod
transform sum(q_cb_inc_with_dummy_mod.inc_total) as total_income
select q_cb_inc_with_dummy_mod.rep_month, q_cb_inc_with_dummy_mod.pc, q_cb_inc_with_dummy_mod.l_1, q_cb_inc_with_dummy_mod.l_2, q_cb_inc_with_dummy_mod.l_3, q_cb_inc_with_dummy_mod.l_4, q_cb_inc_with_dummy_mod.l_5, q_cb_inc_with_dummy_mod.l_6, q_cb_inc_with_dummy_mod.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")) as exc_try, iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_inc_with_dummy_mod
group by q_cb_inc_with_dummy_mod.rep_month, q_cb_inc_with_dummy_mod.pc, q_cb_inc_with_dummy_mod.l_1, q_cb_inc_with_dummy_mod.l_2, q_cb_inc_with_dummy_mod.l_3, q_cb_inc_with_dummy_mod.l_4, q_cb_inc_with_dummy_mod.l_5, q_cb_inc_with_dummy_mod.l_6, q_cb_inc_with_dummy_mod.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")), iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")), iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_inc_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_with_dummy_mod
select 
		*
	from 
		q_cb_inc_total_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full

where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_activem
select q_cb_qty_activem_works_monthly.rep_month, mon_curr_rates.r_eur_try, mon_curr_rates.r_eur_usd, mon_curr_rates.r_usd_eur, mon_curr_rates.r_usd_try, q_cb_qty_activem_works_monthly.exp_cb_mon
from q_cb_qty_activem_works_monthly left join mon_curr_rates on (q_cb_qty_activem_works_monthly.exp_cb_mon = mon_curr_rates.month) and (q_cb_qty_activem_works_monthly.rep_month = mon_curr_rates.rep_month)
group by q_cb_qty_activem_works_monthly.rep_month, mon_curr_rates.r_eur_try, mon_curr_rates.r_eur_usd, mon_curr_rates.r_usd_eur, mon_curr_rates.r_usd_try, q_cb_qty_activem_works_monthly.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_activem_mod
select q_cb_active_months_res_qty_mod.rep_month, q_cb_active_months_res_qty_mod.pc, q_cb_active_months_res_qty_mod.l_1, q_cb_active_months_res_qty_mod.l_2, q_cb_active_months_res_qty_mod.l_3, q_cb_active_months_res_qty_mod.l_4, q_cb_active_months_res_qty_mod.l_5, q_cb_active_months_res_qty_mod.l_6, q_cb_active_months_res_qty_mod.rs_l1, q_cb_active_months_res_qty_mod.rs_l2, q_cb_active_months_res_qty_mod.rs_l3, q_cb_active_months_res_qty_mod.rs_l4, q_cb_active_months_res_qty_mod.rs_currency, q_cb_active_months_res_qty_mod.exp_cb_mon, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur, q_monthly_curr_rates_mod_crosstab.r_usd_try
from q_cb_active_months_res_qty_mod left join q_monthly_curr_rates_mod_crosstab on q_cb_active_months_res_qty_mod.exp_cb_mon = q_monthly_curr_rates_mod_crosstab.month
group by q_cb_active_months_res_qty_mod.rep_month, q_cb_active_months_res_qty_mod.pc, q_cb_active_months_res_qty_mod.l_1, q_cb_active_months_res_qty_mod.l_2, q_cb_active_months_res_qty_mod.l_3, q_cb_active_months_res_qty_mod.l_4, q_cb_active_months_res_qty_mod.l_5, q_cb_active_months_res_qty_mod.l_6, q_cb_active_months_res_qty_mod.rs_l1, q_cb_active_months_res_qty_mod.rs_l2, q_cb_active_months_res_qty_mod.rs_l3, q_cb_active_months_res_qty_mod.rs_l4, q_cb_active_months_res_qty_mod.rs_currency, q_cb_active_months_res_qty_mod.exp_cb_mon, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur, q_monthly_curr_rates_mod_crosstab.r_usd_try;

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_inc
select q_cb_qty_activem_works_monthly.rep_month, q_cb_qty_activem_works_monthly.pc, q_cb_qty_activem_works_monthly.exp_cb_mon, [q_cb_monthly_curr_rates_activem].[r_eur_try]/[q_cb_curr_base_val].[r_eur_try]-1 as rt_eur_try, [q_cb_monthly_curr_rates_activem].[r_eur_usd]/[q_cb_curr_base_val].[r_eur_usd]-1 as rt_eur_usd, [q_cb_monthly_curr_rates_activem].[r_usd_try]/[q_cb_curr_base_val].[r_usd_try]-1 as rt_usd_try, [q_cb_monthly_curr_rates_activem].[r_usd_eur]/[q_cb_curr_base_val].[r_usd_eur]-1 as rt_usd_eur
from (q_cb_qty_activem_works_monthly left join q_cb_monthly_curr_rates_activem on (q_cb_qty_activem_works_monthly.exp_cb_mon = q_cb_monthly_curr_rates_activem.exp_cb_mon) and (q_cb_qty_activem_works_monthly.rep_month = q_cb_monthly_curr_rates_activem.rep_month)) left join q_cb_curr_base_val on q_cb_qty_activem_works_monthly.rep_month = q_cb_curr_base_val.rep_month
group by q_cb_qty_activem_works_monthly.rep_month, q_cb_qty_activem_works_monthly.pc, q_cb_qty_activem_works_monthly.exp_cb_mon, [q_cb_monthly_curr_rates_activem].[r_eur_try]/[q_cb_curr_base_val].[r_eur_try]-1, [q_cb_monthly_curr_rates_activem].[r_eur_usd]/[q_cb_curr_base_val].[r_eur_usd]-1, [q_cb_monthly_curr_rates_activem].[r_usd_try]/[q_cb_curr_base_val].[r_usd_try]-1, [q_cb_monthly_curr_rates_activem].[r_usd_eur]/[q_cb_curr_base_val].[r_usd_eur]-1;

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_inc_mod
select q_cb_qty_activem_works_monthly_mod.rep_month, q_cb_qty_activem_works_monthly_mod.pc, q_cb_qty_activem_works_monthly_mod.exp_cb_mon, [q_cb_monthly_curr_rates_activem_mod].[r_eur_try]/[q_cb_curr_base_val_mod].[r_eur_try]-1 as rt_eur_try, [q_cb_monthly_curr_rates_activem_mod].[r_eur_usd]/[q_cb_curr_base_val_mod].[r_eur_usd]-1 as rt_eur_usd, [q_cb_monthly_curr_rates_activem_mod].[r_usd_try]/[q_cb_curr_base_val_mod].[r_usd_try]-1 as rt_usd_try, [q_cb_monthly_curr_rates_activem_mod].[r_usd_eur]/[q_cb_curr_base_val_mod].[r_usd_eur]-1 as rt_usd_eur
from (q_cb_qty_activem_works_monthly_mod left join q_cb_monthly_curr_rates_activem_mod on (q_cb_qty_activem_works_monthly_mod.exp_cb_mon = q_cb_monthly_curr_rates_activem_mod.exp_cb_mon) and (q_cb_qty_activem_works_monthly_mod.rep_month = q_cb_monthly_curr_rates_activem_mod.rep_month)) left join q_cb_curr_base_val_mod on q_cb_qty_activem_works_monthly_mod.rep_month = q_cb_curr_base_val_mod.rep_month
group by q_cb_qty_activem_works_monthly_mod.rep_month, q_cb_qty_activem_works_monthly_mod.pc, q_cb_qty_activem_works_monthly_mod.exp_cb_mon, [q_cb_monthly_curr_rates_activem_mod].[r_eur_try]/[q_cb_curr_base_val_mod].[r_eur_try]-1, [q_cb_monthly_curr_rates_activem_mod].[r_eur_usd]/[q_cb_curr_base_val_mod].[r_eur_usd]-1, [q_cb_monthly_curr_rates_activem_mod].[r_usd_try]/[q_cb_curr_base_val_mod].[r_usd_try]-1, [q_cb_monthly_curr_rates_activem_mod].[r_usd_eur]/[q_cb_curr_base_val_mod].[r_usd_eur]-1;

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_lastm_mod
select q_monthly_curr_rates_mod_crosstab.month, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_usd_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur
from q_monthly_curr_rates_mod_crosstab
where (((q_monthly_curr_rates_mod_crosstab.month)=dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_lastm_mod_mt
select q_cb_monthly_curr_rates_lastm_mod.month, q_cb_monthly_curr_rates_lastm_mod.r_eur_try, q_cb_monthly_curr_rates_lastm_mod.r_usd_try, q_cb_monthly_curr_rates_lastm_mod.r_eur_usd, q_cb_monthly_curr_rates_lastm_mod.r_usd_eur into t_cb_monthly_curr_rates_lastm_mod_st
from q_cb_monthly_curr_rates_lastm_mod;

----------------------------------------------------------------------------------------------------
q_cb_pr_wbs
select t_cb_inc_total_st.rep_month
	,t_cb_inc_total_st.pc
	,t_cb_inc_total_st.l_1
	,t_cb_inc_total_st.l_2
	,t_cb_inc_total_st.l_3
	,t_cb_inc_total_st.l_4
	,t_cb_inc_total_st.l_5
	,t_cb_inc_total_st.l_6
	,t_cb_inc_total_st.currency
	,t_cb_inc_total_st.inc_base_mon as [month] 
	,t_cb_inc_total_st.key_r_pc_l6
from t_cb_inc_total_st 
group by t_cb_inc_total_st.rep_month
	,t_cb_inc_total_st.pc
	,t_cb_inc_total_st.l_1
	,t_cb_inc_total_st.l_2
	,t_cb_inc_total_st.l_3
	,t_cb_inc_total_st.l_4
	,t_cb_inc_total_st.l_5
	,t_cb_inc_total_st.l_6
	,t_cb_inc_total_st.currency
	,t_cb_inc_total_st.inc_base_mon 
	,t_cb_inc_total_st.key_r_pc_l6
having (((sum(t_cb_inc_total_st.[inc_total]))<>0)) 
union select t_q_cb_exp.rep_month
	,t_q_cb_exp.pc
	,t_q_cb_exp.l_1
	,t_q_cb_exp.l_2
	,t_q_cb_exp.l_3
	,t_q_cb_exp.l_4
	,t_q_cb_exp.l_5
	,t_q_cb_exp.l_6
	,t_q_cb_exp.up_curr
	,t_q_cb_exp.month as [month] 
	,t_q_cb_exp.key_r_pc_l6
from t_q_cb_exp 
group by t_q_cb_exp.rep_month
	,t_q_cb_exp.pc
	,t_q_cb_exp.l_1
	,t_q_cb_exp.l_2
	,t_q_cb_exp.l_3
	,t_q_cb_exp.l_4
	,t_q_cb_exp.l_5
	,t_q_cb_exp.l_6
	,t_q_cb_exp.up_curr
	,t_q_cb_exp.month 
	,t_q_cb_exp.key_r_pc_l6	
having (((sum(t_q_cb_exp.[total_expense]))<>0));

----------------------------------------------------------------------------------------------------
q_cb_pr_wbs_mod
select t_cb_inc_total_mod_st.rep_month
	,t_cb_inc_total_mod_st.pc
	,t_cb_inc_total_mod_st.l_1
	,t_cb_inc_total_mod_st.l_2
	,t_cb_inc_total_mod_st.l_3
	,t_cb_inc_total_mod_st.l_4
	,t_cb_inc_total_mod_st.l_5
	,t_cb_inc_total_mod_st.l_6
	,t_cb_inc_total_mod_st.currency
	,t_cb_inc_total_mod_st.month as [month] 
	,t_cb_inc_total_mod_st.key_r_pc_l6
from t_cb_inc_total_mod_st 
group by t_cb_inc_total_mod_st.rep_month
	,t_cb_inc_total_mod_st.pc
	,t_cb_inc_total_mod_st.l_1
	,t_cb_inc_total_mod_st.l_2
	,t_cb_inc_total_mod_st.l_3
	,t_cb_inc_total_mod_st.l_4
	,t_cb_inc_total_mod_st.l_5
	,t_cb_inc_total_mod_st.l_6
	,t_cb_inc_total_mod_st.currency
	,t_cb_inc_total_mod_st.month 
	,t_cb_inc_total_mod_st.key_r_pc_l6
having (((sum(t_cb_inc_total_mod_st.[inc_total]))<>0)) 
union select t_q_cb_exp_mod.rep_month
	,t_q_cb_exp_mod.p01_code
	,t_q_cb_exp_mod.l_1
	,t_q_cb_exp_mod.l_2
	,t_q_cb_exp_mod.l_3
	,t_q_cb_exp_mod.l_4
	,t_q_cb_exp_mod.l_5
	,t_q_cb_exp_mod.l_6
	,t_q_cb_exp_mod.up_curr
	,t_q_cb_exp_mod.month as [month] 
	,t_q_cb_exp_mod.key_r_pc_l6
from t_q_cb_exp_mod 
group by t_q_cb_exp_mod.rep_month
	,t_q_cb_exp_mod.p01_code
	,t_q_cb_exp_mod.l_1
	,t_q_cb_exp_mod.l_2
	,t_q_cb_exp_mod.l_3
	,t_q_cb_exp_mod.l_4
	,t_q_cb_exp_mod.l_5
	,t_q_cb_exp_mod.l_6
	,t_q_cb_exp_mod.up_curr
	,t_q_cb_exp_mod.month 
	,t_q_cb_exp_mod.key_r_pc_l6	
having (((sum(t_q_cb_exp_mod.[total_expense]))<>0));

----------------------------------------------------------------------------------------------------
q_cb_profit
select q_cb_pr_wbs.rep_month, q_cb_pr_wbs.pc, q_cb_pr_wbs.l_1, q_cb_pr_wbs.l_2, q_cb_pr_wbs.l_3, q_cb_pr_wbs.l_4, q_cb_pr_wbs.l_5, q_cb_pr_wbs.l_6, q_cb_pr_wbs.currency, q_cb_pr_wbs.month, iif([inc_total] is null,0,[inc_total]) as income, iif([total_expense] is null,0,[total_expense]) as expense, [income]-[expense] as profit, q_cb_pr_wbs.key_r_pc_l6
from (q_cb_pr_wbs left join t_cb_inc_total_st on (q_cb_pr_wbs.key_r_pc_l6 = t_cb_inc_total_st.key_r_pc_l6) and (q_cb_pr_wbs.month = t_cb_inc_total_st.inc_base_mon) and (q_cb_pr_wbs.currency = t_cb_inc_total_st.currency)) left join t_q_cb_exp on (q_cb_pr_wbs.key_r_pc_l6 = t_q_cb_exp.key_r_pc_l6) and (q_cb_pr_wbs.month = t_q_cb_exp.month) and (q_cb_pr_wbs.currency = t_q_cb_exp.up_curr)
order by q_cb_pr_wbs.rep_month, q_cb_pr_wbs.pc, q_cb_pr_wbs.l_1, q_cb_pr_wbs.l_2, q_cb_pr_wbs.l_3, q_cb_pr_wbs.l_4, q_cb_pr_wbs.l_5, q_cb_pr_wbs.l_6, q_cb_pr_wbs.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_eur_with_dummy_crosstab
transform sum(q_cb_profit_eur_with_dummy.profit) as profit
select q_cb_profit_eur_with_dummy.rep_month, q_cb_profit_eur_with_dummy.pc, q_cb_profit_eur_with_dummy.l_1, q_cb_profit_eur_with_dummy.l_2, q_cb_profit_eur_with_dummy.l_3, q_cb_profit_eur_with_dummy.l_4, q_cb_profit_eur_with_dummy.l_5, q_cb_profit_eur_with_dummy.l_6, q_cb_profit_eur_with_dummy.curr
from q_cb_profit_eur_with_dummy
group by q_cb_profit_eur_with_dummy.rep_month, q_cb_profit_eur_with_dummy.pc, q_cb_profit_eur_with_dummy.l_1, q_cb_profit_eur_with_dummy.l_2, q_cb_profit_eur_with_dummy.l_3, q_cb_profit_eur_with_dummy.l_4, q_cb_profit_eur_with_dummy.l_5, q_cb_profit_eur_with_dummy.l_6, q_cb_profit_eur_with_dummy.curr
order by q_cb_profit_eur_with_dummy.rep_month, q_cb_profit_eur_with_dummy.pc, q_cb_profit_eur_with_dummy.l_1, q_cb_profit_eur_with_dummy.l_2, q_cb_profit_eur_with_dummy.l_3, q_cb_profit_eur_with_dummy.l_4, q_cb_profit_eur_with_dummy.l_5, q_cb_profit_eur_with_dummy.l_6
pivot q_cb_profit_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_eur_with_dummy_crosstab_mod
transform sum(q_cb_profit_eur_with_dummy_mod.profit) as profit
select q_cb_profit_eur_with_dummy_mod.rep_month, q_cb_profit_eur_with_dummy_mod.pc, q_cb_profit_eur_with_dummy_mod.l_1, q_cb_profit_eur_with_dummy_mod.l_2, q_cb_profit_eur_with_dummy_mod.l_3, q_cb_profit_eur_with_dummy_mod.l_4, q_cb_profit_eur_with_dummy_mod.l_5, q_cb_profit_eur_with_dummy_mod.l_6, q_cb_profit_eur_with_dummy_mod.curr
from q_cb_profit_eur_with_dummy_mod
group by q_cb_profit_eur_with_dummy_mod.rep_month, q_cb_profit_eur_with_dummy_mod.pc, q_cb_profit_eur_with_dummy_mod.l_1, q_cb_profit_eur_with_dummy_mod.l_2, q_cb_profit_eur_with_dummy_mod.l_3, q_cb_profit_eur_with_dummy_mod.l_4, q_cb_profit_eur_with_dummy_mod.l_5, q_cb_profit_eur_with_dummy_mod.l_6, q_cb_profit_eur_with_dummy_mod.curr
order by q_cb_profit_eur_with_dummy_mod.rep_month, q_cb_profit_eur_with_dummy_mod.pc, q_cb_profit_eur_with_dummy_mod.l_1, q_cb_profit_eur_with_dummy_mod.l_2, q_cb_profit_eur_with_dummy_mod.l_3, q_cb_profit_eur_with_dummy_mod.l_4, q_cb_profit_eur_with_dummy_mod.l_5, q_cb_profit_eur_with_dummy_mod.l_6
pivot q_cb_profit_eur_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_try_with_dummy_crosstab
transform sum(q_cb_profit_try_with_dummy.profit) as profit
select q_cb_profit_try_with_dummy.rep_month, q_cb_profit_try_with_dummy.pc, q_cb_profit_try_with_dummy.l_1, q_cb_profit_try_with_dummy.l_2, q_cb_profit_try_with_dummy.l_3, q_cb_profit_try_with_dummy.l_4, q_cb_profit_try_with_dummy.l_5, q_cb_profit_try_with_dummy.l_6, q_cb_profit_try_with_dummy.curr
from q_cb_profit_try_with_dummy
group by q_cb_profit_try_with_dummy.rep_month, q_cb_profit_try_with_dummy.pc, q_cb_profit_try_with_dummy.l_1, q_cb_profit_try_with_dummy.l_2, q_cb_profit_try_with_dummy.l_3, q_cb_profit_try_with_dummy.l_4, q_cb_profit_try_with_dummy.l_5, q_cb_profit_try_with_dummy.l_6, q_cb_profit_try_with_dummy.curr
order by q_cb_profit_try_with_dummy.rep_month, q_cb_profit_try_with_dummy.pc, q_cb_profit_try_with_dummy.l_1, q_cb_profit_try_with_dummy.l_2, q_cb_profit_try_with_dummy.l_3, q_cb_profit_try_with_dummy.l_4, q_cb_profit_try_with_dummy.l_5, q_cb_profit_try_with_dummy.l_6
pivot q_cb_profit_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_try_with_dummy_crosstab_mod
transform sum(q_cb_profit_try_with_dummy_mod.profit) as profit
select q_cb_profit_try_with_dummy_mod.rep_month, q_cb_profit_try_with_dummy_mod.pc, q_cb_profit_try_with_dummy_mod.l_1, q_cb_profit_try_with_dummy_mod.l_2, q_cb_profit_try_with_dummy_mod.l_3, q_cb_profit_try_with_dummy_mod.l_4, q_cb_profit_try_with_dummy_mod.l_5, q_cb_profit_try_with_dummy_mod.l_6, q_cb_profit_try_with_dummy_mod.curr
from q_cb_profit_try_with_dummy_mod
group by q_cb_profit_try_with_dummy_mod.rep_month, q_cb_profit_try_with_dummy_mod.pc, q_cb_profit_try_with_dummy_mod.l_1, q_cb_profit_try_with_dummy_mod.l_2, q_cb_profit_try_with_dummy_mod.l_3, q_cb_profit_try_with_dummy_mod.l_4, q_cb_profit_try_with_dummy_mod.l_5, q_cb_profit_try_with_dummy_mod.l_6, q_cb_profit_try_with_dummy_mod.curr
order by q_cb_profit_try_with_dummy_mod.rep_month, q_cb_profit_try_with_dummy_mod.pc, q_cb_profit_try_with_dummy_mod.l_1, q_cb_profit_try_with_dummy_mod.l_2, q_cb_profit_try_with_dummy_mod.l_3, q_cb_profit_try_with_dummy_mod.l_4, q_cb_profit_try_with_dummy_mod.l_5, q_cb_profit_try_with_dummy_mod.l_6
pivot q_cb_profit_try_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_usd_with_dummy_crosstab
transform sum(q_cb_profit_usd_with_dummy.profit) as profit
select q_cb_profit_usd_with_dummy.rep_month, q_cb_profit_usd_with_dummy.pc, q_cb_profit_usd_with_dummy.l_1, q_cb_profit_usd_with_dummy.l_2, q_cb_profit_usd_with_dummy.l_3, q_cb_profit_usd_with_dummy.l_4, q_cb_profit_usd_with_dummy.l_5, q_cb_profit_usd_with_dummy.l_6, q_cb_profit_usd_with_dummy.curr
from q_cb_profit_usd_with_dummy
group by q_cb_profit_usd_with_dummy.rep_month, q_cb_profit_usd_with_dummy.pc, q_cb_profit_usd_with_dummy.l_1, q_cb_profit_usd_with_dummy.l_2, q_cb_profit_usd_with_dummy.l_3, q_cb_profit_usd_with_dummy.l_4, q_cb_profit_usd_with_dummy.l_5, q_cb_profit_usd_with_dummy.l_6, q_cb_profit_usd_with_dummy.curr
order by q_cb_profit_usd_with_dummy.rep_month, q_cb_profit_usd_with_dummy.pc, q_cb_profit_usd_with_dummy.l_1, q_cb_profit_usd_with_dummy.l_2, q_cb_profit_usd_with_dummy.l_3, q_cb_profit_usd_with_dummy.l_4, q_cb_profit_usd_with_dummy.l_5, q_cb_profit_usd_with_dummy.l_6
pivot q_cb_profit_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_usd_with_dummy_crosstab_mod
transform sum(q_cb_profit_usd_with_dummy_mod.profit) as profit
select q_cb_profit_usd_with_dummy_mod.rep_month, q_cb_profit_usd_with_dummy_mod.pc, q_cb_profit_usd_with_dummy_mod.l_1, q_cb_profit_usd_with_dummy_mod.l_2, q_cb_profit_usd_with_dummy_mod.l_3, q_cb_profit_usd_with_dummy_mod.l_4, q_cb_profit_usd_with_dummy_mod.l_5, q_cb_profit_usd_with_dummy_mod.l_6, q_cb_profit_usd_with_dummy_mod.curr
from q_cb_profit_usd_with_dummy_mod
group by q_cb_profit_usd_with_dummy_mod.rep_month, q_cb_profit_usd_with_dummy_mod.pc, q_cb_profit_usd_with_dummy_mod.l_1, q_cb_profit_usd_with_dummy_mod.l_2, q_cb_profit_usd_with_dummy_mod.l_3, q_cb_profit_usd_with_dummy_mod.l_4, q_cb_profit_usd_with_dummy_mod.l_5, q_cb_profit_usd_with_dummy_mod.l_6, q_cb_profit_usd_with_dummy_mod.curr
order by q_cb_profit_usd_with_dummy_mod.rep_month, q_cb_profit_usd_with_dummy_mod.pc, q_cb_profit_usd_with_dummy_mod.l_1, q_cb_profit_usd_with_dummy_mod.l_2, q_cb_profit_usd_with_dummy_mod.l_3, q_cb_profit_usd_with_dummy_mod.l_4, q_cb_profit_usd_with_dummy_mod.l_5, q_cb_profit_usd_with_dummy_mod.l_6
pivot q_cb_profit_usd_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_with_dummy_crosstab
transform sum(q_cb_profit_with_dummy.profit) as sumofprofit
select q_cb_profit_with_dummy.rep_month, q_cb_profit_with_dummy.pc, q_cb_profit_with_dummy.l_1, q_cb_profit_with_dummy.l_2, q_cb_profit_with_dummy.l_3, q_cb_profit_with_dummy.l_4, q_cb_profit_with_dummy.l_5, q_cb_profit_with_dummy.l_6, q_cb_profit_with_dummy.curr
from q_cb_profit_with_dummy
group by q_cb_profit_with_dummy.rep_month, q_cb_profit_with_dummy.pc, q_cb_profit_with_dummy.l_1, q_cb_profit_with_dummy.l_2, q_cb_profit_with_dummy.l_3, q_cb_profit_with_dummy.l_4, q_cb_profit_with_dummy.l_5, q_cb_profit_with_dummy.l_6, q_cb_profit_with_dummy.curr
order by q_cb_profit_with_dummy.rep_month, q_cb_profit_with_dummy.pc, q_cb_profit_with_dummy.l_1, q_cb_profit_with_dummy.l_2, q_cb_profit_with_dummy.l_3, q_cb_profit_with_dummy.l_4, q_cb_profit_with_dummy.l_5, q_cb_profit_with_dummy.l_6, q_cb_profit_with_dummy.month
pivot q_cb_profit_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur
select t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6, t_cb_profit_total_st.month, "eur" as [currency], iif([t_cb_profit_total_st].[currency]="usd",[t_cb_profit_total_st].[income]*[r_usd_eur],iif([t_cb_profit_total_st].[currency]="try",[t_cb_profit_total_st].[income]*[r_try_eur],[t_cb_profit_total_st].[income])) as income, iif([t_cb_profit_total_st].[currency]="usd",[t_cb_profit_total_st].[expense]*[r_usd_eur],iif([t_cb_profit_total_st].[currency]="try",[t_cb_profit_total_st].[expense]*[r_try_eur],[t_cb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_st.key_r_pc_l6
from t_cb_profit_total_st left join mon_curr_rates on (t_cb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_profit_total_st.month = mon_curr_rates.month)
order by t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_mod
select t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6, t_cb_profit_total_mod_st.month, "eur" as [currency], iif([t_cb_profit_total_mod_st].[currency]="usd",[t_cb_profit_total_mod_st].[income]*[r_usd_eur],iif([t_cb_profit_total_mod_st].[currency]="try",[t_cb_profit_total_mod_st].[income]*[r_try_eur],[t_cb_profit_total_mod_st].[income])) as income, iif([t_cb_profit_total_mod_st].[currency]="usd",[t_cb_profit_total_mod_st].[expense]*[r_usd_eur],iif([t_cb_profit_total_mod_st].[currency]="try",[t_cb_profit_total_mod_st].[expense]*[r_try_eur],[t_cb_profit_total_mod_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_mod_st.key_r_pc_l6
from t_cb_profit_total_mod_st left join q_monthly_curr_rates_mod_crosstab on t_cb_profit_total_mod_st.month = q_monthly_curr_rates_mod_crosstab.month
order by t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_mod_mt
select q_cb_profit_eur_mod.rep_month, q_cb_profit_eur_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, sum(q_cb_profit_eur_mod.expense) as expense, sum(q_cb_profit_eur_mod.income) as income, q_cb_profit_eur_mod.month, q_cb_profit_eur_mod.currency, q_cb_profit_eur_mod.l_1, q_cb_profit_eur_mod.l_2, q_cb_profit_eur_mod.l_3, q_cb_profit_eur_mod.l_4, q_cb_profit_eur_mod.l_5, q_cb_profit_eur_mod.l_6, sum(q_cb_profit_eur_mod.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_eur_mod.key_r_pc_l6 into t_cb_profit_eur_st
from ((q_cb_profit_eur_mod left join c3_code on (q_cb_profit_eur_mod.l_1 = c3_code.c_l1) and (q_cb_profit_eur_mod.l_2 = c3_code.c_l2) and (q_cb_profit_eur_mod.l_3 = c3_code.c_l3)) left join c2_code on (q_cb_profit_eur_mod.l_1 = c2_code.c_l1) and (q_cb_profit_eur_mod.l_2 = c2_code.c_l2)) left join c6_code on (q_cb_profit_eur_mod.l_1 = c6_code.c_l1) and (q_cb_profit_eur_mod.l_2 = c6_code.c_l2) and (q_cb_profit_eur_mod.l_3 = c6_code.c_l3) and (q_cb_profit_eur_mod.l_4 = c6_code.c_l4) and (q_cb_profit_eur_mod.l_5 = c6_code.c_l5) and (q_cb_profit_eur_mod.l_6 = c6_code.c_l6)
group by q_cb_profit_eur_mod.rep_month, q_cb_profit_eur_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_eur_mod.month, q_cb_profit_eur_mod.currency, q_cb_profit_eur_mod.l_1, q_cb_profit_eur_mod.l_2, q_cb_profit_eur_mod.l_3, q_cb_profit_eur_mod.l_4, q_cb_profit_eur_mod.l_5, q_cb_profit_eur_mod.l_6, c6_code.desc_tr_l6, q_cb_profit_eur_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_mt
select q_cb_profit_eur.rep_month, q_cb_profit_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, sum(q_cb_profit_eur.expense) as expense, sum(q_cb_profit_eur.income) as income, q_cb_profit_eur.month, q_cb_profit_eur.currency, q_cb_profit_eur.l_1, q_cb_profit_eur.l_2, q_cb_profit_eur.l_3, q_cb_profit_eur.l_4, q_cb_profit_eur.l_5, q_cb_profit_eur.l_6, sum(q_cb_profit_eur.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_eur.key_r_pc_l6 into t_cb_profit_eur_st
from ((q_cb_profit_eur left join c3_code on (q_cb_profit_eur.l_3 = c3_code.c_l3) and (q_cb_profit_eur.l_2 = c3_code.c_l2) and (q_cb_profit_eur.l_1 = c3_code.c_l1)) left join c2_code on (q_cb_profit_eur.l_2 = c2_code.c_l2) and (q_cb_profit_eur.l_1 = c2_code.c_l1)) left join c6_code on (q_cb_profit_eur.l_6 = c6_code.c_l6) and (q_cb_profit_eur.l_5 = c6_code.c_l5) and (q_cb_profit_eur.l_4 = c6_code.c_l4) and (q_cb_profit_eur.l_3 = c6_code.c_l3) and (q_cb_profit_eur.l_2 = c6_code.c_l2) and (q_cb_profit_eur.l_1 = c6_code.c_l1)
group by q_cb_profit_eur.rep_month, q_cb_profit_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_eur.month, q_cb_profit_eur.currency, q_cb_profit_eur.l_1, q_cb_profit_eur.l_2, q_cb_profit_eur.l_3, q_cb_profit_eur.l_4, q_cb_profit_eur.l_5, q_cb_profit_eur.l_6, c6_code.desc_tr_l6, q_cb_profit_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_eur

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_eur_mod

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full 


where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_profit_mod
select q_cb_pr_wbs_mod.rep_month, q_cb_pr_wbs_mod.pc, q_cb_pr_wbs_mod.l_1, q_cb_pr_wbs_mod.l_2, q_cb_pr_wbs_mod.l_3, q_cb_pr_wbs_mod.l_4, q_cb_pr_wbs_mod.l_5, q_cb_pr_wbs_mod.l_6, q_cb_pr_wbs_mod.currency, q_cb_pr_wbs_mod.month, iif([inc_total] is null,0,[inc_total]) as income, iif([total_expense] is null,0,[total_expense]) as expense, [income]-[expense] as profit, q_cb_pr_wbs_mod.key_r_pc_l6
from (q_cb_pr_wbs_mod left join t_cb_inc_total_mod_st on (q_cb_pr_wbs_mod.currency = t_cb_inc_total_mod_st.currency) and (q_cb_pr_wbs_mod.month = t_cb_inc_total_mod_st.month) and (q_cb_pr_wbs_mod.key_r_pc_l6 = t_cb_inc_total_mod_st.key_r_pc_l6)) left join t_q_cb_exp_mod on (q_cb_pr_wbs_mod.currency = t_q_cb_exp_mod.up_curr) and (q_cb_pr_wbs_mod.month = t_q_cb_exp_mod.month) and (q_cb_pr_wbs_mod.key_r_pc_l6 = t_q_cb_exp_mod.key_r_pc_l6)
order by q_cb_pr_wbs_mod.rep_month, q_cb_pr_wbs_mod.pc, q_cb_pr_wbs_mod.l_1, q_cb_pr_wbs_mod.l_2, q_cb_pr_wbs_mod.l_3, q_cb_pr_wbs_mod.l_4, q_cb_pr_wbs_mod.l_5, q_cb_pr_wbs_mod.l_6, q_cb_pr_wbs_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_total_mod_mt
select q_cb_profit_mod.rep_month, q_cb_profit_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_mod.month, sum(q_cb_profit_mod.expense) as expense, sum(q_cb_profit_mod.income) as income, q_cb_profit_mod.currency, q_cb_profit_mod.l_1, q_cb_profit_mod.l_2, q_cb_profit_mod.l_3, q_cb_profit_mod.l_4, q_cb_profit_mod.l_5, q_cb_profit_mod.l_6, sum(q_cb_profit_mod.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_mod.key_r_pc_l6 into t_cb_profit_total_mod_st
from ((q_cb_profit_mod left join c3_code on (q_cb_profit_mod.l_3 = c3_code.c_l3) and (q_cb_profit_mod.l_2 = c3_code.c_l2) and (q_cb_profit_mod.l_1 = c3_code.c_l1)) left join c2_code on (q_cb_profit_mod.l_2 = c2_code.c_l2) and (q_cb_profit_mod.l_1 = c2_code.c_l1)) left join c6_code on (q_cb_profit_mod.l_6 = c6_code.c_l6) and (q_cb_profit_mod.l_5 = c6_code.c_l5) and (q_cb_profit_mod.l_4 = c6_code.c_l4) and (q_cb_profit_mod.l_3 = c6_code.c_l3) and (q_cb_profit_mod.l_2 = c6_code.c_l2) and (q_cb_profit_mod.l_1 = c6_code.c_l1)
group by q_cb_profit_mod.rep_month, q_cb_profit_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_mod.month, q_cb_profit_mod.currency, q_cb_profit_mod.l_1, q_cb_profit_mod.l_2, q_cb_profit_mod.l_3, q_cb_profit_mod.l_4, q_cb_profit_mod.l_5, q_cb_profit_mod.l_6, c6_code.desc_tr_l6, q_cb_profit_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_total_mt
select q_cb_profit.rep_month, q_cb_profit.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit.month, q_cb_profit.expense, q_cb_profit.income, q_cb_profit.currency, q_cb_profit.l_1, q_cb_profit.l_2, q_cb_profit.l_3, q_cb_profit.l_4, q_cb_profit.l_5, q_cb_profit.l_6, q_cb_profit.profit, c6_code.desc_tr_l6, q_cb_profit.key_r_pc_l6 into t_cb_profit_total_st
from ((q_cb_profit left join c3_code on (q_cb_profit.l_1 = c3_code.c_l1) and (q_cb_profit.l_2 = c3_code.c_l2) and (q_cb_profit.l_3 = c3_code.c_l3)) left join c2_code on (q_cb_profit.l_1 = c2_code.c_l1) and (q_cb_profit.l_2 = c2_code.c_l2)) left join c6_code on (q_cb_profit.l_1 = c6_code.c_l1) and (q_cb_profit.l_2 = c6_code.c_l2) and (q_cb_profit.l_3 = c6_code.c_l3) and (q_cb_profit.l_4 = c6_code.c_l4) and (q_cb_profit.l_5 = c6_code.c_l5) and (q_cb_profit.l_6 = c6_code.c_l6)
group by q_cb_profit.rep_month, q_cb_profit.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit.month, q_cb_profit.expense, q_cb_profit.income, q_cb_profit.currency, q_cb_profit.l_1, q_cb_profit.l_2, q_cb_profit.l_3, q_cb_profit.l_4, q_cb_profit.l_5, q_cb_profit.l_6, q_cb_profit.profit, c6_code.desc_tr_l6, q_cb_profit.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try
select t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6, t_cb_profit_total_st.month, "try" as [currency], iif([t_cb_profit_total_st].[currency]="usd",[t_cb_profit_total_st].[income]*[r_usd_try],iif([t_cb_profit_total_st].[currency]="eur",[t_cb_profit_total_st].[income]*[r_eur_try],[t_cb_profit_total_st].[income])) as income, iif([t_cb_profit_total_st].[currency]="usd",[t_cb_profit_total_st].[expense]*[r_usd_try],iif([t_cb_profit_total_st].[currency]="eur",[t_cb_profit_total_st].[expense]*[r_eur_try],[t_cb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_st.key_r_pc_l6
from t_cb_profit_total_st left join mon_curr_rates on (t_cb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_profit_total_st.month = mon_curr_rates.month)
order by t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_mod
select t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6, t_cb_profit_total_mod_st.month, "try" as [currency], iif([t_cb_profit_total_mod_st].[currency]="usd",[t_cb_profit_total_mod_st].[income]*[r_usd_try],iif([t_cb_profit_total_mod_st].[currency]="eur",[t_cb_profit_total_mod_st].[income]*[r_eur_try],[t_cb_profit_total_mod_st].[income])) as income, iif([t_cb_profit_total_mod_st].[currency]="usd",[t_cb_profit_total_mod_st].[expense]*[r_usd_try],iif([t_cb_profit_total_mod_st].[currency]="eur",[t_cb_profit_total_mod_st].[expense]*[r_eur_try],[t_cb_profit_total_mod_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_mod_st.key_r_pc_l6
from t_cb_profit_total_mod_st left join q_monthly_curr_rates_mod_crosstab on t_cb_profit_total_mod_st.month = q_monthly_curr_rates_mod_crosstab.month
order by t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_mod_mt
select q_cb_profit_try_mod.rep_month, q_cb_profit_try_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_try_mod.month, sum(q_cb_profit_try_mod.expense) as expense, sum(q_cb_profit_try_mod.income) as income, q_cb_profit_try_mod.currency, q_cb_profit_try_mod.l_1, q_cb_profit_try_mod.l_2, q_cb_profit_try_mod.l_3, q_cb_profit_try_mod.l_4, q_cb_profit_try_mod.l_5, q_cb_profit_try_mod.l_6, sum(q_cb_profit_try_mod.profit) as profit, c6_code.desc_tr_l6 into t_cb_profit_mod_try_st
from ((q_cb_profit_try_mod left join c3_code on (q_cb_profit_try_mod.l_1 = c3_code.c_l1) and (q_cb_profit_try_mod.l_2 = c3_code.c_l2) and (q_cb_profit_try_mod.l_3 = c3_code.c_l3)) left join c2_code on (q_cb_profit_try_mod.l_1 = c2_code.c_l1) and (q_cb_profit_try_mod.l_2 = c2_code.c_l2)) left join c6_code on (q_cb_profit_try_mod.l_1 = c6_code.c_l1) and (q_cb_profit_try_mod.l_2 = c6_code.c_l2) and (q_cb_profit_try_mod.l_3 = c6_code.c_l3) and (q_cb_profit_try_mod.l_4 = c6_code.c_l4) and (q_cb_profit_try_mod.l_5 = c6_code.c_l5) and (q_cb_profit_try_mod.l_6 = c6_code.c_l6)
group by q_cb_profit_try_mod.rep_month, q_cb_profit_try_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_try_mod.month, q_cb_profit_try_mod.currency, q_cb_profit_try_mod.l_1, q_cb_profit_try_mod.l_2, q_cb_profit_try_mod.l_3, q_cb_profit_try_mod.l_4, q_cb_profit_try_mod.l_5, q_cb_profit_try_mod.l_6, c6_code.desc_tr_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_mt
select q_cb_profit_try.rep_month, q_cb_profit_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_try.month, sum(q_cb_profit_try.expense) as expense, sum(q_cb_profit_try.income) as income, q_cb_profit_try.currency, q_cb_profit_try.l_1, q_cb_profit_try.l_2, q_cb_profit_try.l_3, q_cb_profit_try.l_4, q_cb_profit_try.l_5, q_cb_profit_try.l_6, sum(q_cb_profit_try.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_try.key_r_pc_l6 into t_cb_profit_try_st
from ((q_cb_profit_try left join c3_code on (q_cb_profit_try.l_1 = c3_code.c_l1) and (q_cb_profit_try.l_2 = c3_code.c_l2) and (q_cb_profit_try.l_3 = c3_code.c_l3)) left join c2_code on (q_cb_profit_try.l_1 = c2_code.c_l1) and (q_cb_profit_try.l_2 = c2_code.c_l2)) left join c6_code on (q_cb_profit_try.l_1 = c6_code.c_l1) and (q_cb_profit_try.l_2 = c6_code.c_l2) and (q_cb_profit_try.l_3 = c6_code.c_l3) and (q_cb_profit_try.l_4 = c6_code.c_l4) and (q_cb_profit_try.l_5 = c6_code.c_l5) and (q_cb_profit_try.l_6 = c6_code.c_l6)
group by q_cb_profit_try.rep_month, q_cb_profit_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_try.month, q_cb_profit_try.currency, q_cb_profit_try.l_1, q_cb_profit_try.l_2, q_cb_profit_try.l_3, q_cb_profit_try.l_4, q_cb_profit_try.l_5, q_cb_profit_try.l_6, c6_code.desc_tr_l6, q_cb_profit_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_try

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_try_mod

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full




where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_profit_usd
select t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6, t_cb_profit_total_st.month, "usd" as [currency], iif([t_cb_profit_total_st].[currency]="eur",[t_cb_profit_total_st].[income]*[r_eur_usd],iif([t_cb_profit_total_st].[currency]="try",[t_cb_profit_total_st].[income]*[r_try_usd],[t_cb_profit_total_st].[income])) as income, iif([t_cb_profit_total_st].[currency]="eur",[t_cb_profit_total_st].[expense]*[r_eur_usd],iif([t_cb_profit_total_st].[currency]="try",[t_cb_profit_total_st].[expense]*[r_try_usd],[t_cb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_st.key_r_pc_l6
from t_cb_profit_total_st left join mon_curr_rates on (t_cb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_profit_total_st.month = mon_curr_rates.month)
order by t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_mod
select t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6, t_cb_profit_total_mod_st.month, "usd" as [currency], iif([t_cb_profit_total_mod_st].[currency]="eur",[t_cb_profit_total_mod_st].[income]*[r_eur_usd],iif([t_cb_profit_total_mod_st].[currency]="try",[t_cb_profit_total_mod_st].[income]*[r_try_usd],[t_cb_profit_total_mod_st].[income])) as income, iif([t_cb_profit_total_mod_st].[currency]="eur",[t_cb_profit_total_mod_st].[expense]*[r_eur_usd],iif([t_cb_profit_total_mod_st].[currency]="try",[t_cb_profit_total_mod_st].[expense]*[r_try_usd],[t_cb_profit_total_mod_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_mod_st.key_r_pc_l6
from t_cb_profit_total_mod_st left join q_monthly_curr_rates_mod_crosstab on t_cb_profit_total_mod_st.month = q_monthly_curr_rates_mod_crosstab.month
order by t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_mod_mt
select q_cb_profit_usd_mod.rep_month, q_cb_profit_usd_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_usd_mod.month, sum(q_cb_profit_usd_mod.expense) as expense, sum(q_cb_profit_usd_mod.income) as income, q_cb_profit_usd_mod.currency, q_cb_profit_usd_mod.l_1, q_cb_profit_usd_mod.l_2, q_cb_profit_usd_mod.l_3, q_cb_profit_usd_mod.l_4, q_cb_profit_usd_mod.l_5, q_cb_profit_usd_mod.l_6, sum(q_cb_profit_usd_mod.profit) as profit, c6_code.desc_tr_l6 into t_cb_profit_usd_mod_st
from ((q_cb_profit_usd_mod left join c3_code on (q_cb_profit_usd_mod.l_1 = c3_code.c_l1) and (q_cb_profit_usd_mod.l_2 = c3_code.c_l2) and (q_cb_profit_usd_mod.l_3 = c3_code.c_l3)) left join c2_code on (q_cb_profit_usd_mod.l_1 = c2_code.c_l1) and (q_cb_profit_usd_mod.l_2 = c2_code.c_l2)) left join c6_code on (q_cb_profit_usd_mod.l_1 = c6_code.c_l1) and (q_cb_profit_usd_mod.l_2 = c6_code.c_l2) and (q_cb_profit_usd_mod.l_3 = c6_code.c_l3) and (q_cb_profit_usd_mod.l_4 = c6_code.c_l4) and (q_cb_profit_usd_mod.l_5 = c6_code.c_l5) and (q_cb_profit_usd_mod.l_6 = c6_code.c_l6)
group by q_cb_profit_usd_mod.rep_month, q_cb_profit_usd_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_usd_mod.month, q_cb_profit_usd_mod.currency, q_cb_profit_usd_mod.l_1, q_cb_profit_usd_mod.l_2, q_cb_profit_usd_mod.l_3, q_cb_profit_usd_mod.l_4, q_cb_profit_usd_mod.l_5, q_cb_profit_usd_mod.l_6, c6_code.desc_tr_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_mt
select q_cb_profit_usd.rep_month, q_cb_profit_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_usd.month, sum(q_cb_profit_usd.expense) as expense, sum(q_cb_profit_usd.income) as income, q_cb_profit_usd.currency, q_cb_profit_usd.l_1, q_cb_profit_usd.l_2, q_cb_profit_usd.l_3, q_cb_profit_usd.l_4, q_cb_profit_usd.l_5, q_cb_profit_usd.l_6, sum(q_cb_profit_usd.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_usd.key_r_pc_l6 into t_cb_profit_usd_st
from ((q_cb_profit_usd left join c3_code on (q_cb_profit_usd.l_3 = c3_code.c_l3) and (q_cb_profit_usd.l_2 = c3_code.c_l2) and (q_cb_profit_usd.l_1 = c3_code.c_l1)) left join c2_code on (q_cb_profit_usd.l_2 = c2_code.c_l2) and (q_cb_profit_usd.l_1 = c2_code.c_l1)) left join c6_code on (q_cb_profit_usd.l_6 = c6_code.c_l6) and (q_cb_profit_usd.l_5 = c6_code.c_l5) and (q_cb_profit_usd.l_4 = c6_code.c_l4) and (q_cb_profit_usd.l_3 = c6_code.c_l3) and (q_cb_profit_usd.l_2 = c6_code.c_l2) and (q_cb_profit_usd.l_1 = c6_code.c_l1)
group by q_cb_profit_usd.rep_month, q_cb_profit_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_usd.month, q_cb_profit_usd.currency, q_cb_profit_usd.l_1, q_cb_profit_usd.l_2, q_cb_profit_usd.l_3, q_cb_profit_usd.l_4, q_cb_profit_usd.l_5, q_cb_profit_usd.l_6, c6_code.desc_tr_l6, q_cb_profit_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_usd

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_usd_mod

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full




where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_profit_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency as curr,
month,
profit

from 
q_cb_profit

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr as curr,
g_month as month,
total_expense as profit

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_profit_with_dummy_crosstab_mod
transform sum(q_cb_profit_with_dummy_mod.profit) as total_profit
select q_cb_profit_with_dummy_mod.rep_month, q_cb_profit_with_dummy_mod.pc, q_cb_profit_with_dummy_mod.l_1, q_cb_profit_with_dummy_mod.l_2, q_cb_profit_with_dummy_mod.l_3, q_cb_profit_with_dummy_mod.l_4, q_cb_profit_with_dummy_mod.l_5, q_cb_profit_with_dummy_mod.l_6, q_cb_profit_with_dummy_mod.curr, iif([curr]="eur","r_eur_try",iif([curr]="usd","r_usd_try","r_try_try")) as exc_try, iif([curr]="eur","r_eur_usd",iif([curr]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([curr]="eur","r_eur_eur",iif([curr]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_profit_with_dummy_mod
group by q_cb_profit_with_dummy_mod.rep_month, q_cb_profit_with_dummy_mod.pc, q_cb_profit_with_dummy_mod.l_1, q_cb_profit_with_dummy_mod.l_2, q_cb_profit_with_dummy_mod.l_3, q_cb_profit_with_dummy_mod.l_4, q_cb_profit_with_dummy_mod.l_5, q_cb_profit_with_dummy_mod.l_6, q_cb_profit_with_dummy_mod.curr, iif([curr]="eur","r_eur_try",iif([curr]="usd","r_usd_try","r_try_try")), iif([curr]="eur","r_eur_usd",iif([curr]="usd","r_usd_usd","r_try_usd")), iif([curr]="eur","r_eur_eur",iif([curr]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_profit_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency as curr,
month,
profit

from 
q_cb_profit_mod

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr as curr,
g_month as month,
total_expense as profit

	from 
		q_bb_qty_dummy_full

where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_project_months
select t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_001_projects.r03_s_name as name
from t_cb_profit_total_st left join t_001_projects on t_cb_profit_total_st.pc = t_001_projects.p_code
group by t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_001_projects.r03_s_name
order by t_cb_profit_total_st.rep_month desc;

----------------------------------------------------------------------------------------------------
q_cb_qty_activem_works
select t_cb_qty.key_r_pc_l6, t_cb_qty.exp_cb_mon
from t_cb_qty left join t_rep_month on t_cb_qty.rep_month = t_rep_month.rep_month
where (((t_cb_qty.exp_cb_mon)>t_rep_month.rep_month_date) and ((t_cb_qty.exp_cb_qty)<>0))
order by t_cb_qty.key_r_pc_l6, t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_qty_activem_works_mod
select t_cb_qty.key_r_pc_l6, t_cb_qty.exp_cb_mon
from t_cb_qty left join t_rep_month on t_cb_qty.rep_month = t_rep_month.rep_month
where (((t_cb_qty.exp_cb_mon)>t_rep_month.rep_month_date) and ((t_cb_qty.exp_cb_qty)<>0) and ((t_cb_qty.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by t_cb_qty.key_r_pc_l6, t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_qty_activem_works_monthly
select t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon
from t_cb_qty left join t_rep_month on t_cb_qty.rep_month = t_rep_month.rep_month
where (((t_cb_qty.exp_cb_mon)>[t_rep_month].[rep_month_date]) and ((t_cb_qty.exp_cb_qty)<>0))
group by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon
order by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_qty_activem_works_monthly_mod
select t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon
from t_cb_qty left join t_rep_month on t_cb_qty.rep_month = t_rep_month.rep_month
where (((t_cb_qty.exp_cb_mon)>t_rep_month.rep_month_date) and ((t_cb_qty.exp_cb_qty)<>0))
group by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon
having (((t_cb_qty.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_qty_crosstab
transform sum(t_cb_qty.exp_cb_qty) as sumofexp_cb_qty
select t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.l_1, t_cb_qty.l_2, t_cb_qty.l_3, t_cb_qty.l_4, t_cb_qty.l_5, t_cb_qty.l_6
from t_cb_qty
group by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.l_1, t_cb_qty.l_2, t_cb_qty.l_3, t_cb_qty.l_4, t_cb_qty.l_5, t_cb_qty.l_6
order by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.l_1, t_cb_qty.l_2, t_cb_qty.l_3, t_cb_qty.l_4, t_cb_qty.l_5, t_cb_qty.l_6
pivot t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_res_up_market_coeff
select q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.rs_l1 as r_1_code, q_cb_up_pre_coeff_activem_indexes.rs_l2 as r_2_code, q_cb_up_pre_coeff_activem_indexes.rs_l3 as r_3_code, q_cb_up_pre_coeff_activem_indexes.rs_l4 as r_4_code, (1+[w_ufe]*[bb_ufe])*(1+[w_tufe]*[bb_tufe])*(1+[w_inf_usd]*[bb_inf_usd])*(1+[w_inf_eur]*[bb_inf_eur])*(1+[w_metal]*[bb_metal])*(1+[w_petrol]*[bb_petrol])*(1+[w_cement]*[bb_cement])*(1+[w_electricity]*[bb_electricity]) as up_cost_coeff, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon as g_month, q_cb_up_pre_coeff_activem_indexes.up_cost, q_cb_up_pre_coeff_activem_indexes.an_rs_quantity, r4_code.currency, q_cb_up_pre_coeff_activem_indexes.key_r4_simple, q_cb_up_pre_coeff_activem_indexes.key_r4, q_cb_up_pre_coeff_activem_indexes.key_r_pc_l6, q_cb_up_pre_coeff_activem_indexes.key_full, [key_full] & "." & [q_cb_up_pre_coeff_activem_indexes].[rs_currency] & "." & [q_cb_up_pre_coeff_activem_indexes].[exp_cb_mon] as key_full_comb
from q_cb_up_pre_coeff_activem_indexes left join r4_code on q_cb_up_pre_coeff_activem_indexes.key_r4_simple = r4_code.key_r4_simple
group by q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.rs_l1, q_cb_up_pre_coeff_activem_indexes.rs_l2, q_cb_up_pre_coeff_activem_indexes.rs_l3, q_cb_up_pre_coeff_activem_indexes.rs_l4, (1+[w_ufe]*[bb_ufe])*(1+[w_tufe]*[bb_tufe])*(1+[w_inf_usd]*[bb_inf_usd])*(1+[w_inf_eur]*[bb_inf_eur])*(1+[w_metal]*[bb_metal])*(1+[w_petrol]*[bb_petrol])*(1+[w_cement]*[bb_cement])*(1+[w_electricity]*[bb_electricity]), q_cb_up_pre_coeff_activem_indexes.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes.up_cost, q_cb_up_pre_coeff_activem_indexes.an_rs_quantity, r4_code.currency, q_cb_up_pre_coeff_activem_indexes.key_r4_simple, q_cb_up_pre_coeff_activem_indexes.key_r4, q_cb_up_pre_coeff_activem_indexes.key_r_pc_l6, q_cb_up_pre_coeff_activem_indexes.key_full, [key_full] & "." & [q_cb_up_pre_coeff_activem_indexes].[rs_currency] & "." & [q_cb_up_pre_coeff_activem_indexes].[exp_cb_mon]
order by q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.rs_l1, q_cb_up_pre_coeff_activem_indexes.rs_l2, q_cb_up_pre_coeff_activem_indexes.rs_l3, q_cb_up_pre_coeff_activem_indexes.rs_l4, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_res_up_market_coeff_mod
select q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.rs_l1 as r_1_code, q_cb_up_pre_coeff_activem_indexes_mod.rs_l2 as r_2_code, q_cb_up_pre_coeff_activem_indexes_mod.rs_l3 as r_3_code, q_cb_up_pre_coeff_activem_indexes_mod.rs_l4 as r_4_code, q_cb_up_pre_coeff_activem_indexes_mod.rs_currency as [currency], (1+[w_ufe]*[bb_ufe])*(1+[w_tufe]*[bb_tufe])*(1+[w_inf_usd]*[bb_inf_usd])*(1+[w_inf_eur]*[bb_inf_eur])*(1+[w_metal]*[bb_metal])*(1+[w_petrol]*[bb_petrol])*(1+[w_cement]*[bb_cement])*(1+[w_electricity]*[bb_electricity]) as up_cost_coeff, q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon as g_month, q_cb_up_pre_coeff_activem_indexes_mod.up_cost, q_cb_up_pre_coeff_activem_indexes_mod.an_rs_quantity, q_cb_up_pre_coeff_activem_indexes_mod.key_r4, q_cb_up_pre_coeff_activem_indexes_mod.key_r_pc_l6, q_cb_up_pre_coeff_activem_indexes_mod.key_full, q_cb_up_pre_coeff_activem_indexes_mod.key_r4_simple, [key_full] & "." & [q_cb_up_pre_coeff_activem_indexes_mod].[rs_currency] & "." & [q_cb_up_pre_coeff_activem_indexes_mod].[exp_cb_mon] as key_full_comb
from q_cb_up_pre_coeff_activem_indexes_mod left join r4_code on q_cb_up_pre_coeff_activem_indexes_mod.key_r4_simple = r4_code.key_r4_simple
group by q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.rs_l1, q_cb_up_pre_coeff_activem_indexes_mod.rs_l2, q_cb_up_pre_coeff_activem_indexes_mod.rs_l3, q_cb_up_pre_coeff_activem_indexes_mod.rs_l4, q_cb_up_pre_coeff_activem_indexes_mod.rs_currency, (1+[w_ufe]*[bb_ufe])*(1+[w_tufe]*[bb_tufe])*(1+[w_inf_usd]*[bb_inf_usd])*(1+[w_inf_eur]*[bb_inf_eur])*(1+[w_metal]*[bb_metal])*(1+[w_petrol]*[bb_petrol])*(1+[w_cement]*[bb_cement])*(1+[w_electricity]*[bb_electricity]), q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes_mod.up_cost, q_cb_up_pre_coeff_activem_indexes_mod.an_rs_quantity, q_cb_up_pre_coeff_activem_indexes_mod.key_r4, q_cb_up_pre_coeff_activem_indexes_mod.key_r_pc_l6, q_cb_up_pre_coeff_activem_indexes_mod.key_full, q_cb_up_pre_coeff_activem_indexes_mod.key_r4_simple, [key_full] & "." & [q_cb_up_pre_coeff_activem_indexes_mod].[rs_currency] & "." & [q_cb_up_pre_coeff_activem_indexes_mod].[exp_cb_mon]
order by q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.rs_l1, q_cb_up_pre_coeff_activem_indexes_mod.rs_l2, q_cb_up_pre_coeff_activem_indexes_mod.rs_l3, q_cb_up_pre_coeff_activem_indexes_mod.rs_l4, q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_data
select q_budget_wbs_union.l_1, q_budget_wbs_union.l_2, q_budget_wbs_union.l_3, q_budget_wbs_union.l_4, q_budget_wbs_union.l_5, q_budget_wbs_union.l_6, q_budget_wbs_union.up_curr, sum(iif([q_second_budget_gt].[incomegt] is null,"0",[q_second_budget_gt].[incomegt])) as incomegt_second, sum(iif([q_second_budget_gt].[expensegt] is null,"0",[q_second_budget_gt].[expensegt])) as expensegt_second, sum(iif([q_second_budget_gt].[profitgt] is null,"0",[q_second_budget_gt].[profitgt])) as profitgt_second, sum(iif([q_first_budget_gt].[incomegt] is null,"0",[q_first_budget_gt].[incomegt])) as incomegt_first, sum(iif([q_first_budget_gt].[expensegt] is null,"0",[q_first_budget_gt].[expensegt])) as expensegt_first, sum(iif([q_first_budget_gt].[profitgt] is null,"0",[q_first_budget_gt].[profitgt])) as profitgt_first, [incomegt_second]-[incomegt_first] as incomediffgt, [expensegt_second]-[expensegt_first] as expensediff_gt, [profitgt_second]-[profitgt_first] as profitdiff_gt, sum(iif([q_second_budget_rt_grouped].[incomert] is null,"0",[q_second_budget_rt_grouped].[incomert])) as incomert_second, sum(iif([q_second_budget_rt_grouped].[expensert] is null,"0",[q_second_budget_rt_grouped].[expensert])) as expensert_second, sum(iif([q_second_budget_rt_grouped].[profitrt] is null,"0",[q_second_budget_rt_grouped].[profitrt])) as profitrt_second, sum(iif([q_first_budget_rt_grouped].[incomert] is null,"0",[q_first_budget_rt_grouped].[incomert])) as incomert_first, sum(iif([q_first_budget_rt_grouped].[expensert] is null,"0",[q_first_budget_rt_grouped].[expensert])) as expensert_first, sum(iif([q_first_budget_rt_grouped].[profitrt] is null,"0",[q_first_budget_rt_grouped].[profitrt])) as profitrt_first, [incomert_second]-[incomert_first] as incomediffrt, [expensert_second]-[expensert_first] as expensediff_rt, [profitrt_second]-[profitrt_first] as profitdiff_rt, [incomegt_second]-[incomert_second] as incomerem_second, [expensegt_second]-[expensert_second] as expenserem_second, [profitgt_second]-[profitrt_second] as profitrem_second, [incomegt_first]-[incomert_first] as incomerem_first, [expensegt_first]-[expensert_first] as expenserem_first, [profitgt_first]-[profitrt_first] as profitrem_first, [incomerem_second]-[incomerem_first] as incomerem_diff, [expenserem_second]-[expenserem_first] as expenserem_diff, [profitrem_second]-[profitrem_first] as profitrem_diff, q_budget_wbs_union.desc_tr_l3, q_budget_wbs_union.desc_tr_l2, q_budget_wbs_union.desc_tr_l6, c5_code.desc_tr_l5, c4_code.desc_tr_l4
from (((((q_budget_wbs_union left join q_second_budget_gt on (q_budget_wbs_union.up_curr = q_second_budget_gt.up_curr) and (q_budget_wbs_union.l_6 = q_second_budget_gt.l_6) and (q_budget_wbs_union.l_5 = q_second_budget_gt.l_5) and (q_budget_wbs_union.l_4 = q_second_budget_gt.l_4) and (q_budget_wbs_union.l_3 = q_second_budget_gt.l_3) and (q_budget_wbs_union.l_2 = q_second_budget_gt.l_2) and (q_budget_wbs_union.l_1 = q_second_budget_gt.l_1)) left join q_first_budget_gt on (q_budget_wbs_union.up_curr = q_first_budget_gt.up_curr) and (q_budget_wbs_union.l_6 = q_first_budget_gt.l_6) and (q_budget_wbs_union.l_5 = q_first_budget_gt.l_5) and (q_budget_wbs_union.l_4 = q_first_budget_gt.l_4) and (q_budget_wbs_union.l_3 = q_first_budget_gt.l_3) and (q_budget_wbs_union.l_2 = q_first_budget_gt.l_2) and (q_budget_wbs_union.l_1 = q_first_budget_gt.l_1)) left join q_second_budget_rt_grouped on (q_budget_wbs_union.up_curr = q_second_budget_rt_grouped.up_curr) and (q_budget_wbs_union.l_6 = q_second_budget_rt_grouped.l_6) and (q_budget_wbs_union.l_5 = q_second_budget_rt_grouped.l_5) and (q_budget_wbs_union.l_4 = q_second_budget_rt_grouped.l_4) and (q_budget_wbs_union.l_3 = q_second_budget_rt_grouped.l_3) and (q_budget_wbs_union.l_2 = q_second_budget_rt_grouped.l_2) and (q_budget_wbs_union.l_1 = q_second_budget_rt_grouped.l_1)) left join q_first_budget_rt_grouped on (q_budget_wbs_union.up_curr = q_first_budget_rt_grouped.up_curr) and (q_budget_wbs_union.l_6 = q_first_budget_rt_grouped.l_6) and (q_budget_wbs_union.l_5 = q_first_budget_rt_grouped.l_5) and (q_budget_wbs_union.l_4 = q_first_budget_rt_grouped.l_4) and (q_budget_wbs_union.l_3 = q_first_budget_rt_grouped.l_3) and (q_budget_wbs_union.l_2 = q_first_budget_rt_grouped.l_2) and (q_budget_wbs_union.l_1 = q_first_budget_rt_grouped.l_1)) left join c5_code on (q_budget_wbs_union.l_5 = c5_code.c_l5) and (q_budget_wbs_union.l_4 = c5_code.c_l4) and (q_budget_wbs_union.l_3 = c5_code.c_l3) and (q_budget_wbs_union.l_2 = c5_code.c_l2) and (q_budget_wbs_union.l_1 = c5_code.c_l1)) left join c4_code on (q_budget_wbs_union.l_4 = c4_code.c_l4) and (q_budget_wbs_union.l_3 = c4_code.c_l3) and (q_budget_wbs_union.l_2 = c4_code.c_l2) and (q_budget_wbs_union.l_1 = c4_code.c_l1)
group by q_budget_wbs_union.l_1, q_budget_wbs_union.l_2, q_budget_wbs_union.l_3, q_budget_wbs_union.l_4, q_budget_wbs_union.l_5, q_budget_wbs_union.l_6, q_budget_wbs_union.up_curr, q_budget_wbs_union.desc_tr_l3, q_budget_wbs_union.desc_tr_l2, q_budget_wbs_union.desc_tr_l6, c5_code.desc_tr_l5, c4_code.desc_tr_l4;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_mod_usd_total
select sum(t_q_cb_exp_usd_mod.usd_expense) as total_usd_expense, t_q_cb_exp_usd_mod.rep_month
from t_q_cb_exp_usd_mod
group by t_q_cb_exp_usd_mod.rep_month
having (((t_q_cb_exp_usd_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_report_data
select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
incomegt_second as second_data_gt,
incomert_second as second_data_rt,
incomegt_first as first_data_gt,
incomert_first as first_data_rt,
incomerem_second as second_data_rem,
incomerem_first as first_data_rem,
incomegt_second - incomegt_first as gt_rem,
incomert_second - incomert_first as rt_rem,
incomerem_second - incomerem_first as rem_rem,
"1 - gelİr" as budget_type,
desc_tr_l5,
desc_tr_l4

	from 
		q_cb_sum_cons_data

where (incomegt_second + incomert_second + incomegt_first + incomert_first) <> 0

union

select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
expensegt_second,
expensert_second,
expensegt_first,
expensert_first,
expenserem_second,
expenserem_first,
expensegt_second - expensegt_first,
expensert_second - expensert_first as rt_rem,
expenserem_second - expenserem_first as rem_rem,
"2 - gİder" as budget_type,
desc_tr_l5,
desc_tr_l4

	from 
		q_cb_sum_cons_data

where  (expensegt_second + expensert_second + expensegt_first + expensert_first) <>0

union select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
profitgt_second,
profitrt_second,
profitgt_first,
profitrt_first,
profitrem_second,
profitrem_first,
profitgt_second - profitgt_first,
profitrt_second - profitrt_first as rt_rem,
profitrem_second - profitrem_first as rem_rem,
"3 - brüt kar" as budget_type,
desc_tr_l5,
desc_tr_l4

	from 
		q_cb_sum_cons_data

where  (profitgt_second + profitrt_second + profitgt_first + profitrt_first) <>0;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_report_data_lvl_4
select q_cb_sum_cons_report_data.l_1, q_cb_sum_cons_report_data.l_2, q_cb_sum_cons_report_data.l_3, q_cb_sum_cons_report_data.l_4, q_cb_sum_cons_report_data.l_5, q_cb_sum_cons_report_data.l_6, q_cb_sum_cons_report_data.up_curr, q_cb_sum_cons_report_data.desc_tr_l3, q_cb_sum_cons_report_data.desc_tr_l4, q_cb_sum_cons_report_data.desc_tr_l5, q_cb_sum_cons_report_data.desc_tr_l6, sum(q_cb_sum_cons_report_data.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data.budget_type, sum(q_cb_sum_cons_report_data.gt_rem) as gt_rem
from q_cb_sum_cons_report_data
group by q_cb_sum_cons_report_data.l_1, q_cb_sum_cons_report_data.l_2, q_cb_sum_cons_report_data.l_3, q_cb_sum_cons_report_data.l_4, q_cb_sum_cons_report_data.l_5, q_cb_sum_cons_report_data.l_6, q_cb_sum_cons_report_data.up_curr, q_cb_sum_cons_report_data.desc_tr_l3, q_cb_sum_cons_report_data.desc_tr_l4, q_cb_sum_cons_report_data.desc_tr_l5, q_cb_sum_cons_report_data.desc_tr_l6, q_cb_sum_cons_report_data.budget_type
having (((q_cb_sum_cons_report_data.l_1)='d') and ((q_cb_sum_cons_report_data.l_2)='01') and ((q_cb_sum_cons_report_data.l_3)='01'))
order by sum(q_cb_sum_cons_report_data.gt_rem) desc;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_report_data_lvl_5
select q_cb_sum_cons_report_data_lvl_4.l_1, q_cb_sum_cons_report_data_lvl_4.l_2, q_cb_sum_cons_report_data_lvl_4.l_3, q_cb_sum_cons_report_data_lvl_4.l_4, q_cb_sum_cons_report_data_lvl_4.l_5, q_cb_sum_cons_report_data_lvl_4.l_6, q_cb_sum_cons_report_data_lvl_4.up_curr, q_cb_sum_cons_report_data_lvl_4.desc_tr_l3, q_cb_sum_cons_report_data_lvl_4.desc_tr_l4, q_cb_sum_cons_report_data_lvl_4.desc_tr_l5, q_cb_sum_cons_report_data_lvl_4.desc_tr_l6, sum(q_cb_sum_cons_report_data_lvl_4.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data_lvl_4.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data_lvl_4.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data_lvl_4.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data_lvl_4.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data_lvl_4.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data_lvl_4.budget_type, sum(q_cb_sum_cons_report_data_lvl_4.gt_rem) as gt_rem
from q_cb_sum_cons_report_data_lvl_4
group by q_cb_sum_cons_report_data_lvl_4.l_1, q_cb_sum_cons_report_data_lvl_4.l_2, q_cb_sum_cons_report_data_lvl_4.l_3, q_cb_sum_cons_report_data_lvl_4.l_4, q_cb_sum_cons_report_data_lvl_4.l_5, q_cb_sum_cons_report_data_lvl_4.l_6, q_cb_sum_cons_report_data_lvl_4.up_curr, q_cb_sum_cons_report_data_lvl_4.desc_tr_l3, q_cb_sum_cons_report_data_lvl_4.desc_tr_l4, q_cb_sum_cons_report_data_lvl_4.desc_tr_l5, q_cb_sum_cons_report_data_lvl_4.desc_tr_l6, q_cb_sum_cons_report_data_lvl_4.budget_type
having (((q_cb_sum_cons_report_data_lvl_4.l_1)='d') and ((q_cb_sum_cons_report_data_lvl_4.l_2)='01') and ((q_cb_sum_cons_report_data_lvl_4.l_4)='11') and ((q_cb_sum_cons_report_data_lvl_4.l_3)='01'))
order by sum(q_cb_sum_cons_report_data_lvl_4.gt_rem) desc;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_usd_total
select sum(t_q_cb_exp_usd.usd_expense) as total_usd_expense, t_q_cb_exp_usd.rep_month
from t_q_cb_exp_usd
group by t_q_cb_exp_usd.rep_month
having (((t_q_cb_exp_usd.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_sum_projects_data
select q_budget_wbs_union_projects.pc, q_budget_wbs_union_projects.l_1, q_budget_wbs_union_projects.l_2, q_budget_wbs_union_projects.l_3, q_budget_wbs_union_projects.l_4, q_budget_wbs_union_projects.l_5, q_budget_wbs_union_projects.l_6, q_budget_wbs_union_projects.up_curr, sum(iif([q_second_budget_gt].[incomegt] is null,"0",[q_second_budget_gt].[incomegt])) as incomegt_second, sum(iif([q_second_budget_gt].[expensegt] is null,"0",[q_second_budget_gt].[expensegt])) as expensegt_second, sum(iif([q_second_budget_gt].[profitgt] is null,"0",[q_second_budget_gt].[profitgt])) as profitgt_second, sum(iif([q_first_budget_gt].[incomegt] is null,"0",[q_first_budget_gt].[incomegt])) as incomegt_first, sum(iif([q_first_budget_gt].[expensegt] is null,"0",[q_first_budget_gt].[expensegt])) as expensegt_first, sum(iif([q_first_budget_gt].[profitgt] is null,"0",[q_first_budget_gt].[profitgt])) as profitgt_first, [incomegt_second]-[incomegt_first] as incomediffgt, [expensegt_second]-[expensegt_first] as expensediff_gt, [profitgt_second]-[profitgt_first] as profitdiff_gt, sum(iif([q_second_budget_rt_grouped_projects].[incomert] is null,"0",[q_second_budget_rt_grouped_projects].[incomert])) as incomert_second, sum(iif([q_second_budget_rt_grouped_projects].[expensert] is null,"0",[q_second_budget_rt_grouped_projects].[expensert])) as expensert_second, sum(iif([q_second_budget_rt_grouped_projects].[profitrt] is null,"0",[q_second_budget_rt_grouped_projects].[profitrt])) as profitrt_second, sum(iif([q_first_budget_rt_grouped_projects].[incomert] is null,"0",[q_first_budget_rt_grouped_projects].[incomert])) as incomert_first, sum(iif([q_first_budget_rt_grouped_projects].[expensert] is null,"0",[q_first_budget_rt_grouped_projects].[expensert])) as expensert_first, sum(iif([q_first_budget_rt_grouped_projects].[profitrt] is null,"0",[q_first_budget_rt_grouped_projects].[profitrt])) as profitrt_first, [incomert_second]-[incomert_first] as incomediffrt, [expensert_second]-[expensert_first] as expensediff_rt, [profitrt_second]-[profitrt_first] as profitdiff_rt, [incomegt_second]-[incomert_second] as incomerem_second, [expensegt_second]-[expensert_second] as expenserem_second, [profitgt_second]-[profitrt_second] as profitrem_second, [incomegt_first]-[incomert_first] as incomerem_first, [expensegt_first]-[expensert_first] as expenserem_first, [profitgt_first]-[profitrt_first] as profitrem_first, [incomerem_second]-[incomerem_first] as incomerem_diff, [expenserem_second]-[expenserem_first] as expenserem_diff, [profitrem_second]-[profitrem_first] as profitrem_diff, q_budget_wbs_union_projects.desc_tr_l3, q_budget_wbs_union_projects.desc_tr_l2, q_budget_wbs_union_projects.desc_tr_l6, c4_code.desc_tr_l4, c5_code.desc_tr_l5
from (((((q_budget_wbs_union_projects left join q_second_budget_gt on (q_budget_wbs_union_projects.up_curr = q_second_budget_gt.up_curr) and (q_budget_wbs_union_projects.l_6 = q_second_budget_gt.l_6) and (q_budget_wbs_union_projects.l_5 = q_second_budget_gt.l_5) and (q_budget_wbs_union_projects.l_4 = q_second_budget_gt.l_4) and (q_budget_wbs_union_projects.l_3 = q_second_budget_gt.l_3) and (q_budget_wbs_union_projects.l_2 = q_second_budget_gt.l_2) and (q_budget_wbs_union_projects.l_1 = q_second_budget_gt.l_1) and (q_budget_wbs_union_projects.pc = q_second_budget_gt.pc)) left join q_first_budget_gt on (q_budget_wbs_union_projects.up_curr = q_first_budget_gt.up_curr) and (q_budget_wbs_union_projects.l_6 = q_first_budget_gt.l_6) and (q_budget_wbs_union_projects.l_5 = q_first_budget_gt.l_5) and (q_budget_wbs_union_projects.l_4 = q_first_budget_gt.l_4) and (q_budget_wbs_union_projects.l_3 = q_first_budget_gt.l_3) and (q_budget_wbs_union_projects.l_2 = q_first_budget_gt.l_2) and (q_budget_wbs_union_projects.l_1 = q_first_budget_gt.l_1) and (q_budget_wbs_union_projects.pc = q_first_budget_gt.pc)) left join q_second_budget_rt_grouped_projects on (q_budget_wbs_union_projects.pc = q_second_budget_rt_grouped_projects.pc) and (q_budget_wbs_union_projects.up_curr = q_second_budget_rt_grouped_projects.up_curr) and (q_budget_wbs_union_projects.l_6 = q_second_budget_rt_grouped_projects.l_6) and (q_budget_wbs_union_projects.l_5 = q_second_budget_rt_grouped_projects.l_5) and (q_budget_wbs_union_projects.l_4 = q_second_budget_rt_grouped_projects.l_4) and (q_budget_wbs_union_projects.l_3 = q_second_budget_rt_grouped_projects.l_3) and (q_budget_wbs_union_projects.l_2 = q_second_budget_rt_grouped_projects.l_2) and (q_budget_wbs_union_projects.l_1 = q_second_budget_rt_grouped_projects.l_1)) left join q_first_budget_rt_grouped_projects on (q_budget_wbs_union_projects.pc = q_first_budget_rt_grouped_projects.pc) and (q_budget_wbs_union_projects.up_curr = q_first_budget_rt_grouped_projects.up_curr) and (q_budget_wbs_union_projects.l_6 = q_first_budget_rt_grouped_projects.l_6) and (q_budget_wbs_union_projects.l_5 = q_first_budget_rt_grouped_projects.l_5) and (q_budget_wbs_union_projects.l_4 = q_first_budget_rt_grouped_projects.l_4) and (q_budget_wbs_union_projects.l_3 = q_first_budget_rt_grouped_projects.l_3) and (q_budget_wbs_union_projects.l_2 = q_first_budget_rt_grouped_projects.l_2) and (q_budget_wbs_union_projects.l_1 = q_first_budget_rt_grouped_projects.l_1)) left join c4_code on (q_budget_wbs_union_projects.l_4 = c4_code.c_l4) and (q_budget_wbs_union_projects.l_3 = c4_code.c_l3) and (q_budget_wbs_union_projects.l_2 = c4_code.c_l2) and (q_budget_wbs_union_projects.l_1 = c4_code.c_l1)) left join c5_code on (q_budget_wbs_union_projects.l_5 = c5_code.c_l5) and (q_budget_wbs_union_projects.l_4 = c5_code.c_l4) and (q_budget_wbs_union_projects.l_3 = c5_code.c_l3) and (q_budget_wbs_union_projects.l_2 = c5_code.c_l2) and (q_budget_wbs_union_projects.l_1 = c5_code.c_l1)
group by q_budget_wbs_union_projects.pc, q_budget_wbs_union_projects.l_1, q_budget_wbs_union_projects.l_2, q_budget_wbs_union_projects.l_3, q_budget_wbs_union_projects.l_4, q_budget_wbs_union_projects.l_5, q_budget_wbs_union_projects.l_6, q_budget_wbs_union_projects.up_curr, q_budget_wbs_union_projects.desc_tr_l3, q_budget_wbs_union_projects.desc_tr_l2, q_budget_wbs_union_projects.desc_tr_l6, c4_code.desc_tr_l4, c5_code.desc_tr_l5;

----------------------------------------------------------------------------------------------------
q_cb_sum_projects_report_data
select 
pc,
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
incomegt_second as second_data_gt,
incomert_second as second_data_rt,
incomegt_first as first_data_gt,
incomert_first as first_data_rt,
incomerem_second as second_data_rem,
incomerem_first as first_data_rem,
incomegt_second - incomegt_first as gt_rem,
incomert_second - incomert_first as rt_rem,
incomerem_second - incomerem_first as rem_rem,
"1 - gelİr" as budget_type,
desc_tr_l4,
desc_tr_l5

	from 
		 q_cb_sum_projects_data

where (incomegt_second + incomert_second + incomegt_first + incomert_first) <> 0


union

select 
pc,
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
expensegt_second,
expensert_second,
expensegt_first,
expensert_first,
expenserem_second,
expenserem_first,
expensegt_second - expensegt_first,
expensert_second - expensert_first as rt_rem,
expenserem_second - expenserem_first as rem_rem,
"2 - gİder" as budget_type,
desc_tr_l4,
desc_tr_l5


	from 
		 q_cb_sum_projects_data


where  (expensegt_second + expensert_second + expensegt_first + expensert_first) <>0


union select 
pc,
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
profitgt_second,
profitrt_second,
profitgt_first,
profitrt_first,
profitrem_second,
profitrem_first,
profitgt_second - profitgt_first,
profitrt_second - profitrt_first as rt_rem,
profitrem_second - profitrem_first as rem_rem,
"3 - brüt kar" as budget_type,
desc_tr_l4,
desc_tr_l5


	from 
		 q_cb_sum_projects_data

where  (profitgt_second + profitrt_second + profitgt_first + profitrt_first) <>0;

----------------------------------------------------------------------------------------------------
q_cb_sum_projects_report_data_lvl_4
select q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l4, q_cb_sum_projects_report_data.desc_tr_l5, q_cb_sum_projects_report_data.desc_tr_l6, sum(q_cb_sum_projects_report_data.second_data_gt) as second_data_gt, sum(q_cb_sum_projects_report_data.second_data_rt) as second_data_rt, sum(q_cb_sum_projects_report_data.first_data_gt) as first_data_gt, sum(q_cb_sum_projects_report_data.first_data_rt) as first_data_rt, sum(q_cb_sum_projects_report_data.second_data_rem) as second_data_rem, sum(q_cb_sum_projects_report_data.first_data_rem) as first_data_rem, q_cb_sum_projects_report_data.budget_type, sum(q_cb_sum_projects_report_data.gt_rem) as gt_rem
from q_cb_sum_projects_report_data
group by q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l4, q_cb_sum_projects_report_data.desc_tr_l5, q_cb_sum_projects_report_data.desc_tr_l6, q_cb_sum_projects_report_data.budget_type
having (((q_cb_sum_projects_report_data.l_1)='d') and ((q_cb_sum_projects_report_data.l_2)='01') and ((q_cb_sum_projects_report_data.pc)='mbe') and ((q_cb_sum_projects_report_data.l_3)='01'))
order by sum(q_cb_sum_projects_report_data.gt_rem) desc;

----------------------------------------------------------------------------------------------------
q_cb_sum_projects_report_data_lvl_5
select q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l4, q_cb_sum_projects_report_data.desc_tr_l5, q_cb_sum_projects_report_data.desc_tr_l6, sum(q_cb_sum_projects_report_data.second_data_gt) as second_data_gt, sum(q_cb_sum_projects_report_data.second_data_rt) as second_data_rt, sum(q_cb_sum_projects_report_data.first_data_gt) as first_data_gt, sum(q_cb_sum_projects_report_data.first_data_rt) as first_data_rt, sum(q_cb_sum_projects_report_data.second_data_rem) as second_data_rem, sum(q_cb_sum_projects_report_data.first_data_rem) as first_data_rem, q_cb_sum_projects_report_data.budget_type, sum(q_cb_sum_projects_report_data.gt_rem) as gt_rem
from q_cb_sum_projects_report_data
group by q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l4, q_cb_sum_projects_report_data.desc_tr_l5, q_cb_sum_projects_report_data.desc_tr_l6, q_cb_sum_projects_report_data.budget_type
having (((q_cb_sum_projects_report_data.l_1)='d') and ((q_cb_sum_projects_report_data.l_2)='01') and ((q_cb_sum_projects_report_data.pc)='mbe') and ((q_cb_sum_projects_report_data.l_4)='14') and ((q_cb_sum_projects_report_data.l_3)='01'))
order by sum(q_cb_sum_projects_report_data.gt_rem) desc;

----------------------------------------------------------------------------------------------------
q_cb_summary_report_currmonth_data_group
select q_cb_allprojects_report_currmonth_data.rep_month, q_cb_allprojects_report_currmonth_data.pc, q_cb_allprojects_report_currmonth_data.l_1, q_cb_allprojects_report_currmonth_data.l_2, q_cb_allprojects_report_currmonth_data.l_3, q_cb_allprojects_report_currmonth_data.l_4, q_cb_allprojects_report_currmonth_data.l_5, q_cb_allprojects_report_currmonth_data.l_6, q_cb_allprojects_report_currmonth_data.desc_tr_l2, q_cb_allprojects_report_currmonth_data.desc_tr_l3, q_cb_allprojects_report_currmonth_data.desc_tr_l6, sum(q_cb_allprojects_report_currmonth_data.income) as income, sum(q_cb_allprojects_report_currmonth_data.expense) as expense, sum(q_cb_allprojects_report_currmonth_data.profit) as profit, q_cb_allprojects_report_currmonth_data.currency
from q_cb_allprojects_report_currmonth_data
group by q_cb_allprojects_report_currmonth_data.rep_month, q_cb_allprojects_report_currmonth_data.pc, q_cb_allprojects_report_currmonth_data.l_1, q_cb_allprojects_report_currmonth_data.l_2, q_cb_allprojects_report_currmonth_data.l_3, q_cb_allprojects_report_currmonth_data.l_4, q_cb_allprojects_report_currmonth_data.l_5, q_cb_allprojects_report_currmonth_data.l_6, q_cb_allprojects_report_currmonth_data.desc_tr_l2, q_cb_allprojects_report_currmonth_data.desc_tr_l3, q_cb_allprojects_report_currmonth_data.desc_tr_l6, q_cb_allprojects_report_currmonth_data.currency;

----------------------------------------------------------------------------------------------------
q_cb_summary_report_union
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency
	from 
		q_cb_allprojects_report_currmonth_data

union select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency

	from 
		q_cb_allprojects_report_endproject_data;

----------------------------------------------------------------------------------------------------
q_cb_unit_price
select q_cb_up_coeff.rep_month, q_cb_up_coeff.up_pr_code as p01_code, q_cb_up_coeff.l_1, q_cb_up_coeff.l_2, q_cb_up_coeff.l_3, q_cb_up_coeff.l_4, q_cb_up_coeff.l_5, q_cb_up_coeff.l_6, q_cb_up_coeff.g_month as [month], q_cb_up_coeff.g_month, q_cb_up_coeff.rs_currency as up_curr, sum([up_cost]*[an_rs_quantity]*[up_cost_coeff_all]) as unit_price_planned_coeff, q_cb_up_coeff.key_r_pc_l6
from q_cb_up_coeff
group by q_cb_up_coeff.rep_month, q_cb_up_coeff.up_pr_code, q_cb_up_coeff.l_1, q_cb_up_coeff.l_2, q_cb_up_coeff.l_3, q_cb_up_coeff.l_4, q_cb_up_coeff.l_5, q_cb_up_coeff.l_6, q_cb_up_coeff.g_month, q_cb_up_coeff.rs_currency, q_cb_up_coeff.key_r_pc_l6, q_cb_up_coeff.g_month
order by q_cb_up_coeff.rep_month, q_cb_up_coeff.up_pr_code, q_cb_up_coeff.l_1, q_cb_up_coeff.l_2, q_cb_up_coeff.l_3, q_cb_up_coeff.l_4, q_cb_up_coeff.l_5, q_cb_up_coeff.l_6, q_cb_up_coeff.g_month, q_cb_up_coeff.g_month;

----------------------------------------------------------------------------------------------------
q_cb_unit_price_crosstab
transform sum(q_cb_unit_price.unit_price_planned_coeff) as sumofunit_price_planned_coeff
select q_cb_unit_price.rep_month, q_cb_unit_price.l_1, q_cb_unit_price.l_2, q_cb_unit_price.l_3, q_cb_unit_price.l_4, q_cb_unit_price.l_5, q_cb_unit_price.l_6, q_cb_unit_price.up_curr, q_cb_unit_price.p01_code
from q_cb_unit_price
group by q_cb_unit_price.rep_month, q_cb_unit_price.l_1, q_cb_unit_price.l_2, q_cb_unit_price.l_3, q_cb_unit_price.l_4, q_cb_unit_price.l_5, q_cb_unit_price.l_6, q_cb_unit_price.up_curr, q_cb_unit_price.p01_code
pivot q_cb_unit_price.month;

----------------------------------------------------------------------------------------------------
q_cb_unit_price_crosstab_mod
transform sum(q_cb_unit_price_mod.unit_price_planned_coeff) as sumofunit_price_planned_coeff
select q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.p01_code
from q_cb_unit_price_mod
group by q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.p01_code
pivot q_cb_unit_price_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_unit_price_diff
select q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.p01_code, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.month, q_cb_unit_price.unit_price_planned_coeff as up_orj, q_cb_unit_price_mod.unit_price_planned_coeff as up_mod, ([up_orj])-([up_mod]) as diff
from q_cb_unit_price_mod left join q_cb_unit_price on (q_cb_unit_price_mod.up_curr = q_cb_unit_price.up_curr) and (q_cb_unit_price_mod.month = q_cb_unit_price.month) and (q_cb_unit_price_mod.l_6 = q_cb_unit_price.l_6) and (q_cb_unit_price_mod.l_5 = q_cb_unit_price.l_5) and (q_cb_unit_price_mod.l_4 = q_cb_unit_price.l_4) and (q_cb_unit_price_mod.l_3 = q_cb_unit_price.l_3) and (q_cb_unit_price_mod.l_2 = q_cb_unit_price.l_2) and (q_cb_unit_price_mod.l_1 = q_cb_unit_price.l_1) and (q_cb_unit_price_mod.p01_code = q_cb_unit_price.p01_code) and (q_cb_unit_price_mod.rep_month = q_cb_unit_price.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_unit_price_mod
select q_cb_up_coeff_mod.rep_month, q_cb_up_coeff_mod.up_pr_code as p01_code, q_cb_up_coeff_mod.l_1, q_cb_up_coeff_mod.l_2, q_cb_up_coeff_mod.l_3, q_cb_up_coeff_mod.l_4, q_cb_up_coeff_mod.l_5, q_cb_up_coeff_mod.l_6, q_cb_up_coeff_mod.month, q_cb_up_coeff_mod.g_month, q_cb_up_coeff_mod.rs_currency as up_curr, sum([up_cost]*[an_rs_quantity]*[up_cost_coeff_all]) as unit_price_planned_coeff, q_cb_up_coeff_mod.key_r_pc_l6
from q_cb_up_coeff_mod
group by q_cb_up_coeff_mod.rep_month, q_cb_up_coeff_mod.up_pr_code, q_cb_up_coeff_mod.l_1, q_cb_up_coeff_mod.l_2, q_cb_up_coeff_mod.l_3, q_cb_up_coeff_mod.l_4, q_cb_up_coeff_mod.l_5, q_cb_up_coeff_mod.l_6, q_cb_up_coeff_mod.month, q_cb_up_coeff_mod.g_month, q_cb_up_coeff_mod.rs_currency, q_cb_up_coeff_mod.key_r_pc_l6
order by q_cb_up_coeff_mod.rep_month, q_cb_up_coeff_mod.up_pr_code, q_cb_up_coeff_mod.l_1, q_cb_up_coeff_mod.l_2, q_cb_up_coeff_mod.l_3, q_cb_up_coeff_mod.l_4, q_cb_up_coeff_mod.l_5, q_cb_up_coeff_mod.l_6, q_cb_up_coeff_mod.month, q_cb_up_coeff_mod.g_month;

----------------------------------------------------------------------------------------------------
q_cb_up_check
select q_pl_exp.rep_month, q_pl_exp.p01_code, q_pl_exp.l_1, q_pl_exp.l_2, q_pl_exp.l_3, q_pl_exp.l_4, q_pl_exp.l_5, q_pl_exp.l_6, q_pl_exp.up_curr, sum(q_pl_exp.total_expense) as [total expense], sum(q_cb_qty.exp_cb_qty) as quantity, c6_code.unit, q_cb_work_up_without_coeff.unit_price_planned as up_without_coeff, [total expense]/[quantity] as up_average_with_coeff, [up_average_with_coeff]/[up_without_coeff] as up_average_coeff
from ((q_pl_exp left join c6_code on (q_pl_exp.l_1 = c6_code.c_l1) and (q_pl_exp.l_2 = c6_code.c_l2) and (q_pl_exp.l_3 = c6_code.c_l3) and (q_pl_exp.l_4 = c6_code.c_l4) and (q_pl_exp.l_5 = c6_code.c_l5) and (q_pl_exp.l_6 = c6_code.c_l6)) left join q_cb_qty on (q_pl_exp.rep_month = q_cb_qty.rep_month) and (q_pl_exp.p01_code = q_cb_qty.pc) and (q_pl_exp.l_1 = q_cb_qty.l_1) and (q_pl_exp.l_2 = q_cb_qty.l_2) and (q_pl_exp.l_3 = q_cb_qty.l_3) and (q_pl_exp.l_4 = q_cb_qty.l_4) and (q_pl_exp.l_5 = q_cb_qty.l_5) and (q_pl_exp.l_6 = q_cb_qty.l_6)) left join q_cb_work_up_without_coeff on (q_pl_exp.rep_month = q_cb_work_up_without_coeff.rep_month) and (q_pl_exp.p01_code = q_cb_work_up_without_coeff.pc) and (q_pl_exp.l_1 = q_cb_work_up_without_coeff.l_1) and (q_pl_exp.l_2 = q_cb_work_up_without_coeff.l_2) and (q_pl_exp.l_3 = q_cb_work_up_without_coeff.l_3) and (q_pl_exp.l_4 = q_cb_work_up_without_coeff.l_4) and (q_pl_exp.l_5 = q_cb_work_up_without_coeff.l_5) and (q_pl_exp.l_6 = q_cb_work_up_without_coeff.l_6)
group by q_pl_exp.rep_month, q_pl_exp.p01_code, q_pl_exp.l_1, q_pl_exp.l_2, q_pl_exp.l_3, q_pl_exp.l_4, q_pl_exp.l_5, q_pl_exp.l_6, q_pl_exp.up_curr, c6_code.unit, q_cb_work_up_without_coeff.unit_price_planned;

----------------------------------------------------------------------------------------------------
q_cb_up_coeff
select q_cb_res_up_market_coeff.rep_month, q_cb_res_up_market_coeff.pc as up_pr_code, q_cb_res_up_market_coeff.l_1, q_cb_res_up_market_coeff.l_2, q_cb_res_up_market_coeff.l_3, q_cb_res_up_market_coeff.l_4, q_cb_res_up_market_coeff.l_5, q_cb_res_up_market_coeff.l_6, q_cb_res_up_market_coeff.r_1_code as up_rs_l1, q_cb_res_up_market_coeff.r_2_code as up_rs_l2, q_cb_res_up_market_coeff.r_3_code as up_rs_l3, q_cb_res_up_market_coeff.r_4_code as up_rs_l4, q_cb_res_up_market_coeff.g_month, q_cb_res_up_market_coeff.up_cost_coeff, q_cb_curr_escalation_rates.k_usd, q_cb_curr_escalation_rates.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6) as up_cost_coeff_all, q_cb_res_up_market_coeff.up_cost, q_cb_res_up_market_coeff.currency as rs_currency, q_cb_res_up_market_coeff.key_full, q_cb_res_up_market_coeff.an_rs_quantity, q_cb_res_up_market_coeff.key_r_pc_l6
from q_cb_res_up_market_coeff left join q_cb_curr_escalation_rates on q_cb_res_up_market_coeff.key_full_comb = q_cb_curr_escalation_rates.key_full_comb
group by q_cb_res_up_market_coeff.rep_month, q_cb_res_up_market_coeff.pc, q_cb_res_up_market_coeff.l_1, q_cb_res_up_market_coeff.l_2, q_cb_res_up_market_coeff.l_3, q_cb_res_up_market_coeff.l_4, q_cb_res_up_market_coeff.l_5, q_cb_res_up_market_coeff.l_6, q_cb_res_up_market_coeff.r_1_code, q_cb_res_up_market_coeff.r_2_code, q_cb_res_up_market_coeff.r_3_code, q_cb_res_up_market_coeff.r_4_code, q_cb_res_up_market_coeff.g_month, q_cb_res_up_market_coeff.up_cost_coeff, q_cb_curr_escalation_rates.k_usd, q_cb_curr_escalation_rates.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6), q_cb_res_up_market_coeff.up_cost, q_cb_res_up_market_coeff.currency, q_cb_res_up_market_coeff.key_full, q_cb_res_up_market_coeff.an_rs_quantity, q_cb_res_up_market_coeff.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_up_coeff_mod
select q_cb_res_up_market_coeff_mod.rep_month, q_cb_res_up_market_coeff_mod.pc as up_pr_code, q_cb_res_up_market_coeff_mod.l_1, q_cb_res_up_market_coeff_mod.l_2, q_cb_res_up_market_coeff_mod.l_3, q_cb_res_up_market_coeff_mod.l_4, q_cb_res_up_market_coeff_mod.l_5, q_cb_res_up_market_coeff_mod.l_6, q_cb_res_up_market_coeff_mod.r_1_code as up_rs_l1, q_cb_res_up_market_coeff_mod.r_2_code as up_rs_l2, q_cb_res_up_market_coeff_mod.r_3_code as up_rs_l3, q_cb_res_up_market_coeff_mod.r_4_code as up_rs_l4, q_cb_res_up_market_coeff_mod.g_month, q_cb_res_up_market_coeff_mod.up_cost_coeff, q_cb_curr_escalation_rates_mod.k_usd, q_cb_curr_escalation_rates_mod.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6) as up_cost_coeff_all, q_cb_res_up_market_coeff_mod.up_cost, q_cb_res_up_market_coeff_mod.currency as rs_currency, q_cb_res_up_market_coeff_mod.key_full, q_cb_res_up_market_coeff_mod.an_rs_quantity, q_cb_res_up_market_coeff_mod.key_r_pc_l6, q_cb_res_up_market_coeff_mod.g_month as [month]
from q_cb_res_up_market_coeff_mod left join q_cb_curr_escalation_rates_mod on q_cb_res_up_market_coeff_mod.key_full_comb = q_cb_curr_escalation_rates_mod.key_full_comb
group by q_cb_res_up_market_coeff_mod.rep_month, q_cb_res_up_market_coeff_mod.pc, q_cb_res_up_market_coeff_mod.l_1, q_cb_res_up_market_coeff_mod.l_2, q_cb_res_up_market_coeff_mod.l_3, q_cb_res_up_market_coeff_mod.l_4, q_cb_res_up_market_coeff_mod.l_5, q_cb_res_up_market_coeff_mod.l_6, q_cb_res_up_market_coeff_mod.r_1_code, q_cb_res_up_market_coeff_mod.r_2_code, q_cb_res_up_market_coeff_mod.r_3_code, q_cb_res_up_market_coeff_mod.r_4_code, q_cb_res_up_market_coeff_mod.g_month, q_cb_res_up_market_coeff_mod.up_cost_coeff, q_cb_curr_escalation_rates_mod.k_usd, q_cb_curr_escalation_rates_mod.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6), q_cb_res_up_market_coeff_mod.up_cost, q_cb_res_up_market_coeff_mod.currency, q_cb_res_up_market_coeff_mod.key_full, q_cb_res_up_market_coeff_mod.an_rs_quantity, q_cb_res_up_market_coeff_mod.key_r_pc_l6, q_cb_res_up_market_coeff_mod.g_month;

----------------------------------------------------------------------------------------------------
q_cb_up_pre_coeff_activem_indexes
select q_cb_analysis_activem_with_prices.rep_month, q_cb_analysis_activem_with_prices.pc, q_cb_analysis_activem_with_prices.l_1, q_cb_analysis_activem_with_prices.l_2, q_cb_analysis_activem_with_prices.l_3, q_cb_analysis_activem_with_prices.l_4, q_cb_analysis_activem_with_prices.l_5, q_cb_analysis_activem_with_prices.l_6, q_cb_analysis_activem_with_prices.exp_cb_mon, q_cb_analysis_activem_with_prices.rs_l1, q_cb_analysis_activem_with_prices.rs_l2, q_cb_analysis_activem_with_prices.rs_l3, q_cb_analysis_activem_with_prices.rs_l4, t_cb_indexes.bb_ufe, t_cb_indexes.bb_tufe, t_cb_indexes.bb_inf_usd, t_cb_indexes.bb_inf_eur, t_cb_indexes.bb_metal, t_cb_indexes.bb_petrol, t_cb_indexes.bb_cement, t_cb_indexes.bb_electricity, q_cb_analysis_activem_with_prices.currency as rs_currency, q_cb_analysis_activem_with_prices.an_rs_quantity, q_cb_analysis_activem_with_prices.up_cost, q_cb_analysis_activem_with_prices.key_r4_simple, q_cb_analysis_activem_with_prices.key_r4, q_cb_analysis_activem_with_prices.key_r_pc_l6, q_cb_analysis_activem_with_prices.key_full
from q_cb_analysis_activem_with_prices left join t_cb_indexes on (q_cb_analysis_activem_with_prices.exp_cb_mon = t_cb_indexes.g_month) and (q_cb_analysis_activem_with_prices.rep_month = t_cb_indexes.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_up_pre_coeff_activem_indexes_mod
select q_cb_analysis_activem_with_prices_mod.rep_month, q_cb_analysis_activem_with_prices_mod.key_r4, q_cb_analysis_activem_with_prices_mod.key_r_pc_l6, q_cb_analysis_activem_with_prices_mod.key_full, q_cb_analysis_activem_with_prices_mod.key_r4_simple, q_cb_analysis_activem_with_prices_mod.pc, q_cb_analysis_activem_with_prices_mod.exp_cb_mon, q_cb_analysis_activem_with_prices_mod.l_1, q_cb_analysis_activem_with_prices_mod.l_2, q_cb_analysis_activem_with_prices_mod.l_3, q_cb_analysis_activem_with_prices_mod.l_4, q_cb_analysis_activem_with_prices_mod.l_5, q_cb_analysis_activem_with_prices_mod.l_6, q_cb_analysis_activem_with_prices_mod.rs_l1, q_cb_analysis_activem_with_prices_mod.rs_l2, q_cb_analysis_activem_with_prices_mod.rs_l3, q_cb_analysis_activem_with_prices_mod.rs_l4, t_ac_indexes_mod.bb_ufe, t_ac_indexes_mod.bb_tufe, t_ac_indexes_mod.bb_inf_usd, t_ac_indexes_mod.bb_inf_eur, t_ac_indexes_mod.bb_metal, t_ac_indexes_mod.bb_petrol, t_ac_indexes_mod.bb_cement, t_ac_indexes_mod.bb_electricity, q_cb_analysis_activem_with_prices_mod.rs_currency, q_cb_analysis_activem_with_prices_mod.an_rs_quantity, q_cb_analysis_activem_with_prices_mod.up_cost
from q_cb_analysis_activem_with_prices_mod left join t_ac_indexes_mod on (q_cb_analysis_activem_with_prices_mod.exp_cb_mon = t_ac_indexes_mod.g_month) and (q_cb_analysis_activem_with_prices_mod.rep_month = t_ac_indexes_mod.rep_month)
order by q_cb_analysis_activem_with_prices_mod.rep_month, q_cb_analysis_activem_with_prices_mod.pc, q_cb_analysis_activem_with_prices_mod.exp_cb_mon, q_cb_analysis_activem_with_prices_mod.l_1, q_cb_analysis_activem_with_prices_mod.l_2, q_cb_analysis_activem_with_prices_mod.l_3, q_cb_analysis_activem_with_prices_mod.l_4, q_cb_analysis_activem_with_prices_mod.l_5, q_cb_analysis_activem_with_prices_mod.l_6;

----------------------------------------------------------------------------------------------------
q_cb_up_with_curr_coeff_crosstab
transform sum(q_cb_work_up_with_curr_coeff.up) as sumofup
select q_cb_work_up_with_curr_coeff.rep_month, q_cb_work_up_with_curr_coeff.pc, q_cb_work_up_with_curr_coeff.l_1, q_cb_work_up_with_curr_coeff.l_2, q_cb_work_up_with_curr_coeff.l_3, q_cb_work_up_with_curr_coeff.l_4, q_cb_work_up_with_curr_coeff.l_5, q_cb_work_up_with_curr_coeff.l_6, q_cb_work_up_with_curr_coeff.rs_currency
from q_cb_work_up_with_curr_coeff
group by q_cb_work_up_with_curr_coeff.rep_month, q_cb_work_up_with_curr_coeff.pc, q_cb_work_up_with_curr_coeff.l_1, q_cb_work_up_with_curr_coeff.l_2, q_cb_work_up_with_curr_coeff.l_3, q_cb_work_up_with_curr_coeff.l_4, q_cb_work_up_with_curr_coeff.l_5, q_cb_work_up_with_curr_coeff.l_6, q_cb_work_up_with_curr_coeff.rs_currency
order by q_cb_work_up_with_curr_coeff.rep_month, q_cb_work_up_with_curr_coeff.pc, q_cb_work_up_with_curr_coeff.l_1, q_cb_work_up_with_curr_coeff.l_2, q_cb_work_up_with_curr_coeff.l_3, q_cb_work_up_with_curr_coeff.l_4, q_cb_work_up_with_curr_coeff.l_5, q_cb_work_up_with_curr_coeff.l_6, q_cb_work_up_with_curr_coeff.month
pivot q_cb_work_up_with_curr_coeff.month;

----------------------------------------------------------------------------------------------------
q_cb_up_with_curr_coeff_crosstab_mod
transform sum(q_cb_work_up_with_curr_coeff_mod.up) as sumofup
select q_cb_work_up_with_curr_coeff_mod.rep_month, q_cb_work_up_with_curr_coeff_mod.pc, q_cb_work_up_with_curr_coeff_mod.l_1, q_cb_work_up_with_curr_coeff_mod.l_2, q_cb_work_up_with_curr_coeff_mod.l_3, q_cb_work_up_with_curr_coeff_mod.l_4, q_cb_work_up_with_curr_coeff_mod.l_5, q_cb_work_up_with_curr_coeff_mod.l_6, q_cb_work_up_with_curr_coeff_mod.rs_currency
from q_cb_work_up_with_curr_coeff_mod
group by q_cb_work_up_with_curr_coeff_mod.rep_month, q_cb_work_up_with_curr_coeff_mod.pc, q_cb_work_up_with_curr_coeff_mod.l_1, q_cb_work_up_with_curr_coeff_mod.l_2, q_cb_work_up_with_curr_coeff_mod.l_3, q_cb_work_up_with_curr_coeff_mod.l_4, q_cb_work_up_with_curr_coeff_mod.l_5, q_cb_work_up_with_curr_coeff_mod.l_6, q_cb_work_up_with_curr_coeff_mod.rs_currency
order by q_cb_work_up_with_curr_coeff_mod.rep_month, q_cb_work_up_with_curr_coeff_mod.pc, q_cb_work_up_with_curr_coeff_mod.l_1, q_cb_work_up_with_curr_coeff_mod.l_2, q_cb_work_up_with_curr_coeff_mod.l_3, q_cb_work_up_with_curr_coeff_mod.l_4, q_cb_work_up_with_curr_coeff_mod.l_5, q_cb_work_up_with_curr_coeff_mod.l_6, q_cb_work_up_with_curr_coeff_mod.month
pivot q_cb_work_up_with_curr_coeff_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_up_with_market_coeff_crosstab
transform sum(q_cb_work_up_with_market_coeff.up_with_coeff) as sumofup_with_coeff
select q_cb_work_up_with_market_coeff.rep_month, q_cb_work_up_with_market_coeff.pc, q_cb_work_up_with_market_coeff.l_1, q_cb_work_up_with_market_coeff.l_2, q_cb_work_up_with_market_coeff.l_3, q_cb_work_up_with_market_coeff.l_4, q_cb_work_up_with_market_coeff.l_5, q_cb_work_up_with_market_coeff.l_6, q_cb_work_up_with_market_coeff.currency
from q_cb_work_up_with_market_coeff
group by q_cb_work_up_with_market_coeff.rep_month, q_cb_work_up_with_market_coeff.pc, q_cb_work_up_with_market_coeff.l_1, q_cb_work_up_with_market_coeff.l_2, q_cb_work_up_with_market_coeff.l_3, q_cb_work_up_with_market_coeff.l_4, q_cb_work_up_with_market_coeff.l_5, q_cb_work_up_with_market_coeff.l_6, q_cb_work_up_with_market_coeff.currency
pivot q_cb_work_up_with_market_coeff.g_month;

----------------------------------------------------------------------------------------------------
q_cb_up_with_market_coeff_crosstab_mod
transform sum(q_cb_work_up_with_market_coeff_mod.up_with_coeff) as sumofup_with_coeff
select q_cb_work_up_with_market_coeff_mod.rep_month, q_cb_work_up_with_market_coeff_mod.pc, q_cb_work_up_with_market_coeff_mod.l_1, q_cb_work_up_with_market_coeff_mod.l_2, q_cb_work_up_with_market_coeff_mod.l_3, q_cb_work_up_with_market_coeff_mod.l_4, q_cb_work_up_with_market_coeff_mod.l_5, q_cb_work_up_with_market_coeff_mod.l_6, q_cb_work_up_with_market_coeff_mod.currency
from q_cb_work_up_with_market_coeff_mod
group by q_cb_work_up_with_market_coeff_mod.rep_month, q_cb_work_up_with_market_coeff_mod.pc, q_cb_work_up_with_market_coeff_mod.l_1, q_cb_work_up_with_market_coeff_mod.l_2, q_cb_work_up_with_market_coeff_mod.l_3, q_cb_work_up_with_market_coeff_mod.l_4, q_cb_work_up_with_market_coeff_mod.l_5, q_cb_work_up_with_market_coeff_mod.l_6, q_cb_work_up_with_market_coeff_mod.currency
pivot q_cb_work_up_with_market_coeff_mod.g_month;

----------------------------------------------------------------------------------------------------
q_cb_up_without_coeff_crosstab
transform sum(q_cb_work_up_without_coeff.unit_price_planned) as sumofunit_price_planned
select q_cb_work_up_without_coeff.rep_month, q_cb_work_up_without_coeff.pc, q_cb_work_up_without_coeff.l_1, q_cb_work_up_without_coeff.l_2, q_cb_work_up_without_coeff.l_3, q_cb_work_up_without_coeff.l_4, q_cb_work_up_without_coeff.l_5, q_cb_work_up_without_coeff.l_6, q_cb_work_up_without_coeff.rs_currency
from q_cb_work_up_without_coeff
group by q_cb_work_up_without_coeff.rep_month, q_cb_work_up_without_coeff.pc, q_cb_work_up_without_coeff.l_1, q_cb_work_up_without_coeff.l_2, q_cb_work_up_without_coeff.l_3, q_cb_work_up_without_coeff.l_4, q_cb_work_up_without_coeff.l_5, q_cb_work_up_without_coeff.l_6, q_cb_work_up_without_coeff.rs_currency
pivot q_cb_work_up_without_coeff.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_up_without_coeff_crosstab_mod
transform sum(q_cb_work_up_without_coeff_mod.unit_price_planned) as sumofunit_price_planned
select q_cb_work_up_without_coeff_mod.rep_month, q_cb_work_up_without_coeff_mod.pc, q_cb_work_up_without_coeff_mod.l_1, q_cb_work_up_without_coeff_mod.l_2, q_cb_work_up_without_coeff_mod.l_3, q_cb_work_up_without_coeff_mod.l_4, q_cb_work_up_without_coeff_mod.l_5, q_cb_work_up_without_coeff_mod.l_6, q_cb_work_up_without_coeff_mod.rs_currency
from q_cb_work_up_without_coeff_mod
group by q_cb_work_up_without_coeff_mod.rep_month, q_cb_work_up_without_coeff_mod.pc, q_cb_work_up_without_coeff_mod.l_1, q_cb_work_up_without_coeff_mod.l_2, q_cb_work_up_without_coeff_mod.l_3, q_cb_work_up_without_coeff_mod.l_4, q_cb_work_up_without_coeff_mod.l_5, q_cb_work_up_without_coeff_mod.l_6, q_cb_work_up_without_coeff_mod.rs_currency
pivot q_cb_work_up_without_coeff_mod.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_curr_coeff
select q_cb_analysis_activem_with_prices.rep_month, q_cb_analysis_activem_with_prices.pc, q_cb_analysis_activem_with_prices.l_1, q_cb_analysis_activem_with_prices.l_2, q_cb_analysis_activem_with_prices.l_3, q_cb_analysis_activem_with_prices.l_4, q_cb_analysis_activem_with_prices.l_5, q_cb_analysis_activem_with_prices.l_6, q_cb_analysis_activem_with_prices.exp_cb_mon as [month], sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]) as up, q_cb_curr_escalation_rates.rs_currency
from q_cb_analysis_activem_with_prices left join q_cb_curr_escalation_rates on (q_cb_analysis_activem_with_prices.rep_month = q_cb_curr_escalation_rates.rep_month) and (q_cb_analysis_activem_with_prices.pc = q_cb_curr_escalation_rates.pc) and (q_cb_analysis_activem_with_prices.l_1 = q_cb_curr_escalation_rates.l_1) and (q_cb_analysis_activem_with_prices.l_2 = q_cb_curr_escalation_rates.l_2) and (q_cb_analysis_activem_with_prices.l_3 = q_cb_curr_escalation_rates.l_3) and (q_cb_analysis_activem_with_prices.l_4 = q_cb_curr_escalation_rates.l_4) and (q_cb_analysis_activem_with_prices.l_5 = q_cb_curr_escalation_rates.l_5) and (q_cb_analysis_activem_with_prices.l_6 = q_cb_curr_escalation_rates.l_6) and (q_cb_analysis_activem_with_prices.rs_l1 = q_cb_curr_escalation_rates.rs_l1) and (q_cb_analysis_activem_with_prices.rs_l2 = q_cb_curr_escalation_rates.rs_l2) and (q_cb_analysis_activem_with_prices.rs_l3 = q_cb_curr_escalation_rates.rs_l3) and (q_cb_analysis_activem_with_prices.rs_l4 = q_cb_curr_escalation_rates.rs_l4) and (q_cb_analysis_activem_with_prices.currency = q_cb_curr_escalation_rates.rs_currency) and (q_cb_analysis_activem_with_prices.exp_cb_mon = q_cb_curr_escalation_rates.month)
group by q_cb_analysis_activem_with_prices.rep_month, q_cb_analysis_activem_with_prices.pc, q_cb_analysis_activem_with_prices.l_1, q_cb_analysis_activem_with_prices.l_2, q_cb_analysis_activem_with_prices.l_3, q_cb_analysis_activem_with_prices.l_4, q_cb_analysis_activem_with_prices.l_5, q_cb_analysis_activem_with_prices.l_6, q_cb_analysis_activem_with_prices.exp_cb_mon, q_cb_curr_escalation_rates.rs_currency
order by q_cb_analysis_activem_with_prices.rep_month, q_cb_analysis_activem_with_prices.pc, q_cb_analysis_activem_with_prices.l_1, q_cb_analysis_activem_with_prices.l_2, q_cb_analysis_activem_with_prices.l_3, q_cb_analysis_activem_with_prices.l_4, q_cb_analysis_activem_with_prices.l_5, q_cb_analysis_activem_with_prices.l_6, q_cb_analysis_activem_with_prices.exp_cb_mon, sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]);

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_curr_coeff_diff
select q_cb_work_up_with_curr_coeff_mod.rep_month, q_cb_work_up_with_curr_coeff_mod.pc, q_cb_work_up_with_curr_coeff_mod.l_1, q_cb_work_up_with_curr_coeff_mod.l_2, q_cb_work_up_with_curr_coeff_mod.l_3, q_cb_work_up_with_curr_coeff_mod.l_4, q_cb_work_up_with_curr_coeff_mod.l_5, q_cb_work_up_with_curr_coeff_mod.l_6, q_cb_work_up_with_curr_coeff_mod.rs_currency, q_cb_work_up_with_curr_coeff_mod.month, q_cb_work_up_with_curr_coeff.up as up_orj, q_cb_work_up_with_curr_coeff_mod.up as up_mod, ([up_orj])-([up_mod]) as diff
from q_cb_work_up_with_curr_coeff_mod left join q_cb_work_up_with_curr_coeff on (q_cb_work_up_with_curr_coeff_mod.rs_currency = q_cb_work_up_with_curr_coeff.rs_currency) and (q_cb_work_up_with_curr_coeff_mod.month = q_cb_work_up_with_curr_coeff.month) and (q_cb_work_up_with_curr_coeff_mod.l_6 = q_cb_work_up_with_curr_coeff.l_6) and (q_cb_work_up_with_curr_coeff_mod.l_5 = q_cb_work_up_with_curr_coeff.l_5) and (q_cb_work_up_with_curr_coeff_mod.l_4 = q_cb_work_up_with_curr_coeff.l_4) and (q_cb_work_up_with_curr_coeff_mod.l_3 = q_cb_work_up_with_curr_coeff.l_3) and (q_cb_work_up_with_curr_coeff_mod.l_2 = q_cb_work_up_with_curr_coeff.l_2) and (q_cb_work_up_with_curr_coeff_mod.l_1 = q_cb_work_up_with_curr_coeff.l_1) and (q_cb_work_up_with_curr_coeff_mod.pc = q_cb_work_up_with_curr_coeff.pc) and (q_cb_work_up_with_curr_coeff_mod.rep_month = q_cb_work_up_with_curr_coeff.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_curr_coeff_mod
select q_cb_analysis_activem_with_prices_mod.rep_month, q_cb_analysis_activem_with_prices_mod.pc, q_cb_analysis_activem_with_prices_mod.l_1, q_cb_analysis_activem_with_prices_mod.l_2, q_cb_analysis_activem_with_prices_mod.l_3, q_cb_analysis_activem_with_prices_mod.l_4, q_cb_analysis_activem_with_prices_mod.l_5, q_cb_analysis_activem_with_prices_mod.l_6, q_cb_analysis_activem_with_prices_mod.exp_cb_mon as [month], sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]) as up, q_cb_curr_escalation_rates_mod.rs_currency
from q_cb_analysis_activem_with_prices_mod left join q_cb_curr_escalation_rates_mod on (q_cb_analysis_activem_with_prices_mod.rep_month = q_cb_curr_escalation_rates_mod.rep_month) and (q_cb_analysis_activem_with_prices_mod.pc = q_cb_curr_escalation_rates_mod.pc) and (q_cb_analysis_activem_with_prices_mod.l_1 = q_cb_curr_escalation_rates_mod.l_1) and (q_cb_analysis_activem_with_prices_mod.l_2 = q_cb_curr_escalation_rates_mod.l_2) and (q_cb_analysis_activem_with_prices_mod.l_3 = q_cb_curr_escalation_rates_mod.l_3) and (q_cb_analysis_activem_with_prices_mod.l_4 = q_cb_curr_escalation_rates_mod.l_4) and (q_cb_analysis_activem_with_prices_mod.l_5 = q_cb_curr_escalation_rates_mod.l_5) and (q_cb_analysis_activem_with_prices_mod.l_6 = q_cb_curr_escalation_rates_mod.l_6) and (q_cb_analysis_activem_with_prices_mod.rs_l1 = q_cb_curr_escalation_rates_mod.rs_l1) and (q_cb_analysis_activem_with_prices_mod.rs_l2 = q_cb_curr_escalation_rates_mod.rs_l2) and (q_cb_analysis_activem_with_prices_mod.rs_l3 = q_cb_curr_escalation_rates_mod.rs_l3) and (q_cb_analysis_activem_with_prices_mod.rs_l4 = q_cb_curr_escalation_rates_mod.rs_l4) and (q_cb_analysis_activem_with_prices_mod.rs_currency = q_cb_curr_escalation_rates_mod.rs_currency) and (q_cb_analysis_activem_with_prices_mod.exp_cb_mon = q_cb_curr_escalation_rates_mod.month)
group by q_cb_analysis_activem_with_prices_mod.rep_month, q_cb_analysis_activem_with_prices_mod.pc, q_cb_analysis_activem_with_prices_mod.l_1, q_cb_analysis_activem_with_prices_mod.l_2, q_cb_analysis_activem_with_prices_mod.l_3, q_cb_analysis_activem_with_prices_mod.l_4, q_cb_analysis_activem_with_prices_mod.l_5, q_cb_analysis_activem_with_prices_mod.l_6, q_cb_analysis_activem_with_prices_mod.exp_cb_mon, q_cb_curr_escalation_rates_mod.rs_currency
order by q_cb_analysis_activem_with_prices_mod.rep_month, q_cb_analysis_activem_with_prices_mod.pc, q_cb_analysis_activem_with_prices_mod.l_1, q_cb_analysis_activem_with_prices_mod.l_2, q_cb_analysis_activem_with_prices_mod.l_3, q_cb_analysis_activem_with_prices_mod.l_4, q_cb_analysis_activem_with_prices_mod.l_5, q_cb_analysis_activem_with_prices_mod.l_6, q_cb_analysis_activem_with_prices_mod.exp_cb_mon, sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]);

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_market_coeff
select q_cb_res_up_market_coeff.pc, q_cb_res_up_market_coeff.l_1, q_cb_res_up_market_coeff.l_2, q_cb_res_up_market_coeff.l_3, q_cb_res_up_market_coeff.l_4, q_cb_res_up_market_coeff.l_5, q_cb_res_up_market_coeff.l_6, q_cb_res_up_market_coeff.rep_month, q_cb_res_up_market_coeff.g_month, sum([an_rs_quantity]*[up_cost]*[up_cost_coeff]) as up_with_coeff, q_cb_res_up_market_coeff.currency
from q_cb_res_up_market_coeff
group by q_cb_res_up_market_coeff.pc, q_cb_res_up_market_coeff.l_1, q_cb_res_up_market_coeff.l_2, q_cb_res_up_market_coeff.l_3, q_cb_res_up_market_coeff.l_4, q_cb_res_up_market_coeff.l_5, q_cb_res_up_market_coeff.l_6, q_cb_res_up_market_coeff.rep_month, q_cb_res_up_market_coeff.g_month, q_cb_res_up_market_coeff.currency;

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_market_coeff_diff
select q_cb_work_up_with_market_coeff_mod.rep_month, q_cb_work_up_with_market_coeff_mod.pc, q_cb_work_up_with_market_coeff_mod.l_1, q_cb_work_up_with_market_coeff_mod.l_2, q_cb_work_up_with_market_coeff_mod.l_3, q_cb_work_up_with_market_coeff_mod.l_4, q_cb_work_up_with_market_coeff_mod.l_5, q_cb_work_up_with_market_coeff_mod.l_6, q_cb_work_up_with_market_coeff_mod.currency, q_cb_work_up_with_market_coeff_mod.g_month, q_cb_work_up_with_market_coeff.up_with_coeff as up_orj, q_cb_work_up_with_market_coeff.up_with_coeff as up_mod, ([up_orj])-([up_mod]) as diff
from q_cb_work_up_with_market_coeff_mod left join q_cb_work_up_with_market_coeff on (q_cb_work_up_with_market_coeff_mod.g_month = q_cb_work_up_with_market_coeff.g_month) and (q_cb_work_up_with_market_coeff_mod.currency = q_cb_work_up_with_market_coeff.currency) and (q_cb_work_up_with_market_coeff_mod.l_6 = q_cb_work_up_with_market_coeff.l_6) and (q_cb_work_up_with_market_coeff_mod.l_5 = q_cb_work_up_with_market_coeff.l_5) and (q_cb_work_up_with_market_coeff_mod.l_4 = q_cb_work_up_with_market_coeff.l_4) and (q_cb_work_up_with_market_coeff_mod.l_3 = q_cb_work_up_with_market_coeff.l_3) and (q_cb_work_up_with_market_coeff_mod.l_2 = q_cb_work_up_with_market_coeff.l_2) and (q_cb_work_up_with_market_coeff_mod.l_1 = q_cb_work_up_with_market_coeff.l_1) and (q_cb_work_up_with_market_coeff_mod.pc = q_cb_work_up_with_market_coeff.pc) and (q_cb_work_up_with_market_coeff_mod.rep_month = q_cb_work_up_with_market_coeff.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_market_coeff_mod
select q_cb_res_up_market_coeff_mod.pc, q_cb_res_up_market_coeff_mod.l_1, q_cb_res_up_market_coeff_mod.l_2, q_cb_res_up_market_coeff_mod.l_3, q_cb_res_up_market_coeff_mod.l_4, q_cb_res_up_market_coeff_mod.l_5, q_cb_res_up_market_coeff_mod.l_6, q_cb_res_up_market_coeff_mod.rep_month, q_cb_res_up_market_coeff_mod.g_month, sum([an_rs_quantity]*[up_cost]*[up_cost_coeff]) as up_with_coeff, q_cb_res_up_market_coeff_mod.currency
from q_cb_res_up_market_coeff_mod
group by q_cb_res_up_market_coeff_mod.pc, q_cb_res_up_market_coeff_mod.l_1, q_cb_res_up_market_coeff_mod.l_2, q_cb_res_up_market_coeff_mod.l_3, q_cb_res_up_market_coeff_mod.l_4, q_cb_res_up_market_coeff_mod.l_5, q_cb_res_up_market_coeff_mod.l_6, q_cb_res_up_market_coeff_mod.rep_month, q_cb_res_up_market_coeff_mod.g_month, q_cb_res_up_market_coeff_mod.currency;

----------------------------------------------------------------------------------------------------
q_cb_work_up_without_coeff
select sum(([an_rs_quantity]*[up_cost])) as unit_price_planned, q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes.rs_currency
from q_cb_up_pre_coeff_activem_indexes
group by q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes.rs_currency;

----------------------------------------------------------------------------------------------------
q_cb_work_up_without_coeff_diff
select q_cb_work_up_without_coeff_mod.rep_month, q_cb_work_up_without_coeff_mod.pc, q_cb_work_up_without_coeff_mod.l_1, q_cb_work_up_without_coeff_mod.l_2, q_cb_work_up_without_coeff_mod.l_3, q_cb_work_up_without_coeff_mod.l_4, q_cb_work_up_without_coeff_mod.l_5, q_cb_work_up_without_coeff_mod.l_6, q_cb_work_up_without_coeff_mod.rs_currency, q_cb_work_up_without_coeff_mod.exp_cb_mon, q_cb_work_up_without_coeff.unit_price_planned as up_orj, q_cb_work_up_without_coeff.unit_price_planned as up_mod, ([up_orj])-([up_mod]) as diff
from q_cb_work_up_without_coeff_mod left join q_cb_work_up_without_coeff on (q_cb_work_up_without_coeff_mod.exp_cb_mon = q_cb_work_up_without_coeff.exp_cb_mon) and (q_cb_work_up_without_coeff_mod.rs_currency = q_cb_work_up_without_coeff.rs_currency) and (q_cb_work_up_without_coeff_mod.l_6 = q_cb_work_up_without_coeff.l_6) and (q_cb_work_up_without_coeff_mod.l_5 = q_cb_work_up_without_coeff.l_5) and (q_cb_work_up_without_coeff_mod.l_4 = q_cb_work_up_without_coeff.l_4) and (q_cb_work_up_without_coeff_mod.l_3 = q_cb_work_up_without_coeff.l_3) and (q_cb_work_up_without_coeff_mod.l_2 = q_cb_work_up_without_coeff.l_2) and (q_cb_work_up_without_coeff_mod.l_1 = q_cb_work_up_without_coeff.l_1) and (q_cb_work_up_without_coeff_mod.pc = q_cb_work_up_without_coeff.pc) and (q_cb_work_up_without_coeff_mod.rep_month = q_cb_work_up_without_coeff.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_work_up_without_coeff_mod
select sum(([an_rs_quantity]*[up_cost])) as unit_price_planned, q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes_mod.rs_currency
from q_cb_up_pre_coeff_activem_indexes_mod
group by q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes_mod.rs_currency;

----------------------------------------------------------------------------------------------------
q_date_selected
select top 1 *
from (select top 18 * from [t_rnd_budget_active_dates] order by t_rnd_budget_active_dates.date_active desc )  as t
order by t_rnd_budget_active_dates.date_active;

----------------------------------------------------------------------------------------------------
q_exp_diff_curr
select q_cb_exp.rep_month, q_cb_exp.p01_code, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.up_curr, sum([q_cb_exp].[total_expense]-[q_bb_exp].[total_expense]) as diff
from q_cb_exp left join q_bb_exp on (q_cb_exp.up_curr = q_bb_exp.up_curr) and (q_cb_exp.month = q_bb_exp.exp_base_mon) and (q_cb_exp.l_6 = q_bb_exp.l_6) and (q_cb_exp.l_5 = q_bb_exp.l_5) and (q_cb_exp.l_4 = q_bb_exp.l_4) and (q_cb_exp.l_3 = q_bb_exp.l_3) and (q_cb_exp.l_2 = q_bb_exp.l_2) and (q_cb_exp.l_1 = q_bb_exp.l_1) and (q_cb_exp.p01_code = q_bb_exp.pc) and (q_cb_exp.rep_month = q_bb_exp.rep_month)
where (((q_cb_exp.month)<=dlookup("[last_month]","[q_rep_month_max]")))
group by q_cb_exp.rep_month, q_cb_exp.p01_code, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.up_curr;

----------------------------------------------------------------------------------------------------
q_exp_diff_full
select q_cb_exp.rep_month, q_cb_exp.p01_code, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.up_curr, sum([q_cb_exp].[total_expense]-[q_bb_exp].[total_expense]) as diff
from q_cb_exp left join q_bb_exp on (q_cb_exp.up_curr = q_bb_exp.up_curr) and (q_cb_exp.month = q_bb_exp.exp_base_mon) and (q_cb_exp.l_6 = q_bb_exp.l_6) and (q_cb_exp.l_5 = q_bb_exp.l_5) and (q_cb_exp.l_4 = q_bb_exp.l_4) and (q_cb_exp.l_3 = q_bb_exp.l_3) and (q_cb_exp.l_2 = q_bb_exp.l_2) and (q_cb_exp.l_1 = q_bb_exp.l_1) and (q_cb_exp.p01_code = q_bb_exp.pc) and (q_cb_exp.rep_month = q_bb_exp.rep_month)
group by q_cb_exp.rep_month, q_cb_exp.p01_code, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.up_curr;

----------------------------------------------------------------------------------------------------
q_first_budget_gt
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency as up_curr, sum(t_cb_profit_usd_st.income) as incomegt, sum(t_cb_profit_usd_st.expense) as expensegt, sum(t_cb_profit_usd_st.profit) as profitgt
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency
having t_cb_profit_usd_st.rep_month="2206";

----------------------------------------------------------------------------------------------------
q_first_budget_rt
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency as up_curr, sum(t_cb_profit_usd_st.income) as incomert, sum(t_cb_profit_usd_st.expense) as expensert, sum(t_cb_profit_usd_st.profit) as profitrt
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency, t_cb_profit_usd_st.month
having t_cb_profit_usd_st.rep_month="2206"and t_cb_profit_usd_st.month<=[forms]![comparison_screen]![cmb_allproject_curr_month];

----------------------------------------------------------------------------------------------------
q_first_budget_rt_grouped
select q_first_budget_rt.rep_month, q_first_budget_rt.l_1, q_first_budget_rt.l_2, q_first_budget_rt.l_3, q_first_budget_rt.l_4, q_first_budget_rt.l_5, q_first_budget_rt.l_6, q_first_budget_rt.desc_tr_l3, q_first_budget_rt.desc_tr_l2, q_first_budget_rt.desc_tr_l6, q_first_budget_rt.up_curr, sum(q_first_budget_rt.incomert) as incomert, sum(q_first_budget_rt.expensert) as expensert, sum(q_first_budget_rt.profitrt) as profitrt
from q_first_budget_rt
group by q_first_budget_rt.rep_month, q_first_budget_rt.l_1, q_first_budget_rt.l_2, q_first_budget_rt.l_3, q_first_budget_rt.l_4, q_first_budget_rt.l_5, q_first_budget_rt.l_6, q_first_budget_rt.desc_tr_l3, q_first_budget_rt.desc_tr_l2, q_first_budget_rt.desc_tr_l6, q_first_budget_rt.up_curr;

----------------------------------------------------------------------------------------------------
q_first_budget_rt_grouped_projects
select q_first_budget_rt.rep_month, q_first_budget_rt.pc, q_first_budget_rt.l_1, q_first_budget_rt.l_2, q_first_budget_rt.l_3, q_first_budget_rt.l_4, q_first_budget_rt.l_5, q_first_budget_rt.l_6, q_first_budget_rt.desc_tr_l3, q_first_budget_rt.desc_tr_l2, q_first_budget_rt.desc_tr_l6, q_first_budget_rt.up_curr, sum(q_first_budget_rt.incomert) as incomert, sum(q_first_budget_rt.expensert) as expensert, sum(q_first_budget_rt.profitrt) as profitrt
from q_first_budget_rt
group by q_first_budget_rt.rep_month, q_first_budget_rt.pc, q_first_budget_rt.l_1, q_first_budget_rt.l_2, q_first_budget_rt.l_3, q_first_budget_rt.l_4, q_first_budget_rt.l_5, q_first_budget_rt.l_6, q_first_budget_rt.desc_tr_l3, q_first_budget_rt.desc_tr_l2, q_first_budget_rt.desc_tr_l6, q_first_budget_rt.up_curr;

----------------------------------------------------------------------------------------------------
q_l6_code_selection
select top 1 *
from (select top 2597 * from [c6_code] order by [code_l6] )  as t
order by [code_l6] desc;

----------------------------------------------------------------------------------------------------
q_l6_selected
select top 1 *
from (select top 5 * from [t_rnd_budget_l6] order by t_rnd_budget_l6.l_1 desc,t_rnd_budget_l6.l_2 desc,t_rnd_budget_l6.l_3 desc,t_rnd_budget_l6.l_4 desc,t_rnd_budget_l6.l_5 desc,t_rnd_budget_l6.l_6 desc)  as t
order by t_rnd_budget_l6.l_1, t_rnd_budget_l6.l_2, t_rnd_budget_l6.l_3, t_rnd_budget_l6.l_4, t_rnd_budget_l6.l_5, t_rnd_budget_l6.l_6;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates
select
		*

	from 
		q_monthly_rates_eur_try

	

union select
		*

	from 
		q_monthly_rates_usd_try;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_ap
insert into t_monthly_curr_rates_mod ( [month], constant, rate, budget_curr, rep_month )
select q_monthly_curr_rates.month, q_monthly_curr_rates.constant, q_monthly_curr_rates.rate, q_monthly_curr_rates.budget_curr, q_monthly_curr_rates.rep_month
from q_monthly_curr_rates
where (((q_monthly_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_diff
select q_monthly_curr_rates_mod_crosstab.month, ([q_monthly_curr_rates_mod_crosstab].r_eur_try-mon_curr_rates.r_eur_try) as eur_try, ([q_monthly_curr_rates_mod_crosstab].r_try_eur-mon_curr_rates.r_try_eur) as try_eur, ([q_monthly_curr_rates_mod_crosstab].r_usd_try-mon_curr_rates.r_usd_try) as usd_try, ([q_monthly_curr_rates_mod_crosstab].r_try_usd-mon_curr_rates.r_try_usd) as try_usd, ([q_monthly_curr_rates_mod_crosstab].r_eur_usd-mon_curr_rates.r_eur_usd) as eur_usd, ([q_monthly_curr_rates_mod_crosstab].r_usd_eur-mon_curr_rates.r_usd_eur) as usd_eur, mon_curr_rates.rep_month
from q_monthly_curr_rates_mod_crosstab inner join mon_curr_rates on q_monthly_curr_rates_mod_crosstab.month = mon_curr_rates.month
where (((mon_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_crosstab
transform sum(q_monthly_curr_rates_mod_union.rate) as sumofrate
select q_monthly_curr_rates_mod_union.month
from q_monthly_curr_rates_mod_union
group by q_monthly_curr_rates_mod_union.month
pivot q_monthly_curr_rates_mod_union.constant;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_delete
delete t_monthly_curr_rates_mod.constant, t_monthly_curr_rates_mod.budget_curr, t_monthly_curr_rates_mod.month, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_mod.rep_month, t_monthly_curr_rates_mod.rep_month
from t_monthly_curr_rates_mod;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_eur_eur
select "eur" as budget_curr, q_monthly_curr_rates_mod_try_eur.month, 1 as rate, "r_eur_eur" as constant, q_monthly_curr_rates_mod_try_usd.rep_month
from q_monthly_curr_rates_mod_try_eur left join q_monthly_curr_rates_mod_try_usd on q_monthly_curr_rates_mod_try_eur.month = q_monthly_curr_rates_mod_try_usd.month
where (((q_monthly_curr_rates_mod_try_usd.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_eur_try
select t_monthly_curr_rates_mod.budget_curr, t_monthly_curr_rates_mod.month, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_mod.constant, t_monthly_curr_rates_mod.rep_month
from t_monthly_curr_rates_mod
where (((t_monthly_curr_rates_mod.constant)="r_eur_try") and ((t_monthly_curr_rates_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_eur_try_graph
select t_monthly_curr_rates_st.constant, t_monthly_curr_rates_st.rate, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_st.budget_curr, t_monthly_curr_rates_st.month
from t_monthly_curr_rates_st inner join t_monthly_curr_rates_mod on (t_monthly_curr_rates_st.rep_month = t_monthly_curr_rates_mod.rep_month) and (t_monthly_curr_rates_st.month = t_monthly_curr_rates_mod.month) and (t_monthly_curr_rates_st.constant = t_monthly_curr_rates_mod.constant)
where (((t_monthly_curr_rates_st.constant)="r_eur_try") and ((t_monthly_curr_rates_st.month)>=#1/1/2022#));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_eur_usd
select "usd" as budget_curr, q_monthly_curr_rates_mod_eur_try.month, round([q_monthly_curr_rates_mod_eur_try].[rate]/[q_monthly_curr_rates_mod_usd_try].[rate],6) as rate, "r_eur_usd" as constant, q_monthly_curr_rates_mod_usd_try.rep_month
from q_monthly_curr_rates_mod_eur_try inner join q_monthly_curr_rates_mod_usd_try on q_monthly_curr_rates_mod_eur_try.month = q_monthly_curr_rates_mod_usd_try.month
where (((q_monthly_curr_rates_mod_usd_try.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_try_eur
select "eur" as budget_curr, q_monthly_curr_rates_mod_eur_try.month, round(1/[q_monthly_curr_rates_mod_eur_try].[rate],6) as rate, "r_try_eur" as constant, q_monthly_curr_rates_mod_eur_try.rep_month
from q_monthly_curr_rates_mod_eur_try
where (((q_monthly_curr_rates_mod_eur_try.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_try_try
select "try" as budget_curr, q_monthly_curr_rates_mod_try_eur.month, 1 as rate, "r_try_try" as constant, q_monthly_curr_rates_mod_try_usd.rep_month
from q_monthly_curr_rates_mod_try_eur left join q_monthly_curr_rates_mod_try_usd on q_monthly_curr_rates_mod_try_eur.month = q_monthly_curr_rates_mod_try_usd.month
where (((q_monthly_curr_rates_mod_try_usd.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_try_usd
select "usd" as budget_curr, q_monthly_curr_rates_mod_usd_try.month, round(1/[q_monthly_curr_rates_mod_usd_try].[rate],6) as rate, "r_try_usd" as constant, q_monthly_curr_rates_mod_usd_try.rep_month
from q_monthly_curr_rates_mod_usd_try
where (((q_monthly_curr_rates_mod_usd_try.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_union
select 
		*
	from 
q_monthly_curr_rates_mod_eur_eur
		
union 
select 
		*
	from 
		q_monthly_curr_rates_mod_eur_try

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_eur_usd


union 
select 
		*
	from 
		q_monthly_curr_rates_mod_try_eur

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_try_try

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_try_usd

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_usd_eur

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_usd_try

union select 
		*
	from 
		q_monthly_curr_rates_mod_usd_usd;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_usd_eur
select "eur" as budget_curr, q_monthly_curr_rates_mod_usd_try.month, round([q_monthly_curr_rates_mod_usd_try].[rate]/[q_monthly_curr_rates_mod_eur_try].[rate],6) as rate, "r_usd_eur" as constant, q_monthly_curr_rates_mod_eur_try.rep_month
from q_monthly_curr_rates_mod_usd_try left join q_monthly_curr_rates_mod_eur_try on q_monthly_curr_rates_mod_usd_try.month = q_monthly_curr_rates_mod_eur_try.month
where (((q_monthly_curr_rates_mod_eur_try.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_usd_try
select t_monthly_curr_rates_mod.budget_curr, t_monthly_curr_rates_mod.month, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_mod.constant, t_monthly_curr_rates_mod.rep_month
from t_monthly_curr_rates_mod
where (((t_monthly_curr_rates_mod.constant)="r_usd_try") and ((t_monthly_curr_rates_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_usd_try_graph
select t_monthly_curr_rates_st.constant, t_monthly_curr_rates_st.rate, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_st.budget_curr, t_monthly_curr_rates_st.month
from t_monthly_curr_rates_st inner join t_monthly_curr_rates_mod on (t_monthly_curr_rates_st.rep_month = t_monthly_curr_rates_mod.rep_month) and (t_monthly_curr_rates_st.month = t_monthly_curr_rates_mod.month) and (t_monthly_curr_rates_st.constant = t_monthly_curr_rates_mod.constant)
where (((t_monthly_curr_rates_st.constant)="r_usd_try") and ((t_monthly_curr_rates_st.month)>=#1/1/2022#));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_usd_usd
select "usd" as budget_curr, q_monthly_curr_rates_mod_try_eur.month, 1 as rate, "r_usd_usd" as constant, q_monthly_curr_rates_mod_try_usd.rep_month
from q_monthly_curr_rates_mod_try_eur left join q_monthly_curr_rates_mod_try_usd on q_monthly_curr_rates_mod_try_eur.month = q_monthly_curr_rates_mod_try_usd.month
where (((q_monthly_curr_rates_mod_try_usd.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mt
select q_monthly_curr_rates.constant, q_monthly_curr_rates.budget_curr, q_monthly_curr_rates.month, q_monthly_curr_rates.rate, q_monthly_curr_rates.rep_month into t_monthly_curr_rates_st
from q_monthly_curr_rates
where (((q_monthly_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_rates_eur_try
select mon_curr_rates.month, "r_eur_try" as constant, mon_curr_rates.r_eur_try as rate, "try" as budget_curr, mon_curr_rates.rep_month
from mon_curr_rates
where (((mon_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_rates_upd_mod
update t_monthly_curr_rates_st left join t_monthly_curr_rates_mod on (t_monthly_curr_rates_st.budget_curr = t_monthly_curr_rates_mod.budget_curr) and (t_monthly_curr_rates_st.constant = t_monthly_curr_rates_mod.constant) and (t_monthly_curr_rates_st.month = t_monthly_curr_rates_mod.month) and (t_monthly_curr_rates_st.rep_month = t_monthly_curr_rates_mod.rep_month) set t_monthly_curr_rates_mod.constant = [t_monthly_curr_rates_st].[constant], t_monthly_curr_rates_mod.budget_curr = [t_monthly_curr_rates_st].[budget_curr], t_monthly_curr_rates_mod.[month] = [t_monthly_curr_rates_st].[month], t_monthly_curr_rates_mod.rate = [t_monthly_curr_rates_st].[rate], t_monthly_curr_rates_mod.rep_month = [t_monthly_curr_rates_st].[rep_month]
where (((t_monthly_curr_rates_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_rates_usd_try
select mon_curr_rates.month, "r_usd_try" as constant, mon_curr_rates.r_usd_try as rate, "try" as budget_curr, mon_curr_rates.rep_month
from mon_curr_rates
where (((mon_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_pl_analysis_comp
select t_bb_analysis_add.p01_code, t_bb_analysis_add.rs_l1, t_bb_analysis_add.rs_l2, t_bb_analysis_add.rs_l3, t_bb_analysis_add.rs_l4, t_bb_analysis_add.analysis_date, t_bb_analysis.p01_code
from t_bb_analysis_add left join t_bb_analysis on (t_bb_analysis_add.analysis_date = t_bb_analysis.analysis_date) and (t_bb_analysis_add.rs_l4 = t_bb_analysis.rs_l4) and (t_bb_analysis_add.rs_l3 = t_bb_analysis.rs_l3) and (t_bb_analysis_add.rs_l2 = t_bb_analysis.rs_l2) and (t_bb_analysis_add.rs_l1 = t_bb_analysis.rs_l1) and (t_bb_analysis_add.p01_code = t_bb_analysis.p01_code)
where (((t_bb_analysis.p01_code) is null));

----------------------------------------------------------------------------------------------------
q_pl_coeff_export
select t_pl_analysis.p01_code, t_pl_analysis.rs_l1, t_pl_analysis.rs_l2, t_pl_analysis.rs_l3, t_pl_analysis.rs_l4, r4_code.r_4_desc_tr, r4_code.w_ufe, r4_code.w_tufe, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.w_metal, r4_code.w_petrol, r4_code.w_cement, r4_code.w_electricity
from r4_code left join t_pl_analysis on (r4_code.r_1_code = t_pl_analysis.rs_l1) and (r4_code.r_2_code = t_pl_analysis.rs_l2) and (r4_code.r_3_code = t_pl_analysis.rs_l3) and (r4_code.r_4_code = t_pl_analysis.rs_l4)
group by t_pl_analysis.p01_code, t_pl_analysis.rs_l1, t_pl_analysis.rs_l2, t_pl_analysis.rs_l3, t_pl_analysis.rs_l4, r4_code.r_4_desc_tr, r4_code.w_ufe, r4_code.w_tufe, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.w_metal, r4_code.w_petrol, r4_code.w_cement, r4_code.w_electricity
having (((t_pl_analysis.p01_code) is not null));

----------------------------------------------------------------------------------------------------
q_pl_exp
select q_cb_unit_price.rep_month, q_cb_unit_price.p01_code, q_cb_unit_price.l_1, q_cb_unit_price.l_2, q_cb_unit_price.l_3, q_cb_unit_price.l_4, q_cb_unit_price.l_5, q_cb_unit_price.l_6, q_cb_unit_price.month, sum(([exp_cb_qty]*[unit_price_planned_coeff])) as total_expense, q_cb_unit_price.up_curr, t_cb_qty.key_r_pc_l6
from q_cb_unit_price left join t_cb_qty on (q_cb_unit_price.key_r_pc_l6 = t_cb_qty.key_r_pc_l6) and (q_cb_unit_price.month = t_cb_qty.exp_cb_mon)
group by q_cb_unit_price.rep_month, q_cb_unit_price.p01_code, q_cb_unit_price.l_1, q_cb_unit_price.l_2, q_cb_unit_price.l_3, q_cb_unit_price.l_4, q_cb_unit_price.l_5, q_cb_unit_price.l_6, q_cb_unit_price.month, q_cb_unit_price.up_curr, t_cb_qty.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_pl_exp_mod
select q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.p01_code, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.month, sum(([exp_cb_qty]*[unit_price_planned_coeff])) as total_expense, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.key_r_pc_l6
from q_cb_unit_price_mod left join t_cb_qty on (q_cb_unit_price_mod.g_month = t_cb_qty.exp_cb_mon) and (q_cb_unit_price_mod.key_r_pc_l6 = t_cb_qty.key_r_pc_l6)
group by q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.p01_code, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.month, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_pl_indexes
select t_cb_indexes.rep_month, t_cb_indexes.g_month, t_cb_indexes.bb_metal, t_cb_indexes.bb_electricity, t_cb_indexes.bb_cement, t_cb_indexes.bb_petrol, t_cb_indexes.bb_inf_usd, t_cb_indexes.bb_inf_eur, t_cb_indexes.bb_ufe, t_cb_indexes.bb_tufe
from t_cb_indexes
where (((t_cb_indexes.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_r4_code_pool
select r4_code.r_1_code, r4_code.r_2_code, r4_code.r_3_code, r4_code.r_4_code, r4_code.currency
from r4_code
order by r4_code.r_1_code desc , r4_code.r_2_code desc , r4_code.r_3_code desc , r4_code.r_4_code desc;

----------------------------------------------------------------------------------------------------
q_r4_code_selection
select top 1 *
from (select top 297 * from [q_r4_code_pool] order by r4_code.r_1_code ,r4_code.r_2_code ,r4_code.r_3_code ,r4_code.r_4_code )  as t
order by r4_code.r_1_code desc , r4_code.r_2_code desc , r4_code.r_3_code desc , r4_code.r_4_code desc;

----------------------------------------------------------------------------------------------------
q_r4_filtered
select t_rnd_budget_r4.r_1, t_rnd_budget_r4.r_2, t_rnd_budget_r4.r_3, t_rnd_budget_r4.r_4
from t_rnd_budget_r4
group by t_rnd_budget_r4.r_1, t_rnd_budget_r4.r_2, t_rnd_budget_r4.r_3, t_rnd_budget_r4.r_4
order by t_rnd_budget_r4.r_1, t_rnd_budget_r4.r_2, t_rnd_budget_r4.r_3, t_rnd_budget_r4.r_4;

----------------------------------------------------------------------------------------------------
q_r4_selected_for_up
select top 1 *
from (select top 5 * from [q_r4_filtered] order by q_r4_filtered.r_1 desc,q_r4_filtered.r_2 desc,q_r4_filtered.r_3 desc,q_r4_filtered.r_4 desc)  as t
order by q_r4_filtered.r_1, q_r4_filtered.r_2, q_r4_filtered.r_3, q_r4_filtered.r_4;

----------------------------------------------------------------------------------------------------
q_rep_month_max
select max(t_rep_month.rep_month_date) as last_month
from t_rep_month;

----------------------------------------------------------------------------------------------------
q_rep_month_max_val
select max(t_rep_month.rep_month) as rep_month
from t_rep_month;

----------------------------------------------------------------------------------------------------
q_rep_month_order
select t_rep_month.rep_month, t_rep_month.rep_month_date, dcount("[rep_month]","[t_rep_month]","int([rep_month])<=" & int([rep_month])) as rownum
from t_rep_month
order by t_rep_month.rep_month desc , t_rep_month.rep_month_date desc;

----------------------------------------------------------------------------------------------------
q_second_budget_gt
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency as up_curr, sum(t_cb_profit_usd_st.income) as incomegt, sum(t_cb_profit_usd_st.expense) as expensegt, sum(t_cb_profit_usd_st.profit) as profitgt
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency
having t_cb_profit_usd_st.rep_month="2207";

----------------------------------------------------------------------------------------------------
q_second_budget_rt
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency as up_curr, sum(t_cb_profit_usd_st.income) as incomert, sum(t_cb_profit_usd_st.expense) as expensert, sum(t_cb_profit_usd_st.profit) as profitrt
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency, t_cb_profit_usd_st.month
having t_cb_profit_usd_st.rep_month="2207"and t_cb_profit_usd_st.month<=[forms]![comparison_screen]![cmb_allproject_curr_month];

----------------------------------------------------------------------------------------------------
q_second_budget_rt_grouped
select q_second_budget_rt.rep_month, q_second_budget_rt.l_1, q_second_budget_rt.l_2, q_second_budget_rt.l_3, q_second_budget_rt.l_4, q_second_budget_rt.l_5, q_second_budget_rt.l_6, q_second_budget_rt.desc_tr_l3, q_second_budget_rt.desc_tr_l2, q_second_budget_rt.desc_tr_l6, q_second_budget_rt.up_curr, sum(q_second_budget_rt.incomert) as incomert, sum(q_second_budget_rt.expensert) as expensert, sum(q_second_budget_rt.profitrt) as profitrt
from q_second_budget_rt
group by q_second_budget_rt.rep_month, q_second_budget_rt.l_1, q_second_budget_rt.l_2, q_second_budget_rt.l_3, q_second_budget_rt.l_4, q_second_budget_rt.l_5, q_second_budget_rt.l_6, q_second_budget_rt.desc_tr_l3, q_second_budget_rt.desc_tr_l2, q_second_budget_rt.desc_tr_l6, q_second_budget_rt.up_curr;

----------------------------------------------------------------------------------------------------
q_second_budget_rt_grouped_projects
select q_second_budget_rt.rep_month, q_second_budget_rt.pc, q_second_budget_rt.l_1, q_second_budget_rt.l_2, q_second_budget_rt.l_3, q_second_budget_rt.l_4, q_second_budget_rt.l_5, q_second_budget_rt.l_6, q_second_budget_rt.desc_tr_l3, q_second_budget_rt.desc_tr_l2, q_second_budget_rt.desc_tr_l6, q_second_budget_rt.up_curr, sum(q_second_budget_rt.incomert) as incomert, sum(q_second_budget_rt.expensert) as expensert, sum(q_second_budget_rt.profitrt) as profitrt
from q_second_budget_rt
group by q_second_budget_rt.rep_month, q_second_budget_rt.pc, q_second_budget_rt.l_1, q_second_budget_rt.l_2, q_second_budget_rt.l_3, q_second_budget_rt.l_4, q_second_budget_rt.l_5, q_second_budget_rt.l_6, q_second_budget_rt.desc_tr_l3, q_second_budget_rt.desc_tr_l2, q_second_budget_rt.desc_tr_l6, q_second_budget_rt.up_curr;

----------------------------------------------------------------------------------------------------
~sq_c01_login~sq_ccbx_project
select [01_p01_projects_full].p01_s_name
from 01_p01_projects_full;

----------------------------------------------------------------------------------------------------
~sq_c11_main_menu_old~sq_ccbx_pr2
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_c11_main_menu_old~sq_ccbx_pr3
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_c11_main_menu_old~sq_ccbx_pr4
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_c11_main_menu_old~sq_ccbx_project
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_c99_menu assets~sq_ccbx_project
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_010
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_07] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_06] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_03
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_04
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_05
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_06
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_07
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_06] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_08
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_07] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_06] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_09
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_07] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_06] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_010
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_03
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_04
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_05
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_06
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_07
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_08
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_09
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_010
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_03
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_04
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_05
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_06
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_07
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_08
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_09
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccbo_date_by_project
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccbo_project
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccombo578
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccombo587
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccombo590
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccombo596
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_date_by_project
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_date_compare_cons
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_date_consolidated
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_date_project_based_all
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_project
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccombo554
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccombo555
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement~sq_ccbo_date_consolidated
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement~sq_ccbo_date_project_based_all
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement~sq_ccbo_project
select q_budget_project_months.name as r03_s_name, q_budget_project_months.pc as p_code
from q_budget_project_months
group by q_budget_project_months.name, q_budget_project_months.pc;

----------------------------------------------------------------------------------------------------
~sq_cscenario_screen~sq_ccbo_project
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_ctech_office~sq_ccmb_project_name
select t_001_projects.r03_s_name
from q_budget_project_months left join t_001_projects on q_budget_project_months.pc = t_001_projects.p_code;

----------------------------------------------------------------------------------------------------
~sq_dreport1~sq_dc_bb_metal
select distinctrow *
from t_ac_indexes_mod;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_allprojects_compare_detailed
select q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l2, q_cb_sum_projects_report_data.desc_tr_l6, q_cb_sum_projects_report_data.second_data_gt, q_cb_sum_projects_report_data.second_data_rt, q_cb_sum_projects_report_data.first_data_gt, q_cb_sum_projects_report_data.first_data_rt, q_cb_sum_projects_report_data.second_data_rem, q_cb_sum_projects_report_data.first_data_rem, q_cb_sum_projects_report_data.gt_rem, q_cb_sum_projects_report_data.rt_rem, q_cb_sum_projects_report_data.rem_rem, q_cb_sum_projects_report_data.budget_type, t_001_projects.r03_s_name, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as l6_comb
from q_cb_sum_projects_report_data left join t_001_projects on q_cb_sum_projects_report_data.pc = t_001_projects.p_code
group by q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l2, q_cb_sum_projects_report_data.desc_tr_l6, q_cb_sum_projects_report_data.second_data_gt, q_cb_sum_projects_report_data.second_data_rt, q_cb_sum_projects_report_data.first_data_gt, q_cb_sum_projects_report_data.first_data_rt, q_cb_sum_projects_report_data.second_data_rem, q_cb_sum_projects_report_data.first_data_rem, q_cb_sum_projects_report_data.gt_rem, q_cb_sum_projects_report_data.rt_rem, q_cb_sum_projects_report_data.rem_rem, q_cb_sum_projects_report_data.budget_type, t_001_projects.r03_s_name, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6];

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_allprojects_compare_lvl_5
select q_cb_sum_projects_report_data_lvl_5.pc, q_cb_sum_projects_report_data_lvl_5.l_1, q_cb_sum_projects_report_data_lvl_5.l_2, q_cb_sum_projects_report_data_lvl_5.l_3, q_cb_sum_projects_report_data_lvl_5.l_4, q_cb_sum_projects_report_data_lvl_5.l_5, q_cb_sum_projects_report_data_lvl_5.l_6, q_cb_sum_projects_report_data_lvl_5.up_curr, q_cb_sum_projects_report_data_lvl_5.desc_tr_l3, q_cb_sum_projects_report_data_lvl_5.desc_tr_l6, q_cb_sum_projects_report_data_lvl_5.second_data_gt, q_cb_sum_projects_report_data_lvl_5.second_data_rt, q_cb_sum_projects_report_data_lvl_5.first_data_gt, q_cb_sum_projects_report_data_lvl_5.first_data_rt, q_cb_sum_projects_report_data_lvl_5.second_data_rem, q_cb_sum_projects_report_data_lvl_5.first_data_rem, q_cb_sum_projects_report_data_lvl_5.gt_rem, [first_data_rt]-[second_data_rt] as rt_rem, [first_data_rem]-[second_data_rem] as rem_rem, q_cb_sum_projects_report_data_lvl_5.budget_type, t_001_projects.r03_s_name, q_cb_sum_projects_report_data_lvl_5.desc_tr_l4, q_cb_sum_projects_report_data_lvl_5.desc_tr_l5
from q_cb_sum_projects_report_data_lvl_5 left join t_001_projects on q_cb_sum_projects_report_data_lvl_5.pc = t_001_projects.p_code
group by q_cb_sum_projects_report_data_lvl_5.pc, q_cb_sum_projects_report_data_lvl_5.l_1, q_cb_sum_projects_report_data_lvl_5.l_2, q_cb_sum_projects_report_data_lvl_5.l_3, q_cb_sum_projects_report_data_lvl_5.l_4, q_cb_sum_projects_report_data_lvl_5.l_5, q_cb_sum_projects_report_data_lvl_5.l_6, q_cb_sum_projects_report_data_lvl_5.up_curr, q_cb_sum_projects_report_data_lvl_5.desc_tr_l3, q_cb_sum_projects_report_data_lvl_5.desc_tr_l6, q_cb_sum_projects_report_data_lvl_5.second_data_gt, q_cb_sum_projects_report_data_lvl_5.second_data_rt, q_cb_sum_projects_report_data_lvl_5.first_data_gt, q_cb_sum_projects_report_data_lvl_5.first_data_rt, q_cb_sum_projects_report_data_lvl_5.second_data_rem, q_cb_sum_projects_report_data_lvl_5.first_data_rem, q_cb_sum_projects_report_data_lvl_5.gt_rem, [first_data_rt]-[second_data_rt], [first_data_rem]-[second_data_rem], q_cb_sum_projects_report_data_lvl_5.budget_type, t_001_projects.r03_s_name, q_cb_sum_projects_report_data_lvl_5.desc_tr_l4, q_cb_sum_projects_report_data_lvl_5.desc_tr_l5;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons
select q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.currency as up_curr, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem
from q_cb_cons_report_data
group by q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.currency, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_compare_detailed
select [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as l6_comb, q_cb_sum_cons_report_data.desc_tr_l6, q_cb_sum_cons_report_data.up_curr, sum(q_cb_sum_cons_report_data.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data.budget_type, sum(q_cb_sum_cons_report_data.gt_rem) as gt_rem, sum(q_cb_sum_cons_report_data.rt_rem) as rt_rem, sum(q_cb_sum_cons_report_data.rem_rem) as rem_rem, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] as l5_comb
from q_cb_sum_cons_report_data
group by [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], q_cb_sum_cons_report_data.desc_tr_l6, q_cb_sum_cons_report_data.up_curr, q_cb_sum_cons_report_data.budget_type, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5]
order by sum(q_cb_sum_cons_report_data.gt_rem) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_compare_lvl_4
select q_cb_sum_cons_report_data_lvl_4.l_1, q_cb_sum_cons_report_data_lvl_4.l_2, q_cb_sum_cons_report_data_lvl_4.l_3, q_cb_sum_cons_report_data_lvl_4.l_4, q_cb_sum_cons_report_data_lvl_4.up_curr, q_cb_sum_cons_report_data_lvl_4.desc_tr_l3, sum(q_cb_sum_cons_report_data_lvl_4.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data_lvl_4.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data_lvl_4.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data_lvl_4.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data_lvl_4.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data_lvl_4.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data_lvl_4.budget_type, sum(q_cb_sum_cons_report_data_lvl_4.gt_rem) as gt_rem, q_cb_sum_cons_report_data_lvl_4.desc_tr_l4
from q_cb_sum_cons_report_data_lvl_4
group by q_cb_sum_cons_report_data_lvl_4.l_1, q_cb_sum_cons_report_data_lvl_4.l_2, q_cb_sum_cons_report_data_lvl_4.l_3, q_cb_sum_cons_report_data_lvl_4.l_4, q_cb_sum_cons_report_data_lvl_4.up_curr, q_cb_sum_cons_report_data_lvl_4.desc_tr_l3, q_cb_sum_cons_report_data_lvl_4.budget_type, q_cb_sum_cons_report_data_lvl_4.desc_tr_l4
order by sum(q_cb_sum_cons_report_data_lvl_4.gt_rem) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_compare_lvl_5
select q_cb_sum_cons_report_data_lvl_5.l_1, q_cb_sum_cons_report_data_lvl_5.l_2, q_cb_sum_cons_report_data_lvl_5.l_3, q_cb_sum_cons_report_data_lvl_5.l_4, q_cb_sum_cons_report_data_lvl_5.up_curr, sum(q_cb_sum_cons_report_data_lvl_5.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data_lvl_5.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data_lvl_5.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data_lvl_5.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data_lvl_5.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data_lvl_5.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data_lvl_5.budget_type, sum(q_cb_sum_cons_report_data_lvl_5.gt_rem) as gt_rem, q_cb_sum_cons_report_data_lvl_5.desc_tr_l4, q_cb_sum_cons_report_data_lvl_5.l_5, q_cb_sum_cons_report_data_lvl_5.desc_tr_l5
from q_cb_sum_cons_report_data_lvl_5
group by q_cb_sum_cons_report_data_lvl_5.l_1, q_cb_sum_cons_report_data_lvl_5.l_2, q_cb_sum_cons_report_data_lvl_5.l_3, q_cb_sum_cons_report_data_lvl_5.l_4, q_cb_sum_cons_report_data_lvl_5.up_curr, q_cb_sum_cons_report_data_lvl_5.budget_type, q_cb_sum_cons_report_data_lvl_5.desc_tr_l4, q_cb_sum_cons_report_data_lvl_5.l_5, q_cb_sum_cons_report_data_lvl_5.desc_tr_l5
order by sum(q_cb_sum_cons_report_data_lvl_5.gt_rem) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_detailed
select [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as l6_comb, q_cb_cons_report_data.currency as up_curr, q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.l_5, q_cb_cons_report_data.l_6, q_cb_cons_report_data.desc_tr_l6, q_cb_cons_report_data.currency, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, [incomegt]-[incomert] as incomerem, [expensegt]-[expensert] as expenserem, [profitgt]-[profitrt] as profitrem
from q_cb_cons_report_data
group by [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.l_5, q_cb_cons_report_data.l_6, q_cb_cons_report_data.desc_tr_l6, q_cb_cons_report_data.currency, q_cb_cons_report_data.desc_tr_l6, [incomegt]-[incomert], [expensegt]-[expensert], [profitgt]-[profitrt];

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_lvl_4
select q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.currency as up_curr, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem, c4_code.desc_tr_l4
from q_cb_cons_report_data left join c4_code on (q_cb_cons_report_data.l_4 = c4_code.c_l4) and (q_cb_cons_report_data.l_3 = c4_code.c_l3) and (q_cb_cons_report_data.l_2 = c4_code.c_l2) and (q_cb_cons_report_data.l_1 = c4_code.c_l1)
group by q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.currency, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, c4_code.desc_tr_l4
order by sum(q_cb_cons_report_data.profitgt) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_lvl_5
select q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.currency as up_curr, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem, q_cb_cons_report_data.l_5, c5_code.desc_tr_l5, c4_code.desc_tr_l4
from (q_cb_cons_report_data left join c5_code on (q_cb_cons_report_data.l_5 = c5_code.c_l5) and (q_cb_cons_report_data.l_4 = c5_code.c_l4) and (q_cb_cons_report_data.l_3 = c5_code.c_l3) and (q_cb_cons_report_data.l_2 = c5_code.c_l2) and (q_cb_cons_report_data.l_1 = c5_code.c_l1)) left join c4_code on (q_cb_cons_report_data.l_1 = c4_code.c_l1) and (q_cb_cons_report_data.l_2 = c4_code.c_l2) and (q_cb_cons_report_data.l_3 = c4_code.c_l3) and (q_cb_cons_report_data.l_4 = c4_code.c_l4)
group by q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.currency, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, q_cb_cons_report_data.l_5, c5_code.desc_tr_l5, c4_code.desc_tr_l4
order by sum(q_cb_cons_report_data.profitgt) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_summary
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, q_cb_allprojects_report_data.desc_tr_l2, q_cb_allprojects_report_data.desc_tr_l3, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, q_cb_allprojects_report_data.desc_tr_l2, q_cb_allprojects_report_data.desc_tr_l3, q_cb_allprojects_report_data.currency;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_summary_detailed
select [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as l6_comb, q_cb_allprojects_report_data.currency as up_curr, q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.l_6, q_cb_allprojects_report_data.desc_tr_l2, q_cb_allprojects_report_data.desc_tr_l3, t_001_projects.r03_s_name, q_cb_allprojects_report_data.pc, q_cb_allprojects_report_data.desc_tr_l6, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code
group by [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], q_cb_allprojects_report_data.currency, q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.l_6, q_cb_allprojects_report_data.desc_tr_l2, q_cb_allprojects_report_data.desc_tr_l3, t_001_projects.r03_s_name, q_cb_allprojects_report_data.pc, q_cb_allprojects_report_data.desc_tr_l6;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_summary_lvl_4
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, q_cb_allprojects_report_data.desc_tr_l3, c4_code.desc_tr_l4, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from (q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code) left join c4_code on (q_cb_allprojects_report_data.l_4 = c4_code.c_l4) and (q_cb_allprojects_report_data.l_3 = c4_code.c_l3) and (q_cb_allprojects_report_data.l_2 = c4_code.c_l2) and (q_cb_allprojects_report_data.l_1 = c4_code.c_l1)
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, q_cb_allprojects_report_data.desc_tr_l3, c4_code.desc_tr_l4, q_cb_allprojects_report_data.currency;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_summary_lvl_5
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, c4_code.desc_tr_l4, c5_code.desc_tr_l5, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from ((q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code) left join c4_code on (q_cb_allprojects_report_data.l_1 = c4_code.c_l1) and (q_cb_allprojects_report_data.l_2 = c4_code.c_l2) and (q_cb_allprojects_report_data.l_3 = c4_code.c_l3) and (q_cb_allprojects_report_data.l_4 = c4_code.c_l4)) left join c5_code on (q_cb_allprojects_report_data.l_1 = c5_code.c_l1) and (q_cb_allprojects_report_data.l_2 = c5_code.c_l2) and (q_cb_allprojects_report_data.l_3 = c5_code.c_l3) and (q_cb_allprojects_report_data.l_4 = c5_code.c_l4) and (q_cb_allprojects_report_data.l_5 = c5_code.c_l5)
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, c4_code.desc_tr_l4, c5_code.desc_tr_l5, q_cb_allprojects_report_data.currency;

----------------------------------------------------------------------------------------------------
~sq_rr_updates
select t_update_data.id, t_update_data.update_ver, t_update_data.update_topic, t_update_data.update_data, t_update_data.update_date
from t_update_data;

----------------------------------------------------------------------------------------------------
~tmpclp51753
select t_bb_indexes.g_month, log([r_ufe]+1) as rr_ufe, log([r_tufe]+1) as rr_tufe, log([r_inf_usd]+1) as rr_inf_usd, log([r_inf_eur]+1) as rr_inf_eur, log([r_metal]+1) as rr_metal, log([r_petrol]+1) as rr_petrol, log([r_cement]+1) as rr_cement, log([r_electricity]+1) as rr_electricity, t_bb_indexes.e_year as expr1
from t_bb_indexes;

----------------------------------------------------------------------------------------------------
~tmpclp51901
select t_months.g_month, iif(year([g_month])>2022,(1+[r_metal])^(month([g_month])/12)*[fr_metal],(1+[r_metal])^(month([g_month])/12))-1 as bb_metal, iif(year([g_month])>2022,(1+[r_electricity])^(month([g_month])/12)*[fr_electricity],(1+[r_electricity])^(month([g_month])/12))-1 as bb_electricity, iif(year([g_month])>2022,(1+[r_cement])^(month([g_month])/12)*[fr_cement],(1+[r_cement])^(month([g_month])/12))-1 as bb_cement, iif(year([g_month])>2022,(1+[r_petrol])^(month([g_month])/12)*[fr_petrol],(1+[r_petrol])^(month([g_month])/12))-1 as bb_petrol, iif(year([g_month])>2022,(1+[r_inf_usd])^(month([g_month])/12)*[fr_inf_usd],(1+[r_inf_usd])^(month([g_month])/12))-1 as bb_inf_usd, iif(year([g_month])>2022,(1+[r_inf_eur])^(month([g_month])/12)*[fr_inf_eur],(1+[r_inf_eur])^(month([g_month])/12))-1 as bb_inf_eur, iif(year([g_month])>2022,(1+[r_ufe])^(month([g_month])/12)*[fr_ufe],(1+[r_ufe])^(month([g_month])/12))-1 as bb_ufe, iif(year([g_month])>2022,(1+[r_tufe])^(month([g_month])/12)*[fr_tufe],(1+[r_tufe])^(month([g_month])/12))-1 as bb_tufe
from (t_months left join t_bb_indexes on t_months.g_year=t_bb_indexes.[g_month]) left join q_bb_indexes_p on t_months.g_year = q_bb_indexes_p.e_year;

----------------------------------------------------------------------------------------------------
q_ac_bb_exp_crosstab
transform sum(t_ac_bb_exp.exp_ac_exp) as sumofexp_ac_exp
select t_ac_bb_exp.rep_month, t_ac_bb_exp.pc, t_ac_bb_exp.l_1, t_ac_bb_exp.l_2, t_ac_bb_exp.l_3, t_ac_bb_exp.l_4, t_ac_bb_exp.l_5, t_ac_bb_exp.l_6, t_ac_bb_exp.up_curr
from t_ac_bb_exp
group by t_ac_bb_exp.rep_month, t_ac_bb_exp.pc, t_ac_bb_exp.l_1, t_ac_bb_exp.l_2, t_ac_bb_exp.l_3, t_ac_bb_exp.l_4, t_ac_bb_exp.l_5, t_ac_bb_exp.l_6, t_ac_bb_exp.up_curr
pivot t_ac_bb_exp.exp_ac_mon;

----------------------------------------------------------------------------------------------------
q_ac_bb_exp_lastm
select max(t_ac_bb_exp.exp_ac_mon) as lastm, t_ac_bb_exp.pc, t_ac_bb_exp.l_1, t_ac_bb_exp.l_2, t_ac_bb_exp.l_3, t_ac_bb_exp.l_4, t_ac_bb_exp.l_5, t_ac_bb_exp.l_6, t_ac_bb_exp.rep_month
from t_ac_bb_exp
group by t_ac_bb_exp.pc, t_ac_bb_exp.l_1, t_ac_bb_exp.l_2, t_ac_bb_exp.l_3, t_ac_bb_exp.l_4, t_ac_bb_exp.l_5, t_ac_bb_exp.l_6, t_ac_bb_exp.rep_month;

----------------------------------------------------------------------------------------------------
q_ac_exp_crosstab
transform sum(t_ac_exp.exp_ac_exp) as sumofexp_ac_exp
select t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6, t_ac_exp.up_curr
from t_ac_exp
group by t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6, t_ac_exp.up_curr
pivot t_ac_exp.exp_ac_mon;

----------------------------------------------------------------------------------------------------
q_ac_indexes_delete_mod
delete t_ac_indexes_mod.rep_month, t_ac_indexes_mod.g_month, t_ac_indexes_mod.bb_metal, t_ac_indexes_mod.bb_electricity, t_ac_indexes_mod.bb_cement, t_ac_indexes_mod.bb_petrol, t_ac_indexes_mod.bb_inf_usd, t_ac_indexes_mod.bb_inf_eur, t_ac_indexes_mod.bb_ufe, t_ac_indexes_mod.bb_tufe
from t_ac_indexes_mod;

----------------------------------------------------------------------------------------------------
q_ac_indexes_graph
select t_cb_indexes.bb_metal, t_ac_indexes_mod.bb_metal, t_cb_indexes.bb_electricity, t_ac_indexes_mod.bb_electricity, t_cb_indexes.bb_cement, t_ac_indexes_mod.bb_cement, t_cb_indexes.bb_petrol, t_ac_indexes_mod.bb_petrol, t_cb_indexes.bb_inf_usd, t_ac_indexes_mod.bb_inf_usd, t_cb_indexes.bb_inf_eur, t_ac_indexes_mod.bb_inf_eur, t_cb_indexes.bb_ufe, t_ac_indexes_mod.bb_ufe, t_cb_indexes.bb_tufe, t_ac_indexes_mod.bb_tufe, t_cb_indexes.g_month
from t_cb_indexes right join t_ac_indexes_mod on (t_cb_indexes.rep_month = t_ac_indexes_mod.rep_month) and (t_cb_indexes.g_month = t_ac_indexes_mod.g_month)
where (((t_cb_indexes.g_month)>#1/1/2022#) and ((t_ac_indexes_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_ac_indexes_mod_ap
insert into t_ac_indexes_mod ( rep_month, g_month, bb_metal, bb_electricity, bb_cement, bb_petrol, bb_inf_usd, bb_inf_eur, bb_ufe, bb_tufe )
select t_cb_indexes.rep_month, t_cb_indexes.g_month, t_cb_indexes.bb_metal, t_cb_indexes.bb_electricity, t_cb_indexes.bb_cement, t_cb_indexes.bb_petrol, t_cb_indexes.bb_inf_usd, t_cb_indexes.bb_inf_eur, t_cb_indexes.bb_ufe, t_cb_indexes.bb_tufe
from t_cb_indexes
where (((t_cb_indexes.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_ac_indexes_reset
update t_ac_indexes_mod left join t_cb_indexes on (t_ac_indexes_mod.rep_month = t_cb_indexes.rep_month) and (t_ac_indexes_mod.g_month = t_cb_indexes.g_month) set t_ac_indexes_mod.g_month = [t_cb_indexes].[g_month], t_ac_indexes_mod.bb_metal = [t_cb_indexes].[bb_metal], t_ac_indexes_mod.bb_electricity = [t_cb_indexes].[bb_electricity], t_ac_indexes_mod.bb_cement = [t_cb_indexes].[bb_cement], t_ac_indexes_mod.bb_petrol = [t_cb_indexes].[bb_petrol], t_ac_indexes_mod.bb_inf_usd = [t_cb_indexes].[bb_inf_usd], t_ac_indexes_mod.bb_inf_eur = [t_cb_indexes].[bb_inf_eur], t_ac_indexes_mod.bb_ufe = [t_cb_indexes].[bb_ufe], t_ac_indexes_mod.bb_tufe = [t_cb_indexes].[bb_tufe], t_ac_indexes_mod.rep_month = [t_cb_indexes].[rep_month]
where (((t_ac_indexes_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_active_rep_month
select max(t_rep_month.rep_month) as active_rep_month
from t_rep_month;

----------------------------------------------------------------------------------------------------
q_bb_active_months_res_qty
select t_bb_analysis.rep_month, t_bb_analysis.p01_code as pc, q_bb_qty_activem_works.exp_base_mon, (1+[r_loss])*[t_bb_analysis].[an_rs_quantity] as an_rs_quantity, t_bb_analysis.key_r4, q_bb_qty_activem_works.key_r_pc_l6, t_bb_analysis.key_full, t_bb_analysis.l_1, t_bb_analysis.l_2, t_bb_analysis.l_3, t_bb_analysis.rs_l1, t_bb_analysis.rs_l2, t_bb_analysis.rs_l3, t_bb_analysis.rs_l4, t_bb_analysis.l_4, t_bb_analysis.l_5, t_bb_analysis.l_6, t_bb_analysis.key_r4_simple, t_bb_analysis.r_loss
from q_bb_qty_activem_works left join t_bb_analysis on q_bb_qty_activem_works.key_r_pc_l6 = t_bb_analysis.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_analysis_activem_with_prices
select q_bb_active_months_res_qty.rep_month, q_bb_active_months_res_qty.pc, q_bb_active_months_res_qty.exp_base_mon, q_bb_active_months_res_qty.an_rs_quantity, q_bb_active_months_res_qty.key_r4, q_bb_active_months_res_qty.key_r_pc_l6, q_bb_active_months_res_qty.key_full, t_pl_res_up.up_cost, q_bb_active_months_res_qty.l_1, q_bb_active_months_res_qty.l_2, q_bb_active_months_res_qty.l_3, q_bb_active_months_res_qty.l_4, q_bb_active_months_res_qty.l_5, q_bb_active_months_res_qty.l_6, q_bb_active_months_res_qty.rs_l1, q_bb_active_months_res_qty.rs_l2, q_bb_active_months_res_qty.rs_l3, q_bb_active_months_res_qty.rs_l4, r4_code.currency, q_bb_active_months_res_qty.key_r4_simple
from (q_bb_active_months_res_qty left join t_pl_res_up on q_bb_active_months_res_qty.key_r4 = t_pl_res_up.key_r4) left join r4_code on q_bb_active_months_res_qty.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_bb_analysis_comp
select t_bb_analysis_add.p01_code, t_bb_analysis_add.rs_l1, t_bb_analysis_add.rs_l2, t_bb_analysis_add.rs_l3, t_bb_analysis_add.rs_l4, t_bb_analysis_add.analysis_date, t_bb_analysis.p01_code
from t_bb_analysis_add left join t_bb_analysis on (t_bb_analysis_add.analysis_date = t_bb_analysis.analysis_date) and (t_bb_analysis_add.rs_l4 = t_bb_analysis.rs_l4) and (t_bb_analysis_add.rs_l3 = t_bb_analysis.rs_l3) and (t_bb_analysis_add.rs_l2 = t_bb_analysis.rs_l2) and (t_bb_analysis_add.rs_l1 = t_bb_analysis.rs_l1) and (t_bb_analysis_add.p01_code = t_bb_analysis.p01_code)
where (((t_bb_analysis.p01_code) is null));

----------------------------------------------------------------------------------------------------
q_bb_coeff_export
select t_bb_analysis.p01_code, t_bb_analysis.rs_l1, t_bb_analysis.rs_l2, t_bb_analysis.rs_l3, t_bb_analysis.rs_l4, r4_code.r_4_desc_tr, r4_code.w_ufe, r4_code.w_tufe, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.w_metal, r4_code.w_petrol, r4_code.w_cement, r4_code.w_electricity
from r4_code left join t_bb_analysis on (r4_code.r_4_code = t_bb_analysis.rs_l4) and (r4_code.r_3_code = t_bb_analysis.rs_l3) and (r4_code.r_2_code = t_bb_analysis.rs_l2) and (r4_code.r_1_code = t_bb_analysis.rs_l1)
group by t_bb_analysis.p01_code, t_bb_analysis.rs_l1, t_bb_analysis.rs_l2, t_bb_analysis.rs_l3, t_bb_analysis.rs_l4, r4_code.r_4_desc_tr, r4_code.w_ufe, r4_code.w_tufe, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.w_metal, r4_code.w_petrol, r4_code.w_cement, r4_code.w_electricity
having (((t_bb_analysis.p01_code) is not null));

----------------------------------------------------------------------------------------------------
q_bb_curr_base_month
select q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month
from t_rep_month right join q_budget_project_months on t_rep_month.rep_month = q_budget_project_months.rep_month
group by q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month;

----------------------------------------------------------------------------------------------------
q_bb_curr_base_val
select q_bb_curr_base_month.rep_month, q_bb_curr_base_month.rep_month_date, t_bb_mon_curr_rates.r_eur_eur, t_bb_mon_curr_rates.r_eur_try, t_bb_mon_curr_rates.r_eur_usd, t_bb_mon_curr_rates.r_try_eur, t_bb_mon_curr_rates.r_try_try, t_bb_mon_curr_rates.r_try_usd, t_bb_mon_curr_rates.r_usd_eur, t_bb_mon_curr_rates.r_usd_try, t_bb_mon_curr_rates.r_usd_usd, q_bb_curr_base_month.pc
from q_bb_curr_base_month left join t_bb_mon_curr_rates on (q_bb_curr_base_month.pc = t_bb_mon_curr_rates.p_code) and (q_bb_curr_base_month.rep_month_date = t_bb_mon_curr_rates.month) and (q_bb_curr_base_month.rep_month = t_bb_mon_curr_rates.rep_month)
group by q_bb_curr_base_month.rep_month, q_bb_curr_base_month.rep_month_date, t_bb_mon_curr_rates.r_eur_eur, t_bb_mon_curr_rates.r_eur_try, t_bb_mon_curr_rates.r_eur_usd, t_bb_mon_curr_rates.r_try_eur, t_bb_mon_curr_rates.r_try_try, t_bb_mon_curr_rates.r_try_usd, t_bb_mon_curr_rates.r_usd_eur, t_bb_mon_curr_rates.r_usd_try, t_bb_mon_curr_rates.r_usd_usd, q_bb_curr_base_month.pc;

----------------------------------------------------------------------------------------------------
q_bb_curr_escalation_rates
select q_bb_active_months_res_qty.rep_month, q_bb_active_months_res_qty.pc, q_bb_active_months_res_qty.l_1, q_bb_active_months_res_qty.l_2, q_bb_active_months_res_qty.l_3, q_bb_active_months_res_qty.l_4, q_bb_active_months_res_qty.l_5, q_bb_active_months_res_qty.l_6, q_bb_active_months_res_qty.exp_base_mon as [month], q_bb_active_months_res_qty.rs_l1, q_bb_active_months_res_qty.rs_l2, q_bb_active_months_res_qty.rs_l3, q_bb_active_months_res_qty.rs_l4, iif(([currency]="try" and [w_inf_usd]<>0),1+round([rt_usd_try]*[w_inf_usd],6),(iif([currency]="eur" and [w_inf_usd]<>0,1+round([rt_usd_eur]*[w_inf_usd],6),1))) as k_usd, iif(([currency]="try" and [w_inf_eur]<>0),1+round([rt_eur_try]*[w_inf_eur],6),(iif([currency]="usd" and [w_inf_eur]<>0,1+round([rt_eur_usd]*[w_inf_eur],6),1))) as k_eur, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.currency as rs_currency, q_bb_active_months_res_qty.key_r4_simple, q_bb_active_months_res_qty.key_full, q_bb_active_months_res_qty.key_r_pc_l6, q_bb_active_months_res_qty.key_r4, [key_full] & "." & [rs_currency] & "." & [month] as key_full_comb
from (q_bb_active_months_res_qty left join q_bb_monthly_curr_rates_inc on (q_bb_active_months_res_qty.exp_base_mon = q_bb_monthly_curr_rates_inc.exp_base_mon) and (q_bb_active_months_res_qty.pc = q_bb_monthly_curr_rates_inc.pc) and (q_bb_active_months_res_qty.rep_month = q_bb_monthly_curr_rates_inc.rep_month)) left join r4_code on q_bb_active_months_res_qty.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_bb_exp
select t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6, q_bb_unit_price.g_month as exp_base_mon, sum(([exp_base_qty]*[unit_price_planned_coeff])) as total_expense, q_bb_unit_price.up_curr, q_bb_unit_price.key_r_pc_l6
from t_bb_qty right join q_bb_unit_price on (t_bb_qty.pc = q_bb_unit_price.p01_code) and (t_bb_qty.l_1 = q_bb_unit_price.l_1) and (t_bb_qty.l_2 = q_bb_unit_price.l_2) and (t_bb_qty.l_3 = q_bb_unit_price.l_3) and (t_bb_qty.l_4 = q_bb_unit_price.l_4) and (t_bb_qty.l_5 = q_bb_unit_price.l_5) and (t_bb_qty.l_6 = q_bb_unit_price.l_6) and (t_bb_qty.exp_base_mon = q_bb_unit_price.g_month) and (t_bb_qty.rep_month = q_bb_unit_price.rep_month)
group by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6, q_bb_unit_price.g_month, q_bb_unit_price.up_curr, q_bb_unit_price.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_dist_eur_with_dummy
transform sum(q_bb_exp_eur_with_dummy.eur_expense) as sumofeur_expense
select q_bb_exp_eur_with_dummy.rep_month, q_bb_exp_eur_with_dummy.pc, q_bb_exp_eur_with_dummy.l_1, q_bb_exp_eur_with_dummy.l_2, q_bb_exp_eur_with_dummy.l_3, q_bb_exp_eur_with_dummy.l_4, q_bb_exp_eur_with_dummy.l_5, q_bb_exp_eur_with_dummy.l_6, q_bb_exp_eur_with_dummy.up_curr_conv
from q_bb_exp_eur_with_dummy
group by q_bb_exp_eur_with_dummy.rep_month, q_bb_exp_eur_with_dummy.pc, q_bb_exp_eur_with_dummy.l_1, q_bb_exp_eur_with_dummy.l_2, q_bb_exp_eur_with_dummy.l_3, q_bb_exp_eur_with_dummy.l_4, q_bb_exp_eur_with_dummy.l_5, q_bb_exp_eur_with_dummy.l_6, q_bb_exp_eur_with_dummy.up_curr_conv
pivot q_bb_exp_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_exp_dist_try_with_dummy
transform sum(q_bb_exp_try_with_dummy.try_expense) as sumoftry_expense
select q_bb_exp_try_with_dummy.rep_month, q_bb_exp_try_with_dummy.pc, q_bb_exp_try_with_dummy.l_1, q_bb_exp_try_with_dummy.l_2, q_bb_exp_try_with_dummy.l_3, q_bb_exp_try_with_dummy.l_4, q_bb_exp_try_with_dummy.l_5, q_bb_exp_try_with_dummy.l_6, q_bb_exp_try_with_dummy.up_curr_conv
from q_bb_exp_try_with_dummy
group by q_bb_exp_try_with_dummy.rep_month, q_bb_exp_try_with_dummy.pc, q_bb_exp_try_with_dummy.l_1, q_bb_exp_try_with_dummy.l_2, q_bb_exp_try_with_dummy.l_3, q_bb_exp_try_with_dummy.l_4, q_bb_exp_try_with_dummy.l_5, q_bb_exp_try_with_dummy.l_6, q_bb_exp_try_with_dummy.up_curr_conv
pivot q_bb_exp_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_exp_dist_usd_with_dummy
transform sum(q_bb_exp_usd_with_dummy.usd_expense) as sumofusd_expense
select q_bb_exp_usd_with_dummy.rep_month, q_bb_exp_usd_with_dummy.pc, q_bb_exp_usd_with_dummy.l_1, q_bb_exp_usd_with_dummy.l_2, q_bb_exp_usd_with_dummy.l_3, q_bb_exp_usd_with_dummy.l_4, q_bb_exp_usd_with_dummy.l_5, q_bb_exp_usd_with_dummy.l_6, q_bb_exp_usd_with_dummy.up_curr_conv
from q_bb_exp_usd_with_dummy
group by q_bb_exp_usd_with_dummy.rep_month, q_bb_exp_usd_with_dummy.pc, q_bb_exp_usd_with_dummy.l_1, q_bb_exp_usd_with_dummy.l_2, q_bb_exp_usd_with_dummy.l_3, q_bb_exp_usd_with_dummy.l_4, q_bb_exp_usd_with_dummy.l_5, q_bb_exp_usd_with_dummy.l_6, q_bb_exp_usd_with_dummy.up_curr_conv
pivot q_bb_exp_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_exp_dist_with_dummy
transform sum(q_bb_exp_with_dummy.total_expense) as sumoftotal_expense
select q_bb_exp_with_dummy.rep_month, q_bb_exp_with_dummy.pc, q_bb_exp_with_dummy.l_1, q_bb_exp_with_dummy.l_2, q_bb_exp_with_dummy.l_3, q_bb_exp_with_dummy.l_4, q_bb_exp_with_dummy.l_5, q_bb_exp_with_dummy.l_6, q_bb_exp_with_dummy.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")) as exc_try, iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_bb_exp_with_dummy
group by q_bb_exp_with_dummy.rep_month, q_bb_exp_with_dummy.pc, q_bb_exp_with_dummy.l_1, q_bb_exp_with_dummy.l_2, q_bb_exp_with_dummy.l_3, q_bb_exp_with_dummy.l_4, q_bb_exp_with_dummy.l_5, q_bb_exp_with_dummy.l_6, q_bb_exp_with_dummy.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")), iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")), iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur"))
pivot q_bb_exp_with_dummy.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_exp_eur
select t_bb_exp_total_st.rep_month, t_bb_exp_total_st.pc, t_bb_exp_total_st.l_1, t_bb_exp_total_st.l_2, t_bb_exp_total_st.l_3, t_bb_exp_total_st.l_4, t_bb_exp_total_st.l_5, t_bb_exp_total_st.l_6, t_bb_exp_total_st.total_expense, t_bb_exp_total_st.up_curr, iif([up_curr]="eur",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_eur],[total_expense]*[r_try_eur])) as eur_expense, "eur" as up_curr_conv, t_bb_exp_total_st.month as [month], t_bb_exp_total_st.key_r_pc_l6
from t_bb_exp_total_st left join t_bb_mon_curr_rates on (t_bb_exp_total_st.month = t_bb_mon_curr_rates.month) and (t_bb_exp_total_st.pc = t_bb_mon_curr_rates.p_code) and (t_bb_exp_total_st.rep_month = t_bb_mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_bb_exp_eur_mt
select q_bb_exp_eur.rep_month, q_bb_exp_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_eur.month, q_bb_exp_eur.l_1, q_bb_exp_eur.l_2, q_bb_exp_eur.l_3, q_bb_exp_eur.l_4, q_bb_exp_eur.l_5, q_bb_exp_eur.l_6, q_bb_exp_eur.eur_expense, q_bb_exp_eur.up_curr_conv, q_bb_exp_eur.key_r_pc_l6 into t_bb_exp_eur_st
from q_bb_exp_eur left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_exp_eur.l_1 = c3_code.c_l1) and (q_bb_exp_eur.l_2 = c3_code.c_l2) and (q_bb_exp_eur.l_3 = c3_code.c_l3)
group by q_bb_exp_eur.rep_month, q_bb_exp_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_eur.month, q_bb_exp_eur.l_1, q_bb_exp_eur.l_2, q_bb_exp_eur.l_3, q_bb_exp_eur.l_4, q_bb_exp_eur.l_5, q_bb_exp_eur.l_6, q_bb_exp_eur.eur_expense, q_bb_exp_eur.up_curr_conv, q_bb_exp_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_eur_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_exp_eur

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_exp_total
select 
		*
	from 
q_bb_exp
		
union all select 
		*
	from 
		t_ac_bb_exp;

----------------------------------------------------------------------------------------------------
q_bb_exp_total_mt
select q_bb_exp_total.rep_month, q_bb_exp_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_total.exp_base_mon as [month], q_bb_exp_total.total_expense, q_bb_exp_total.up_curr, q_bb_exp_total.l_1, q_bb_exp_total.l_2, q_bb_exp_total.l_3, q_bb_exp_total.l_4, q_bb_exp_total.l_5, q_bb_exp_total.l_6, q_bb_exp_total.key_r_pc_l6 into t_bb_exp_total_st
from q_bb_exp_total left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_exp_total.l_1 = c3_code.c_l1) and (q_bb_exp_total.l_2 = c3_code.c_l2) and (q_bb_exp_total.l_3 = c3_code.c_l3)
group by q_bb_exp_total.rep_month, q_bb_exp_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_total.exp_base_mon, q_bb_exp_total.total_expense, q_bb_exp_total.up_curr, q_bb_exp_total.l_1, q_bb_exp_total.l_2, q_bb_exp_total.l_3, q_bb_exp_total.l_4, q_bb_exp_total.l_5, q_bb_exp_total.l_6, q_bb_exp_total.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_try
select t_bb_exp_total_st.rep_month, t_bb_exp_total_st.pc, t_bb_exp_total_st.l_1, t_bb_exp_total_st.l_2, t_bb_exp_total_st.l_3, t_bb_exp_total_st.l_4, t_bb_exp_total_st.l_5, t_bb_exp_total_st.l_6, t_bb_exp_total_st.total_expense, t_bb_exp_total_st.up_curr, iif([up_curr]="try",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_try],[total_expense]*[r_eur_try])) as try_expense, "try" as up_curr_conv, t_bb_exp_total_st.month as [month], t_bb_exp_total_st.key_r_pc_l6
from t_bb_exp_total_st left join t_bb_mon_curr_rates on (t_bb_exp_total_st.month = t_bb_mon_curr_rates.month) and (t_bb_exp_total_st.pc = t_bb_mon_curr_rates.p_code) and (t_bb_exp_total_st.rep_month = t_bb_mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_bb_exp_try_mt
select q_bb_exp_try.rep_month, q_bb_exp_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_try.month, q_bb_exp_try.l_1, q_bb_exp_try.l_2, q_bb_exp_try.l_3, q_bb_exp_try.l_4, q_bb_exp_try.l_5, q_bb_exp_try.l_6, q_bb_exp_try.try_expense, q_bb_exp_try.up_curr_conv, q_bb_exp_try.key_r_pc_l6 into t_bb_exp_try_st
from q_bb_exp_try left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_bb_exp_try.l_3 = c3_code.c_l3) and (q_bb_exp_try.l_2 = c3_code.c_l2) and (q_bb_exp_try.l_1 = c3_code.c_l1)
group by q_bb_exp_try.rep_month, q_bb_exp_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_try.month, q_bb_exp_try.l_1, q_bb_exp_try.l_2, q_bb_exp_try.l_3, q_bb_exp_try.l_4, q_bb_exp_try.l_5, q_bb_exp_try.l_6, q_bb_exp_try.try_expense, q_bb_exp_try.up_curr_conv, q_bb_exp_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_try_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_exp_try

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_exp_usd
select t_bb_exp_total_st.rep_month, t_bb_exp_total_st.pc, t_bb_exp_total_st.l_1, t_bb_exp_total_st.l_2, t_bb_exp_total_st.l_3, t_bb_exp_total_st.l_4, t_bb_exp_total_st.l_5, t_bb_exp_total_st.l_6, t_bb_exp_total_st.total_expense, t_bb_exp_total_st.up_curr, iif([up_curr]="usd",[total_expense],iif([up_curr]="try",[total_expense]*[r_try_usd],[total_expense]*[r_eur_usd])) as usd_expense, "usd" as up_curr_conv, t_bb_exp_total_st.month as [month], t_bb_exp_total_st.key_r_pc_l6
from t_bb_exp_total_st left join t_bb_mon_curr_rates on (t_bb_exp_total_st.month = t_bb_mon_curr_rates.month) and (t_bb_exp_total_st.pc = t_bb_mon_curr_rates.p_code) and (t_bb_exp_total_st.rep_month = t_bb_mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_bb_exp_usd_mt
select q_bb_exp_usd.rep_month, q_bb_exp_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_usd.month, q_bb_exp_usd.l_1, q_bb_exp_usd.l_2, q_bb_exp_usd.l_3, q_bb_exp_usd.l_4, q_bb_exp_usd.l_5, q_bb_exp_usd.l_6, q_bb_exp_usd.usd_expense, q_bb_exp_usd.up_curr_conv, q_bb_exp_usd.key_r_pc_l6 into t_bb_exp_usd_st
from q_bb_exp_usd left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_bb_exp_usd.l_3 = c3_code.c_l3) and (q_bb_exp_usd.l_2 = c3_code.c_l2) and (q_bb_exp_usd.l_1 = c3_code.c_l1)
group by q_bb_exp_usd.rep_month, q_bb_exp_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_usd.month, q_bb_exp_usd.l_1, q_bb_exp_usd.l_2, q_bb_exp_usd.l_3, q_bb_exp_usd.l_4, q_bb_exp_usd.l_5, q_bb_exp_usd.l_6, q_bb_exp_usd.usd_expense, q_bb_exp_usd.up_curr_conv, q_bb_exp_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_usd_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_exp_usd

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_exp_with_dummy
select 
		*
	from 
		q_bb_exp_total

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_inc_calculation
select t_bb_inc_qty.rep_month, t_bb_inc_qty.pc, t_bb_inc_qty.l_1, t_bb_inc_qty.l_2, t_bb_inc_qty.l_3, t_bb_inc_qty.l_4, t_bb_inc_qty.l_5, t_bb_inc_qty.l_6, t_bb_inc_qty.inc_base_mon, iif([inc_rate] is null,1,1+[inc_rate]) as inc_rate_1, iif([inc_rate_pcode] is null,1,1+[inc_rate_pcode]) as inc_rate_2, t_bb_inc_wbs.up, t_bb_inc_wbs.currency, [up]*[inc_rate_1]*[inc_rate_2] as up_total, t_bb_inc_qty.inc_base_qty, [up_total]*[inc_base_qty] as inc_total, t_bb_inc_qty.key_r_pc_l6
from ((t_bb_inc_qty left join t_bb_inc_esc_rates_l6 on (t_bb_inc_qty.rep_month = t_bb_inc_esc_rates_l6.rep_month) and (t_bb_inc_qty.pc = t_bb_inc_esc_rates_l6.p01_code) and (t_bb_inc_qty.l_1 = t_bb_inc_esc_rates_l6.c_l1) and (t_bb_inc_qty.l_2 = t_bb_inc_esc_rates_l6.c_l2) and (t_bb_inc_qty.l_3 = t_bb_inc_esc_rates_l6.c_l3) and (t_bb_inc_qty.l_4 = t_bb_inc_esc_rates_l6.c_l4) and (t_bb_inc_qty.l_5 = t_bb_inc_esc_rates_l6.c_l5) and (t_bb_inc_qty.l_6 = t_bb_inc_esc_rates_l6.c_l6) and (t_bb_inc_qty.inc_base_mon = t_bb_inc_esc_rates_l6.month)) left join t_bb_inc_esc_rates_pcode on (t_bb_inc_qty.rep_month = t_bb_inc_esc_rates_pcode.rep_month) and (t_bb_inc_qty.pc = t_bb_inc_esc_rates_pcode.p01_code) and (t_bb_inc_qty.inc_base_mon = t_bb_inc_esc_rates_pcode.month)) left join t_bb_inc_wbs on t_bb_inc_qty.key_r_pc_l6 = t_bb_inc_wbs.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_dist_eur_with_dummy
transform sum(q_bb_inc_eur_with_dummy.eur_income) as eur_income
select q_bb_inc_eur_with_dummy.rep_month, q_bb_inc_eur_with_dummy.pc, q_bb_inc_eur_with_dummy.l_1, q_bb_inc_eur_with_dummy.l_2, q_bb_inc_eur_with_dummy.l_3, q_bb_inc_eur_with_dummy.l_4, q_bb_inc_eur_with_dummy.l_5, q_bb_inc_eur_with_dummy.l_6, q_bb_inc_eur_with_dummy.up_curr_conv
from q_bb_inc_eur_with_dummy
group by q_bb_inc_eur_with_dummy.rep_month, q_bb_inc_eur_with_dummy.pc, q_bb_inc_eur_with_dummy.l_1, q_bb_inc_eur_with_dummy.l_2, q_bb_inc_eur_with_dummy.l_3, q_bb_inc_eur_with_dummy.l_4, q_bb_inc_eur_with_dummy.l_5, q_bb_inc_eur_with_dummy.l_6, q_bb_inc_eur_with_dummy.up_curr_conv
pivot q_bb_inc_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_inc_dist_try_with_dummy
transform sum(q_bb_inc_try_with_dummy.try_income) as try_income
select q_bb_inc_try_with_dummy.rep_month, q_bb_inc_try_with_dummy.pc, q_bb_inc_try_with_dummy.l_1, q_bb_inc_try_with_dummy.l_2, q_bb_inc_try_with_dummy.l_3, q_bb_inc_try_with_dummy.l_4, q_bb_inc_try_with_dummy.l_5, q_bb_inc_try_with_dummy.l_6, q_bb_inc_try_with_dummy.up_curr_conv
from q_bb_inc_try_with_dummy
group by q_bb_inc_try_with_dummy.rep_month, q_bb_inc_try_with_dummy.pc, q_bb_inc_try_with_dummy.l_1, q_bb_inc_try_with_dummy.l_2, q_bb_inc_try_with_dummy.l_3, q_bb_inc_try_with_dummy.l_4, q_bb_inc_try_with_dummy.l_5, q_bb_inc_try_with_dummy.l_6, q_bb_inc_try_with_dummy.up_curr_conv
pivot q_bb_inc_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_inc_dist_usd_with_dummy
transform sum(q_bb_inc_usd_with_dummy.usd_income) as usd_income
select q_bb_inc_usd_with_dummy.rep_month, q_bb_inc_usd_with_dummy.pc, q_bb_inc_usd_with_dummy.l_1, q_bb_inc_usd_with_dummy.l_2, q_bb_inc_usd_with_dummy.l_3, q_bb_inc_usd_with_dummy.l_4, q_bb_inc_usd_with_dummy.l_5, q_bb_inc_usd_with_dummy.l_6, q_bb_inc_usd_with_dummy.up_curr_conv
from q_bb_inc_usd_with_dummy
group by q_bb_inc_usd_with_dummy.rep_month, q_bb_inc_usd_with_dummy.pc, q_bb_inc_usd_with_dummy.l_1, q_bb_inc_usd_with_dummy.l_2, q_bb_inc_usd_with_dummy.l_3, q_bb_inc_usd_with_dummy.l_4, q_bb_inc_usd_with_dummy.l_5, q_bb_inc_usd_with_dummy.l_6, q_bb_inc_usd_with_dummy.up_curr_conv
pivot q_bb_inc_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_inc_dist_with_dummy
transform sum(q_bb_inc_with_dummy.inc_total) as total_income
select q_bb_inc_with_dummy.rep_month, q_bb_inc_with_dummy.pc, q_bb_inc_with_dummy.l_1, q_bb_inc_with_dummy.l_2, q_bb_inc_with_dummy.l_3, q_bb_inc_with_dummy.l_4, q_bb_inc_with_dummy.l_5, q_bb_inc_with_dummy.l_6, q_bb_inc_with_dummy.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")) as exc_try, iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_bb_inc_with_dummy
group by q_bb_inc_with_dummy.rep_month, q_bb_inc_with_dummy.pc, q_bb_inc_with_dummy.l_1, q_bb_inc_with_dummy.l_2, q_bb_inc_with_dummy.l_3, q_bb_inc_with_dummy.l_4, q_bb_inc_with_dummy.l_5, q_bb_inc_with_dummy.l_6, q_bb_inc_with_dummy.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")), iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")), iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur"))
pivot q_bb_inc_with_dummy.inc_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_inc_eur
select t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6, t_bb_inc_total_st.inc_total, t_bb_inc_total_st.currency, iif([currency]="eur",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_eur],[inc_total]*[r_try_eur])) as eur_income, "eur" as up_curr_conv, t_bb_inc_total_st.inc_base_mon as [month], t_bb_inc_total_st.key_r_pc_l6
from t_bb_inc_total_st left join mon_curr_rates on (t_bb_inc_total_st.inc_base_mon = mon_curr_rates.month) and (t_bb_inc_total_st.rep_month = mon_curr_rates.rep_month)
order by t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_inc_eur_mt
select q_bb_inc_eur.rep_month, q_bb_inc_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_eur.month, q_bb_inc_eur.eur_income, q_bb_inc_eur.up_curr_conv, q_bb_inc_eur.l_1, q_bb_inc_eur.l_2, q_bb_inc_eur.l_3, q_bb_inc_eur.l_4, q_bb_inc_eur.l_5, q_bb_inc_eur.l_6, c6_code.desc_tr_l6, q_bb_inc_eur.key_r_pc_l6 into t_bb_inc_eur_st
from (q_bb_inc_eur left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_bb_inc_eur.l_3 = c3_code.c_l3) and (q_bb_inc_eur.l_2 = c3_code.c_l2) and (q_bb_inc_eur.l_1 = c3_code.c_l1)) left join c6_code on (q_bb_inc_eur.l_6 = c6_code.c_l6) and (q_bb_inc_eur.l_5 = c6_code.c_l5) and (q_bb_inc_eur.l_4 = c6_code.c_l4) and (q_bb_inc_eur.l_3 = c6_code.c_l3) and (q_bb_inc_eur.l_2 = c6_code.c_l2) and (q_bb_inc_eur.l_1 = c6_code.c_l1)
group by q_bb_inc_eur.rep_month, q_bb_inc_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_eur.month, q_bb_inc_eur.eur_income, q_bb_inc_eur.up_curr_conv, q_bb_inc_eur.l_1, q_bb_inc_eur.l_2, q_bb_inc_eur.l_3, q_bb_inc_eur.l_4, q_bb_inc_eur.l_5, q_bb_inc_eur.l_6, c6_code.desc_tr_l6, q_bb_inc_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_eur_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_income,
up_curr_conv,
key_r_pc_l6


from 
q_bb_inc_eur

union all select 
*
from 
q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_inc_qty
select *
from t_bb_inc_qty;

----------------------------------------------------------------------------------------------------
q_bb_inc_qty_crosstab
transform sum(q_bb_inc_qty.inc_base_qty) as inc_base_qty
select q_bb_inc_qty.rep_month, q_bb_inc_qty.pc, q_bb_inc_qty.l_1, q_bb_inc_qty.l_2, q_bb_inc_qty.l_3, q_bb_inc_qty.l_4, q_bb_inc_qty.l_5, q_bb_inc_qty.l_6
from q_bb_inc_qty
group by q_bb_inc_qty.rep_month, q_bb_inc_qty.pc, q_bb_inc_qty.l_1, q_bb_inc_qty.l_2, q_bb_inc_qty.l_3, q_bb_inc_qty.l_4, q_bb_inc_qty.l_5, q_bb_inc_qty.l_6
order by q_bb_inc_qty.rep_month, q_bb_inc_qty.pc, q_bb_inc_qty.l_1, q_bb_inc_qty.l_2, q_bb_inc_qty.l_3, q_bb_inc_qty.l_4, q_bb_inc_qty.l_5, q_bb_inc_qty.l_6
pivot q_bb_inc_qty.inc_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_inc_total
select q_bb_inc_calculation.rep_month, q_bb_inc_calculation.pc, q_bb_inc_calculation.l_1, q_bb_inc_calculation.l_2, q_bb_inc_calculation.l_3, q_bb_inc_calculation.l_4, q_bb_inc_calculation.l_5, q_bb_inc_calculation.l_6, q_bb_inc_calculation.inc_base_mon, sum(q_bb_inc_calculation.inc_total) as inc_total, q_bb_inc_calculation.currency, q_bb_inc_calculation.key_r_pc_l6
from q_bb_inc_calculation
group by q_bb_inc_calculation.rep_month, q_bb_inc_calculation.pc, q_bb_inc_calculation.l_1, q_bb_inc_calculation.l_2, q_bb_inc_calculation.l_3, q_bb_inc_calculation.l_4, q_bb_inc_calculation.l_5, q_bb_inc_calculation.l_6, q_bb_inc_calculation.inc_base_mon, q_bb_inc_calculation.currency, q_bb_inc_calculation.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_total_mt
select q_bb_inc_total.rep_month, q_bb_inc_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_total.inc_base_mon, q_bb_inc_total.inc_total, q_bb_inc_total.currency, q_bb_inc_total.l_1, q_bb_inc_total.l_2, q_bb_inc_total.l_3, q_bb_inc_total.l_4, q_bb_inc_total.l_5, q_bb_inc_total.l_6, c6_code.desc_tr_l6, q_bb_inc_total.key_r_pc_l6 into t_bb_inc_total_st
from (q_bb_inc_total left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_inc_total.l_1 = c3_code.c_l1) and (q_bb_inc_total.l_2 = c3_code.c_l2) and (q_bb_inc_total.l_3 = c3_code.c_l3)) left join c6_code on (q_bb_inc_total.l_1 = c6_code.c_l1) and (q_bb_inc_total.l_2 = c6_code.c_l2) and (q_bb_inc_total.l_3 = c6_code.c_l3) and (q_bb_inc_total.l_4 = c6_code.c_l4) and (q_bb_inc_total.l_5 = c6_code.c_l5) and (q_bb_inc_total.l_6 = c6_code.c_l6)
group by q_bb_inc_total.rep_month, q_bb_inc_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_total.inc_base_mon, q_bb_inc_total.inc_total, q_bb_inc_total.currency, q_bb_inc_total.l_1, q_bb_inc_total.l_2, q_bb_inc_total.l_3, q_bb_inc_total.l_4, q_bb_inc_total.l_5, q_bb_inc_total.l_6, c6_code.desc_tr_l6, q_bb_inc_total.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_try
select t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6, t_bb_inc_total_st.inc_total, t_bb_inc_total_st.currency, iif([currency]="try",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_try],[inc_total]*[r_try_try])) as try_income, "try" as up_curr_conv, t_bb_inc_total_st.inc_base_mon as [month], t_bb_inc_total_st.key_r_pc_l6
from t_bb_inc_total_st left join mon_curr_rates on (t_bb_inc_total_st.rep_month = mon_curr_rates.rep_month) and (t_bb_inc_total_st.inc_base_mon = mon_curr_rates.month)
order by t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_inc_try_mt
select q_bb_inc_try.rep_month, q_bb_inc_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_try.month, q_bb_inc_try.try_income, q_bb_inc_try.up_curr_conv, q_bb_inc_try.l_1, q_bb_inc_try.l_2, q_bb_inc_try.l_3, q_bb_inc_try.l_4, q_bb_inc_try.l_5, q_bb_inc_try.l_6, c6_code.desc_tr_l6, q_bb_inc_try.key_r_pc_l6 into t_bb_inc_try_st
from (q_bb_inc_try left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_inc_try.l_1 = c3_code.c_l1) and (q_bb_inc_try.l_2 = c3_code.c_l2) and (q_bb_inc_try.l_3 = c3_code.c_l3)) left join c6_code on (q_bb_inc_try.l_1 = c6_code.c_l1) and (q_bb_inc_try.l_2 = c6_code.c_l2) and (q_bb_inc_try.l_3 = c6_code.c_l3) and (q_bb_inc_try.l_4 = c6_code.c_l4) and (q_bb_inc_try.l_5 = c6_code.c_l5) and (q_bb_inc_try.l_6 = c6_code.c_l6)
group by q_bb_inc_try.rep_month, q_bb_inc_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_try.month, q_bb_inc_try.try_income, q_bb_inc_try.up_curr_conv, q_bb_inc_try.l_1, q_bb_inc_try.l_2, q_bb_inc_try.l_3, q_bb_inc_try.l_4, q_bb_inc_try.l_5, q_bb_inc_try.l_6, c6_code.desc_tr_l6, q_bb_inc_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_try_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_inc_try

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_inc_usd
select t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6, t_bb_inc_total_st.inc_total, t_bb_inc_total_st.currency, iif([currency]="usd",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_usd],[inc_total]*[r_usd_usd])) as usd_income, "usd" as up_curr_conv, t_bb_inc_total_st.inc_base_mon as [month], t_bb_inc_total_st.key_r_pc_l6
from t_bb_inc_total_st left join mon_curr_rates on (t_bb_inc_total_st.rep_month = mon_curr_rates.rep_month) and (t_bb_inc_total_st.inc_base_mon = mon_curr_rates.month)
order by t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_inc_usd_mt
select q_bb_inc_usd.rep_month, q_bb_inc_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_usd.month, q_bb_inc_usd.usd_income, q_bb_inc_usd.up_curr_conv, q_bb_inc_usd.l_1, q_bb_inc_usd.l_2, q_bb_inc_usd.l_3, q_bb_inc_usd.l_4, q_bb_inc_usd.l_5, q_bb_inc_usd.l_6, c6_code.desc_tr_l6, q_bb_inc_usd.key_r_pc_l6 into t_bb_inc_usd_st
from (q_bb_inc_usd left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_inc_usd.l_1 = c3_code.c_l1) and (q_bb_inc_usd.l_2 = c3_code.c_l2) and (q_bb_inc_usd.l_3 = c3_code.c_l3)) left join c6_code on (q_bb_inc_usd.l_1 = c6_code.c_l1) and (q_bb_inc_usd.l_2 = c6_code.c_l2) and (q_bb_inc_usd.l_3 = c6_code.c_l3) and (q_bb_inc_usd.l_4 = c6_code.c_l4) and (q_bb_inc_usd.l_5 = c6_code.c_l5) and (q_bb_inc_usd.l_6 = c6_code.c_l6)
group by q_bb_inc_usd.rep_month, q_bb_inc_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_usd.month, q_bb_inc_usd.usd_income, q_bb_inc_usd.up_curr_conv, q_bb_inc_usd.l_1, q_bb_inc_usd.l_2, q_bb_inc_usd.l_3, q_bb_inc_usd.l_4, q_bb_inc_usd.l_5, q_bb_inc_usd.l_6, c6_code.desc_tr_l6, q_bb_inc_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_usd_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_inc_usd

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_inc_with_dummy
select 
		*
	from 
		q_bb_inc_total

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_monthly_curr_rates_activem
select q_bb_qty_activem_works_monthly.rep_month, t_bb_mon_curr_rates.r_eur_try, t_bb_mon_curr_rates.r_eur_usd, t_bb_mon_curr_rates.r_usd_eur, t_bb_mon_curr_rates.r_usd_try, q_bb_qty_activem_works_monthly.exp_base_mon
from q_bb_qty_activem_works_monthly left join t_bb_mon_curr_rates on (q_bb_qty_activem_works_monthly.pc = t_bb_mon_curr_rates.p_code) and (q_bb_qty_activem_works_monthly.rep_month = t_bb_mon_curr_rates.rep_month) and (q_bb_qty_activem_works_monthly.exp_base_mon = t_bb_mon_curr_rates.month)
group by q_bb_qty_activem_works_monthly.rep_month, t_bb_mon_curr_rates.r_eur_try, t_bb_mon_curr_rates.r_eur_usd, t_bb_mon_curr_rates.r_usd_eur, t_bb_mon_curr_rates.r_usd_try, q_bb_qty_activem_works_monthly.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_monthly_curr_rates_inc
select q_bb_qty_activem_works_monthly.rep_month, q_bb_qty_activem_works_monthly.pc, q_bb_qty_activem_works_monthly.exp_base_mon, [q_bb_monthly_curr_rates_activem].[r_eur_try]/[q_bb_curr_base_val].[r_eur_try]-1 as rt_eur_try, [q_bb_monthly_curr_rates_activem].[r_eur_usd]/[q_bb_curr_base_val].[r_eur_usd]-1 as rt_eur_usd, [q_bb_monthly_curr_rates_activem].[r_usd_try]/[q_bb_curr_base_val].[r_usd_try]-1 as rt_usd_try, [q_bb_monthly_curr_rates_activem].[r_usd_eur]/[q_bb_curr_base_val].[r_usd_eur]-1 as rt_usd_eur
from (q_bb_qty_activem_works_monthly left join q_bb_monthly_curr_rates_activem on (q_bb_qty_activem_works_monthly.exp_base_mon = q_bb_monthly_curr_rates_activem.exp_base_mon) and (q_bb_qty_activem_works_monthly.rep_month = q_bb_monthly_curr_rates_activem.rep_month)) left join q_bb_curr_base_val on (q_bb_qty_activem_works_monthly.pc = q_bb_curr_base_val.pc) and (q_bb_qty_activem_works_monthly.rep_month = q_bb_curr_base_val.rep_month)
group by q_bb_qty_activem_works_monthly.rep_month, q_bb_qty_activem_works_monthly.pc, q_bb_qty_activem_works_monthly.exp_base_mon, [q_bb_monthly_curr_rates_activem].[r_eur_try]/[q_bb_curr_base_val].[r_eur_try]-1, [q_bb_monthly_curr_rates_activem].[r_eur_usd]/[q_bb_curr_base_val].[r_eur_usd]-1, [q_bb_monthly_curr_rates_activem].[r_usd_try]/[q_bb_curr_base_val].[r_usd_try]-1, [q_bb_monthly_curr_rates_activem].[r_usd_eur]/[q_bb_curr_base_val].[r_usd_eur]-1;

----------------------------------------------------------------------------------------------------
q_bb_pr_wbs
select t_bb_inc_total_st.rep_month
	,t_bb_inc_total_st.pc
	,t_bb_inc_total_st.l_1
	,t_bb_inc_total_st.l_2
	,t_bb_inc_total_st.l_3
	,t_bb_inc_total_st.l_4
	,t_bb_inc_total_st.l_5
	,t_bb_inc_total_st.l_6
	,t_bb_inc_total_st.currency
	,t_bb_inc_total_st.inc_base_mon as [month] 
	,t_bb_inc_total_st.key_r_pc_l6
from t_bb_inc_total_st 
group by t_bb_inc_total_st.rep_month
	,t_bb_inc_total_st.pc
	,t_bb_inc_total_st.l_1
	,t_bb_inc_total_st.l_2
	,t_bb_inc_total_st.l_3
	,t_bb_inc_total_st.l_4
	,t_bb_inc_total_st.l_5
	,t_bb_inc_total_st.l_6
	,t_bb_inc_total_st.currency
	,t_bb_inc_total_st.inc_base_mon 
	,t_bb_inc_total_st.key_r_pc_l6
having (((sum(t_bb_inc_total_st.[inc_total]))<>0)) 
union select t_bb_exp_total_st.rep_month
	,t_bb_exp_total_st.pc
	,t_bb_exp_total_st.l_1
	,t_bb_exp_total_st.l_2
	,t_bb_exp_total_st.l_3
	,t_bb_exp_total_st.l_4
	,t_bb_exp_total_st.l_5
	,t_bb_exp_total_st.l_6
	,t_bb_exp_total_st.up_curr
	,t_bb_exp_total_st.month as [month] 
	,t_bb_exp_total_st.key_r_pc_l6
from t_bb_exp_total_st 
group by t_bb_exp_total_st.rep_month
	,t_bb_exp_total_st.pc
	,t_bb_exp_total_st.l_1
	,t_bb_exp_total_st.l_2
	,t_bb_exp_total_st.l_3
	,t_bb_exp_total_st.l_4
	,t_bb_exp_total_st.l_5
	,t_bb_exp_total_st.l_6
	,t_bb_exp_total_st.up_curr
	,t_bb_exp_total_st.month 
	,t_bb_exp_total_st.key_r_pc_l6	
having (((sum(t_bb_exp_total_st.[total_expense]))<>0));

----------------------------------------------------------------------------------------------------
q_bb_profit
select q_bb_pr_wbs.rep_month, q_bb_pr_wbs.pc, q_bb_pr_wbs.l_1, q_bb_pr_wbs.l_2, q_bb_pr_wbs.l_3, q_bb_pr_wbs.l_4, q_bb_pr_wbs.l_5, q_bb_pr_wbs.l_6, q_bb_pr_wbs.currency, q_bb_pr_wbs.month, iif([inc_total] is null,0,[inc_total]) as income, iif([total_expense] is null,0,[total_expense]) as expense, [income]-[expense] as profit, q_bb_pr_wbs.key_r_pc_l6
from (q_bb_pr_wbs left join t_bb_inc_total_st on (q_bb_pr_wbs.currency = t_bb_inc_total_st.currency) and (q_bb_pr_wbs.month = t_bb_inc_total_st.inc_base_mon) and (q_bb_pr_wbs.key_r_pc_l6 = t_bb_inc_total_st.key_r_pc_l6)) left join t_bb_exp_total_st on (q_bb_pr_wbs.currency = t_bb_exp_total_st.up_curr) and (q_bb_pr_wbs.month = t_bb_exp_total_st.month) and (q_bb_pr_wbs.key_r_pc_l6 = t_bb_exp_total_st.key_r_pc_l6)
order by q_bb_pr_wbs.rep_month, q_bb_pr_wbs.pc, q_bb_pr_wbs.l_1, q_bb_pr_wbs.l_2, q_bb_pr_wbs.l_3, q_bb_pr_wbs.l_4, q_bb_pr_wbs.l_5, q_bb_pr_wbs.l_6, q_bb_pr_wbs.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_dist_eur_with_dummy
transform sum(q_bb_profit_eur_with_dummy.profit) as profit
select q_bb_profit_eur_with_dummy.rep_month, q_bb_profit_eur_with_dummy.pc, q_bb_profit_eur_with_dummy.l_1, q_bb_profit_eur_with_dummy.l_2, q_bb_profit_eur_with_dummy.l_3, q_bb_profit_eur_with_dummy.l_4, q_bb_profit_eur_with_dummy.l_5, q_bb_profit_eur_with_dummy.l_6, q_bb_profit_eur_with_dummy.curr
from q_bb_profit_eur_with_dummy
group by q_bb_profit_eur_with_dummy.rep_month, q_bb_profit_eur_with_dummy.pc, q_bb_profit_eur_with_dummy.l_1, q_bb_profit_eur_with_dummy.l_2, q_bb_profit_eur_with_dummy.l_3, q_bb_profit_eur_with_dummy.l_4, q_bb_profit_eur_with_dummy.l_5, q_bb_profit_eur_with_dummy.l_6, q_bb_profit_eur_with_dummy.curr
order by q_bb_profit_eur_with_dummy.rep_month, q_bb_profit_eur_with_dummy.pc, q_bb_profit_eur_with_dummy.l_1, q_bb_profit_eur_with_dummy.l_2, q_bb_profit_eur_with_dummy.l_3, q_bb_profit_eur_with_dummy.l_4, q_bb_profit_eur_with_dummy.l_5, q_bb_profit_eur_with_dummy.l_6
pivot q_bb_profit_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_dist_try_with_dummy
transform sum(q_bb_profit_try_with_dummy.profit) as profit
select q_bb_profit_try_with_dummy.rep_month, q_bb_profit_try_with_dummy.pc, q_bb_profit_try_with_dummy.l_1, q_bb_profit_try_with_dummy.l_2, q_bb_profit_try_with_dummy.l_3, q_bb_profit_try_with_dummy.l_4, q_bb_profit_try_with_dummy.l_5, q_bb_profit_try_with_dummy.l_6, q_bb_profit_try_with_dummy.curr
from q_bb_profit_try_with_dummy
group by q_bb_profit_try_with_dummy.rep_month, q_bb_profit_try_with_dummy.pc, q_bb_profit_try_with_dummy.l_1, q_bb_profit_try_with_dummy.l_2, q_bb_profit_try_with_dummy.l_3, q_bb_profit_try_with_dummy.l_4, q_bb_profit_try_with_dummy.l_5, q_bb_profit_try_with_dummy.l_6, q_bb_profit_try_with_dummy.curr
order by q_bb_profit_try_with_dummy.rep_month, q_bb_profit_try_with_dummy.pc, q_bb_profit_try_with_dummy.l_1, q_bb_profit_try_with_dummy.l_2, q_bb_profit_try_with_dummy.l_3, q_bb_profit_try_with_dummy.l_4, q_bb_profit_try_with_dummy.l_5, q_bb_profit_try_with_dummy.l_6
pivot q_bb_profit_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_dist_usd_with_dummy
transform sum(q_bb_profit_usd_with_dummy.profit) as profit
select q_bb_profit_usd_with_dummy.rep_month, q_bb_profit_usd_with_dummy.pc, q_bb_profit_usd_with_dummy.l_1, q_bb_profit_usd_with_dummy.l_2, q_bb_profit_usd_with_dummy.l_3, q_bb_profit_usd_with_dummy.l_4, q_bb_profit_usd_with_dummy.l_5, q_bb_profit_usd_with_dummy.l_6, q_bb_profit_usd_with_dummy.curr
from q_bb_profit_usd_with_dummy
group by q_bb_profit_usd_with_dummy.rep_month, q_bb_profit_usd_with_dummy.pc, q_bb_profit_usd_with_dummy.l_1, q_bb_profit_usd_with_dummy.l_2, q_bb_profit_usd_with_dummy.l_3, q_bb_profit_usd_with_dummy.l_4, q_bb_profit_usd_with_dummy.l_5, q_bb_profit_usd_with_dummy.l_6, q_bb_profit_usd_with_dummy.curr
order by q_bb_profit_usd_with_dummy.rep_month, q_bb_profit_usd_with_dummy.pc, q_bb_profit_usd_with_dummy.l_1, q_bb_profit_usd_with_dummy.l_2, q_bb_profit_usd_with_dummy.l_3, q_bb_profit_usd_with_dummy.l_4, q_bb_profit_usd_with_dummy.l_5, q_bb_profit_usd_with_dummy.l_6
pivot q_bb_profit_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_dist_with_dummy
transform sum(q_bb_profit_with_dummy.profit) as sumofprofit
select q_bb_profit_with_dummy.rep_month, q_bb_profit_with_dummy.pc, q_bb_profit_with_dummy.l_1, q_bb_profit_with_dummy.l_2, q_bb_profit_with_dummy.l_3, q_bb_profit_with_dummy.l_4, q_bb_profit_with_dummy.l_5, q_bb_profit_with_dummy.l_6, q_bb_profit_with_dummy.curr
from q_bb_profit_with_dummy
group by q_bb_profit_with_dummy.rep_month, q_bb_profit_with_dummy.pc, q_bb_profit_with_dummy.l_1, q_bb_profit_with_dummy.l_2, q_bb_profit_with_dummy.l_3, q_bb_profit_with_dummy.l_4, q_bb_profit_with_dummy.l_5, q_bb_profit_with_dummy.l_6, q_bb_profit_with_dummy.curr
order by q_bb_profit_with_dummy.rep_month, q_bb_profit_with_dummy.pc, q_bb_profit_with_dummy.l_1, q_bb_profit_with_dummy.l_2, q_bb_profit_with_dummy.l_3, q_bb_profit_with_dummy.l_4, q_bb_profit_with_dummy.l_5, q_bb_profit_with_dummy.l_6, q_bb_profit_with_dummy.month
pivot q_bb_profit_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_eur
select t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6, t_bb_profit_total_st.month, "eur" as [currency], iif([t_bb_profit_total_st].[currency]="usd",[t_bb_profit_total_st].[income]*[r_usd_eur],iif([t_bb_profit_total_st].[currency]="try",[t_bb_profit_total_st].[income]*[r_try_eur],[t_bb_profit_total_st].[income])) as income, iif([t_bb_profit_total_st].[currency]="usd",[t_bb_profit_total_st].[expense]*[r_usd_eur],iif([t_bb_profit_total_st].[currency]="try",[t_bb_profit_total_st].[expense]*[r_try_eur],[t_bb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_bb_profit_total_st.key_r_pc_l6
from t_bb_profit_total_st left join mon_curr_rates on (t_bb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_bb_profit_total_st.month = mon_curr_rates.month)
order by t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_profit_eur_mt
select q_bb_profit_eur.rep_month, q_bb_profit_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_eur.month, q_bb_profit_eur.expense, q_bb_profit_eur.income, q_bb_profit_eur.currency, q_bb_profit_eur.l_1, q_bb_profit_eur.l_2, q_bb_profit_eur.l_3, q_bb_profit_eur.l_4, q_bb_profit_eur.l_5, q_bb_profit_eur.l_6, q_bb_profit_eur.profit, c6_code.desc_tr_l6, q_bb_profit_eur.key_r_pc_l6 into t_bb_profit_eur_st
from ((q_bb_profit_eur left join c3_code on (q_bb_profit_eur.l_3 = c3_code.c_l3) and (q_bb_profit_eur.l_2 = c3_code.c_l2) and (q_bb_profit_eur.l_1 = c3_code.c_l1)) left join c2_code on (q_bb_profit_eur.l_2 = c2_code.c_l2) and (q_bb_profit_eur.l_1 = c2_code.c_l1)) left join c6_code on (q_bb_profit_eur.l_6 = c6_code.c_l6) and (q_bb_profit_eur.l_5 = c6_code.c_l5) and (q_bb_profit_eur.l_4 = c6_code.c_l4) and (q_bb_profit_eur.l_3 = c6_code.c_l3) and (q_bb_profit_eur.l_2 = c6_code.c_l2) and (q_bb_profit_eur.l_1 = c6_code.c_l1)
group by q_bb_profit_eur.rep_month, q_bb_profit_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_eur.month, q_bb_profit_eur.expense, q_bb_profit_eur.income, q_bb_profit_eur.currency, q_bb_profit_eur.l_1, q_bb_profit_eur.l_2, q_bb_profit_eur.l_3, q_bb_profit_eur.l_4, q_bb_profit_eur.l_5, q_bb_profit_eur.l_6, q_bb_profit_eur.profit, c6_code.desc_tr_l6, q_bb_profit_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_profit_eur_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_bb_profit_eur

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_profit_total_mt
select q_bb_profit.rep_month, q_bb_profit.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit.month, q_bb_profit.expense, q_bb_profit.income, q_bb_profit.currency, q_bb_profit.l_1, q_bb_profit.l_2, q_bb_profit.l_3, q_bb_profit.l_4, q_bb_profit.l_5, q_bb_profit.l_6, q_bb_profit.profit, c6_code.desc_tr_l6, q_bb_profit.key_r_pc_l6 into t_bb_profit_total_st
from ((q_bb_profit left join c3_code on (q_bb_profit.l_3 = c3_code.c_l3) and (q_bb_profit.l_2 = c3_code.c_l2) and (q_bb_profit.l_1 = c3_code.c_l1)) left join c2_code on (q_bb_profit.l_2 = c2_code.c_l2) and (q_bb_profit.l_1 = c2_code.c_l1)) left join c6_code on (q_bb_profit.l_6 = c6_code.c_l6) and (q_bb_profit.l_5 = c6_code.c_l5) and (q_bb_profit.l_4 = c6_code.c_l4) and (q_bb_profit.l_3 = c6_code.c_l3) and (q_bb_profit.l_2 = c6_code.c_l2) and (q_bb_profit.l_1 = c6_code.c_l1)
group by q_bb_profit.rep_month, q_bb_profit.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit.month, q_bb_profit.expense, q_bb_profit.income, q_bb_profit.currency, q_bb_profit.l_1, q_bb_profit.l_2, q_bb_profit.l_3, q_bb_profit.l_4, q_bb_profit.l_5, q_bb_profit.l_6, q_bb_profit.profit, c6_code.desc_tr_l6, q_bb_profit.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_profit_try
select t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6, t_bb_profit_total_st.month, "try" as [currency], iif([t_bb_profit_total_st].[currency]="usd",[t_bb_profit_total_st].[income]*[r_usd_try],iif([t_bb_profit_total_st].[currency]="eur",[t_bb_profit_total_st].[income]*[r_eur_try],[t_bb_profit_total_st].[income])) as income, iif([t_bb_profit_total_st].[currency]="usd",[t_bb_profit_total_st].[expense]*[r_usd_try],iif([t_bb_profit_total_st].[currency]="eur",[t_bb_profit_total_st].[expense]*[r_eur_try],[t_bb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_bb_profit_total_st.key_r_pc_l6
from t_bb_profit_total_st left join mon_curr_rates on (t_bb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_bb_profit_total_st.month = mon_curr_rates.month)
order by t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_profit_try_mt
select q_bb_profit_try.rep_month, q_bb_profit_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_try.month, q_bb_profit_try.expense, q_bb_profit_try.income, q_bb_profit_try.currency, q_bb_profit_try.l_1, q_bb_profit_try.l_2, q_bb_profit_try.l_3, q_bb_profit_try.l_4, q_bb_profit_try.l_5, q_bb_profit_try.l_6, q_bb_profit_try.profit, c6_code.desc_tr_l6, q_bb_profit_try.key_r_pc_l6 into t_bb_profit_try_st
from ((q_bb_profit_try left join c3_code on (q_bb_profit_try.l_3 = c3_code.c_l3) and (q_bb_profit_try.l_2 = c3_code.c_l2) and (q_bb_profit_try.l_1 = c3_code.c_l1)) left join c2_code on (q_bb_profit_try.l_2 = c2_code.c_l2) and (q_bb_profit_try.l_1 = c2_code.c_l1)) left join c6_code on (q_bb_profit_try.l_6 = c6_code.c_l6) and (q_bb_profit_try.l_5 = c6_code.c_l5) and (q_bb_profit_try.l_4 = c6_code.c_l4) and (q_bb_profit_try.l_3 = c6_code.c_l3) and (q_bb_profit_try.l_2 = c6_code.c_l2) and (q_bb_profit_try.l_1 = c6_code.c_l1)
group by q_bb_profit_try.rep_month, q_bb_profit_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_try.month, q_bb_profit_try.expense, q_bb_profit_try.income, q_bb_profit_try.currency, q_bb_profit_try.l_1, q_bb_profit_try.l_2, q_bb_profit_try.l_3, q_bb_profit_try.l_4, q_bb_profit_try.l_5, q_bb_profit_try.l_6, q_bb_profit_try.profit, c6_code.desc_tr_l6, q_bb_profit_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_profit_try_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_bb_profit_try

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_profit_usd
select t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6, t_bb_profit_total_st.month, "usd" as [currency], iif([t_bb_profit_total_st].[currency]="eur",[t_bb_profit_total_st].[income]*[r_eur_usd],iif([t_bb_profit_total_st].[currency]="try",[t_bb_profit_total_st].[income]*[r_try_usd],[t_bb_profit_total_st].[income])) as income, iif([t_bb_profit_total_st].[currency]="eur",[t_bb_profit_total_st].[expense]*[r_eur_usd],iif([t_bb_profit_total_st].[currency]="try",[t_bb_profit_total_st].[expense]*[r_try_usd],[t_bb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_bb_profit_total_st.key_r_pc_l6
from t_bb_profit_total_st left join mon_curr_rates on (t_bb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_bb_profit_total_st.month = mon_curr_rates.month)
order by t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_profit_usd_mt
select q_bb_profit_usd.rep_month, q_bb_profit_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_usd.month, q_bb_profit_usd.expense, q_bb_profit_usd.income, q_bb_profit_usd.currency, q_bb_profit_usd.l_1, q_bb_profit_usd.l_2, q_bb_profit_usd.l_3, q_bb_profit_usd.l_4, q_bb_profit_usd.l_5, q_bb_profit_usd.l_6, q_bb_profit_usd.profit, c6_code.desc_tr_l6, q_bb_profit_usd.key_r_pc_l6 into t_bb_profit_usd_st
from ((q_bb_profit_usd left join c3_code on (q_bb_profit_usd.l_3 = c3_code.c_l3) and (q_bb_profit_usd.l_2 = c3_code.c_l2) and (q_bb_profit_usd.l_1 = c3_code.c_l1)) left join c2_code on (q_bb_profit_usd.l_2 = c2_code.c_l2) and (q_bb_profit_usd.l_1 = c2_code.c_l1)) left join c6_code on (q_bb_profit_usd.l_6 = c6_code.c_l6) and (q_bb_profit_usd.l_5 = c6_code.c_l5) and (q_bb_profit_usd.l_4 = c6_code.c_l4) and (q_bb_profit_usd.l_3 = c6_code.c_l3) and (q_bb_profit_usd.l_2 = c6_code.c_l2) and (q_bb_profit_usd.l_1 = c6_code.c_l1)
group by q_bb_profit_usd.rep_month, q_bb_profit_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_usd.month, q_bb_profit_usd.expense, q_bb_profit_usd.income, q_bb_profit_usd.currency, q_bb_profit_usd.l_1, q_bb_profit_usd.l_2, q_bb_profit_usd.l_3, q_bb_profit_usd.l_4, q_bb_profit_usd.l_5, q_bb_profit_usd.l_6, q_bb_profit_usd.profit, c6_code.desc_tr_l6, q_bb_profit_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_profit_usd_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_bb_profit_usd

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_profit_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency as curr,
month,
profit

from 
q_bb_profit

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr as curr,
g_month as month,
total_expense as profit

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_project_months
select t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_001_projects.r03_s_name as name
from t_bb_profit_total_st left join t_001_projects on t_bb_profit_total_st.pc = t_001_projects.p_code
group by t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_001_projects.r03_s_name
order by t_bb_profit_total_st.rep_month desc;

----------------------------------------------------------------------------------------------------
q_bb_qty_activem_works
select t_bb_qty.key_r_pc_l6, t_bb_qty.exp_base_mon
from t_bb_qty left join t_rep_month on t_bb_qty.rep_month = t_rep_month.rep_month
where (((t_bb_qty.exp_base_mon)>t_rep_month.rep_month_date) and ((t_bb_qty.exp_base_qty)<>0))
order by t_bb_qty.key_r_pc_l6, t_bb_qty.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_qty_activem_works_monthly
select t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.exp_base_mon
from t_bb_qty left join t_rep_month on t_bb_qty.rep_month = t_rep_month.rep_month
where (((t_bb_qty.exp_base_mon)>t_rep_month.rep_month_date) and ((t_bb_qty.exp_base_qty)<>0))
group by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.exp_base_mon
order by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_qty_crosstab
transform sum(t_bb_qty.exp_base_qty) as sumofexp_base_qty
select t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6
from t_bb_qty
group by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6
order by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6
pivot t_bb_qty.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_qty_dummy_full
select t_rep_month.rep_month, q_budget_project_months.pc as p_code, t_bb_exp_dummy_part.l_1, t_bb_exp_dummy_part.l_2, t_bb_exp_dummy_part.l_3, t_bb_exp_dummy_part.l_4, t_bb_exp_dummy_part.l_5, t_bb_exp_dummy_part.l_6, t_months.g_month, t_bb_exp_dummy_part.total_expense, t_bb_exp_dummy_part.up_curr, [q_budget_project_months].[rep_month]+'.'+[pc]+'.'+[l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6] as key_r_pc_l6
from t_months, t_bb_exp_dummy_part, t_rep_month inner join q_budget_project_months on t_rep_month.rep_month = q_budget_project_months.rep_month
group by t_rep_month.rep_month, q_budget_project_months.pc, t_bb_exp_dummy_part.l_1, t_bb_exp_dummy_part.l_2, t_bb_exp_dummy_part.l_3, t_bb_exp_dummy_part.l_4, t_bb_exp_dummy_part.l_5, t_bb_exp_dummy_part.l_6, t_months.g_month, t_bb_exp_dummy_part.total_expense, t_bb_exp_dummy_part.up_curr, [q_budget_project_months].[rep_month]+'.'+[pc]+'.'+[l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6];

----------------------------------------------------------------------------------------------------
q_bb_res_up_market_coeff
select q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.rs_l1 as r_1_code, q_bb_up_pre_coeff_activem_indexes.rs_l2 as r_2_code, q_bb_up_pre_coeff_activem_indexes.rs_l3 as r_3_code, q_bb_up_pre_coeff_activem_indexes.rs_l4 as r_4_code, (1+[w_ufe]*[r_ufe])*(1+[w_tufe]*[r_tufe])*(1+[w_inf_usd]*[r_inf_usd])*(1+[w_inf_eur]*[r_inf_eur])*(1+[w_metal]*[r_metal])*(1+[w_petrol]*[r_petrol])*(1+[w_cement]*[r_cement])*(1+[w_electricity]*[r_electricity]) as up_cost_coeff, q_bb_up_pre_coeff_activem_indexes.exp_base_mon as g_month, q_bb_up_pre_coeff_activem_indexes.up_cost, q_bb_up_pre_coeff_activem_indexes.an_rs_quantity, r4_code.currency, q_bb_up_pre_coeff_activem_indexes.key_r4_simple, q_bb_up_pre_coeff_activem_indexes.key_r4, q_bb_up_pre_coeff_activem_indexes.key_r_pc_l6, q_bb_up_pre_coeff_activem_indexes.key_full, [key_full] & "." & [q_bb_up_pre_coeff_activem_indexes].[rs_currency] & "." & [q_bb_up_pre_coeff_activem_indexes].[exp_base_mon] as key_full_comb
from q_bb_up_pre_coeff_activem_indexes left join r4_code on q_bb_up_pre_coeff_activem_indexes.key_r4_simple = r4_code.key_r4_simple
group by q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.rs_l1, q_bb_up_pre_coeff_activem_indexes.rs_l2, q_bb_up_pre_coeff_activem_indexes.rs_l3, q_bb_up_pre_coeff_activem_indexes.rs_l4, (1+[w_ufe]*[r_ufe])*(1+[w_tufe]*[r_tufe])*(1+[w_inf_usd]*[r_inf_usd])*(1+[w_inf_eur]*[r_inf_eur])*(1+[w_metal]*[r_metal])*(1+[w_petrol]*[r_petrol])*(1+[w_cement]*[r_cement])*(1+[w_electricity]*[r_electricity]), q_bb_up_pre_coeff_activem_indexes.exp_base_mon, q_bb_up_pre_coeff_activem_indexes.up_cost, q_bb_up_pre_coeff_activem_indexes.an_rs_quantity, r4_code.currency, q_bb_up_pre_coeff_activem_indexes.key_r4_simple, q_bb_up_pre_coeff_activem_indexes.key_r4, q_bb_up_pre_coeff_activem_indexes.key_r_pc_l6, q_bb_up_pre_coeff_activem_indexes.key_full, [key_full] & "." & [q_bb_up_pre_coeff_activem_indexes].[rs_currency] & "." & [q_bb_up_pre_coeff_activem_indexes].[exp_base_mon]
order by q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.rs_l1, q_bb_up_pre_coeff_activem_indexes.rs_l2, q_bb_up_pre_coeff_activem_indexes.rs_l3, q_bb_up_pre_coeff_activem_indexes.rs_l4, q_bb_up_pre_coeff_activem_indexes.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_unit_price
select q_bb_up_coeff.rep_month, q_bb_up_coeff.up_pr_code as p01_code, q_bb_up_coeff.l_1, q_bb_up_coeff.l_2, q_bb_up_coeff.l_3, q_bb_up_coeff.l_4, q_bb_up_coeff.l_5, q_bb_up_coeff.l_6, q_bb_up_coeff.g_month as [month], q_bb_up_coeff.g_month, q_bb_up_coeff.rs_currency as up_curr, sum([up_cost]*[an_rs_quantity]*[up_cost_coeff_all]) as unit_price_planned_coeff, q_bb_up_coeff.key_r_pc_l6
from q_bb_up_coeff
group by q_bb_up_coeff.rep_month, q_bb_up_coeff.up_pr_code, q_bb_up_coeff.l_1, q_bb_up_coeff.l_2, q_bb_up_coeff.l_3, q_bb_up_coeff.l_4, q_bb_up_coeff.l_5, q_bb_up_coeff.l_6, q_bb_up_coeff.g_month, q_bb_up_coeff.rs_currency, q_bb_up_coeff.key_r_pc_l6, q_bb_up_coeff.g_month
order by q_bb_up_coeff.rep_month, q_bb_up_coeff.up_pr_code, q_bb_up_coeff.l_1, q_bb_up_coeff.l_2, q_bb_up_coeff.l_3, q_bb_up_coeff.l_4, q_bb_up_coeff.l_5, q_bb_up_coeff.l_6, q_bb_up_coeff.g_month, q_bb_up_coeff.g_month;

----------------------------------------------------------------------------------------------------
q_bb_unit_price_crosstab
transform sum(q_bb_unit_price.unit_price_planned_coeff) as sumofunit_price_planned_coeff
select q_bb_unit_price.rep_month, q_bb_unit_price.l_1, q_bb_unit_price.l_2, q_bb_unit_price.l_3, q_bb_unit_price.l_4, q_bb_unit_price.l_5, q_bb_unit_price.l_6, q_bb_unit_price.up_curr, q_bb_unit_price.p01_code
from q_bb_unit_price
group by q_bb_unit_price.rep_month, q_bb_unit_price.l_1, q_bb_unit_price.l_2, q_bb_unit_price.l_3, q_bb_unit_price.l_4, q_bb_unit_price.l_5, q_bb_unit_price.l_6, q_bb_unit_price.up_curr, q_bb_unit_price.p01_code
pivot q_bb_unit_price.month;

----------------------------------------------------------------------------------------------------
q_bb_up_check
select q_bb_exp.rep_month, q_bb_exp.pc, q_bb_exp.l_1, q_bb_exp.l_2, q_bb_exp.l_3, q_bb_exp.l_4, q_bb_exp.l_5, q_bb_exp.l_6, q_bb_exp.up_curr, sum(q_bb_exp.total_expense) as [total expense], sum(q_bb_qty.exp_base_qty) as quantity, c6_code.unit, q_bb_work_up_without_coeff.unit_price_planned as up_without_coeff, [total expense]/[quantity] as up_average_with_coeff, [up_average_with_coeff]/[up_without_coeff] as up_average_coeff
from ((q_bb_exp left join q_bb_qty on (q_bb_exp.l_6 = q_bb_qty.l_6) and (q_bb_exp.l_5 = q_bb_qty.l_5) and (q_bb_exp.l_4 = q_bb_qty.l_4) and (q_bb_exp.l_3 = q_bb_qty.l_3) and (q_bb_exp.l_2 = q_bb_qty.l_2) and (q_bb_exp.l_1 = q_bb_qty.l_1) and (q_bb_exp.pc = q_bb_qty.pc) and (q_bb_exp.rep_month = q_bb_qty.rep_month)) left join q_bb_work_up_without_coeff on (q_bb_exp.l_6 = q_bb_work_up_without_coeff.l_6) and (q_bb_exp.l_5 = q_bb_work_up_without_coeff.l_5) and (q_bb_exp.l_4 = q_bb_work_up_without_coeff.l_4) and (q_bb_exp.l_3 = q_bb_work_up_without_coeff.l_3) and (q_bb_exp.l_2 = q_bb_work_up_without_coeff.l_2) and (q_bb_exp.l_1 = q_bb_work_up_without_coeff.l_1) and (q_bb_exp.pc = q_bb_work_up_without_coeff.pc) and (q_bb_exp.rep_month = q_bb_work_up_without_coeff.rep_month)) left join c6_code on (q_bb_exp.l_6 = c6_code.[c_l6]) and (q_bb_exp.l_5 = c6_code.[c_l5]) and (q_bb_exp.l_4 = c6_code.[c_l4]) and (q_bb_exp.l_3 = c6_code.[c_l3]) and (q_bb_exp.l_2 = c6_code.[c_l2]) and (q_bb_exp.l_1 = c6_code.[c_l1])
group by q_bb_exp.rep_month, q_bb_exp.pc, q_bb_exp.l_1, q_bb_exp.l_2, q_bb_exp.l_3, q_bb_exp.l_4, q_bb_exp.l_5, q_bb_exp.l_6, q_bb_exp.up_curr, c6_code.unit, q_bb_work_up_without_coeff.unit_price_planned;

----------------------------------------------------------------------------------------------------
q_bb_up_coeff
select q_bb_res_up_market_coeff.rep_month, q_bb_res_up_market_coeff.pc as up_pr_code, q_bb_res_up_market_coeff.l_1, q_bb_res_up_market_coeff.l_2, q_bb_res_up_market_coeff.l_3, q_bb_res_up_market_coeff.l_4, q_bb_res_up_market_coeff.l_5, q_bb_res_up_market_coeff.l_6, q_bb_res_up_market_coeff.r_1_code as up_rs_l1, q_bb_res_up_market_coeff.r_2_code as up_rs_l2, q_bb_res_up_market_coeff.r_3_code as up_rs_l3, q_bb_res_up_market_coeff.r_4_code as up_rs_l4, q_bb_res_up_market_coeff.g_month, q_bb_res_up_market_coeff.up_cost_coeff, q_bb_curr_escalation_rates.k_usd, q_bb_curr_escalation_rates.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6) as up_cost_coeff_all, q_bb_res_up_market_coeff.up_cost, q_bb_res_up_market_coeff.currency as rs_currency, q_bb_res_up_market_coeff.key_full, q_bb_res_up_market_coeff.an_rs_quantity, q_bb_res_up_market_coeff.key_r_pc_l6
from q_bb_res_up_market_coeff left join q_bb_curr_escalation_rates on q_bb_res_up_market_coeff.key_full_comb = q_bb_curr_escalation_rates.key_full_comb
group by q_bb_res_up_market_coeff.rep_month, q_bb_res_up_market_coeff.pc, q_bb_res_up_market_coeff.l_1, q_bb_res_up_market_coeff.l_2, q_bb_res_up_market_coeff.l_3, q_bb_res_up_market_coeff.l_4, q_bb_res_up_market_coeff.l_5, q_bb_res_up_market_coeff.l_6, q_bb_res_up_market_coeff.r_1_code, q_bb_res_up_market_coeff.r_2_code, q_bb_res_up_market_coeff.r_3_code, q_bb_res_up_market_coeff.r_4_code, q_bb_res_up_market_coeff.g_month, q_bb_res_up_market_coeff.up_cost_coeff, q_bb_curr_escalation_rates.k_usd, q_bb_curr_escalation_rates.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6), q_bb_res_up_market_coeff.up_cost, q_bb_res_up_market_coeff.currency, q_bb_res_up_market_coeff.key_full, q_bb_res_up_market_coeff.an_rs_quantity, q_bb_res_up_market_coeff.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_up_comp
select t_bb_res_up_add.rep_month, t_bb_res_up_add.up_pr_code, t_bb_res_up_add.up_rs_l1, t_bb_res_up_add.up_rs_l2, t_bb_res_up_add.up_rs_l3, t_bb_res_up_add.up_rs_l4, t_bb_res_up_add.up_date, t_bb_res_up_add.up_cost, t_bb_res_up_add.up_curr
from t_bb_res_up_add left join t_bb_res_up on (t_bb_res_up_add.rep_month = t_bb_res_up.rep_month) and (t_bb_res_up_add.up_pr_code = t_bb_res_up.up_pr_code) and (t_bb_res_up_add.up_rs_l1 = t_bb_res_up.up_rs_l1) and (t_bb_res_up_add.up_rs_l2 = t_bb_res_up.up_rs_l2) and (t_bb_res_up_add.up_rs_l3 = t_bb_res_up.up_rs_l3) and (t_bb_res_up_add.up_rs_l4 = t_bb_res_up.up_rs_l4) and (t_bb_res_up_add.up_date = t_bb_res_up.up_date) and (t_bb_res_up_add.up_cost = t_bb_res_up.up_cost) and (t_bb_res_up_add.up_curr = t_bb_res_up.up_curr)
where (((t_bb_res_up.up_pr_code) is null))
order by t_bb_res_up_add.rep_month, t_bb_res_up_add.up_pr_code, t_bb_res_up_add.up_rs_l1, t_bb_res_up_add.up_rs_l2, t_bb_res_up_add.up_rs_l3, t_bb_res_up_add.up_rs_l4, t_bb_res_up_add.up_date, t_bb_res_up_add.up_cost, t_bb_res_up_add.up_curr;

----------------------------------------------------------------------------------------------------
q_bb_up_pre_coeff_activem_indexes
select q_bb_analysis_activem_with_prices.rep_month, q_bb_analysis_activem_with_prices.pc, q_bb_analysis_activem_with_prices.l_1, q_bb_analysis_activem_with_prices.l_2, q_bb_analysis_activem_with_prices.l_3, q_bb_analysis_activem_with_prices.l_4, q_bb_analysis_activem_with_prices.l_5, q_bb_analysis_activem_with_prices.l_6, q_bb_analysis_activem_with_prices.exp_base_mon, q_bb_analysis_activem_with_prices.rs_l1, q_bb_analysis_activem_with_prices.rs_l2, q_bb_analysis_activem_with_prices.rs_l3, q_bb_analysis_activem_with_prices.rs_l4, t_bb_indexes.r_ufe, t_bb_indexes.r_tufe, t_bb_indexes.r_inf_usd, t_bb_indexes.r_inf_eur, t_bb_indexes.r_metal, t_bb_indexes.r_petrol, t_bb_indexes.r_cement, t_bb_indexes.r_electricity, q_bb_analysis_activem_with_prices.currency as rs_currency, q_bb_analysis_activem_with_prices.an_rs_quantity, q_bb_analysis_activem_with_prices.up_cost, q_bb_analysis_activem_with_prices.key_r4_simple, q_bb_analysis_activem_with_prices.key_r4, q_bb_analysis_activem_with_prices.key_r_pc_l6, q_bb_analysis_activem_with_prices.key_full
from q_bb_analysis_activem_with_prices left join t_bb_indexes on (q_bb_analysis_activem_with_prices.pc = t_bb_indexes.p_code) and (q_bb_analysis_activem_with_prices.rep_month = t_bb_indexes.rep_month) and (q_bb_analysis_activem_with_prices.exp_base_mon = t_bb_indexes.g_month);

----------------------------------------------------------------------------------------------------
q_bb_up_with_curr_coeff_crosstab
transform sum(q_bb_work_up_with_curr_coeff.up) as sumofup
select q_bb_work_up_with_curr_coeff.rep_month, q_bb_work_up_with_curr_coeff.pc, q_bb_work_up_with_curr_coeff.l_1, q_bb_work_up_with_curr_coeff.l_2, q_bb_work_up_with_curr_coeff.l_3, q_bb_work_up_with_curr_coeff.l_4, q_bb_work_up_with_curr_coeff.l_5, q_bb_work_up_with_curr_coeff.l_6, q_bb_work_up_with_curr_coeff.rs_currency
from q_bb_work_up_with_curr_coeff
group by q_bb_work_up_with_curr_coeff.rep_month, q_bb_work_up_with_curr_coeff.pc, q_bb_work_up_with_curr_coeff.l_1, q_bb_work_up_with_curr_coeff.l_2, q_bb_work_up_with_curr_coeff.l_3, q_bb_work_up_with_curr_coeff.l_4, q_bb_work_up_with_curr_coeff.l_5, q_bb_work_up_with_curr_coeff.l_6, q_bb_work_up_with_curr_coeff.rs_currency
order by q_bb_work_up_with_curr_coeff.rep_month, q_bb_work_up_with_curr_coeff.pc, q_bb_work_up_with_curr_coeff.l_1, q_bb_work_up_with_curr_coeff.l_2, q_bb_work_up_with_curr_coeff.l_3, q_bb_work_up_with_curr_coeff.l_4, q_bb_work_up_with_curr_coeff.l_5, q_bb_work_up_with_curr_coeff.l_6, q_bb_work_up_with_curr_coeff.month
pivot q_bb_work_up_with_curr_coeff.month;

----------------------------------------------------------------------------------------------------
q_bb_up_with_market_coeff_crosstab
transform sum(q_bb_work_up_with_market_coeff.up_with_coeff) as sumofup_with_coeff
select q_bb_work_up_with_market_coeff.rep_month, q_bb_work_up_with_market_coeff.pc, q_bb_work_up_with_market_coeff.l_1, q_bb_work_up_with_market_coeff.l_2, q_bb_work_up_with_market_coeff.l_3, q_bb_work_up_with_market_coeff.l_4, q_bb_work_up_with_market_coeff.l_5, q_bb_work_up_with_market_coeff.l_6, q_bb_work_up_with_market_coeff.currency
from q_bb_work_up_with_market_coeff
group by q_bb_work_up_with_market_coeff.rep_month, q_bb_work_up_with_market_coeff.pc, q_bb_work_up_with_market_coeff.l_1, q_bb_work_up_with_market_coeff.l_2, q_bb_work_up_with_market_coeff.l_3, q_bb_work_up_with_market_coeff.l_4, q_bb_work_up_with_market_coeff.l_5, q_bb_work_up_with_market_coeff.l_6, q_bb_work_up_with_market_coeff.currency
pivot q_bb_work_up_with_market_coeff.g_month;

----------------------------------------------------------------------------------------------------
q_bb_up_without_coeff_crosstab
transform sum(q_bb_work_up_without_coeff.unit_price_planned) as sumofunit_price_planned
select q_bb_work_up_without_coeff.rep_month, q_bb_work_up_without_coeff.pc, q_bb_work_up_without_coeff.l_1, q_bb_work_up_without_coeff.l_2, q_bb_work_up_without_coeff.l_3, q_bb_work_up_without_coeff.l_4, q_bb_work_up_without_coeff.l_5, q_bb_work_up_without_coeff.l_6, q_bb_work_up_without_coeff.rs_currency
from q_bb_work_up_without_coeff
group by q_bb_work_up_without_coeff.rep_month, q_bb_work_up_without_coeff.pc, q_bb_work_up_without_coeff.l_1, q_bb_work_up_without_coeff.l_2, q_bb_work_up_without_coeff.l_3, q_bb_work_up_without_coeff.l_4, q_bb_work_up_without_coeff.l_5, q_bb_work_up_without_coeff.l_6, q_bb_work_up_without_coeff.rs_currency
pivot q_bb_work_up_without_coeff.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_work_up_with_curr_coeff
select q_bb_analysis_activem_with_prices.rep_month, q_bb_analysis_activem_with_prices.pc, q_bb_analysis_activem_with_prices.l_1, q_bb_analysis_activem_with_prices.l_2, q_bb_analysis_activem_with_prices.l_3, q_bb_analysis_activem_with_prices.l_4, q_bb_analysis_activem_with_prices.l_5, q_bb_analysis_activem_with_prices.l_6, q_bb_analysis_activem_with_prices.exp_base_mon as [month], sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]) as up, q_bb_curr_escalation_rates.rs_currency
from q_bb_analysis_activem_with_prices left join q_bb_curr_escalation_rates on (q_bb_analysis_activem_with_prices.rep_month = q_bb_curr_escalation_rates.rep_month) and (q_bb_analysis_activem_with_prices.pc = q_bb_curr_escalation_rates.pc) and (q_bb_analysis_activem_with_prices.l_1 = q_bb_curr_escalation_rates.l_1) and (q_bb_analysis_activem_with_prices.l_2 = q_bb_curr_escalation_rates.l_2) and (q_bb_analysis_activem_with_prices.l_3 = q_bb_curr_escalation_rates.l_3) and (q_bb_analysis_activem_with_prices.l_4 = q_bb_curr_escalation_rates.l_4) and (q_bb_analysis_activem_with_prices.l_5 = q_bb_curr_escalation_rates.l_5) and (q_bb_analysis_activem_with_prices.l_6 = q_bb_curr_escalation_rates.l_6) and (q_bb_analysis_activem_with_prices.rs_l1 = q_bb_curr_escalation_rates.rs_l1) and (q_bb_analysis_activem_with_prices.rs_l2 = q_bb_curr_escalation_rates.rs_l2) and (q_bb_analysis_activem_with_prices.rs_l3 = q_bb_curr_escalation_rates.rs_l3) and (q_bb_analysis_activem_with_prices.rs_l4 = q_bb_curr_escalation_rates.rs_l4) and (q_bb_analysis_activem_with_prices.currency = q_bb_curr_escalation_rates.rs_currency) and (q_bb_analysis_activem_with_prices.exp_base_mon = q_bb_curr_escalation_rates.month)
group by q_bb_analysis_activem_with_prices.rep_month, q_bb_analysis_activem_with_prices.pc, q_bb_analysis_activem_with_prices.l_1, q_bb_analysis_activem_with_prices.l_2, q_bb_analysis_activem_with_prices.l_3, q_bb_analysis_activem_with_prices.l_4, q_bb_analysis_activem_with_prices.l_5, q_bb_analysis_activem_with_prices.l_6, q_bb_analysis_activem_with_prices.exp_base_mon, q_bb_curr_escalation_rates.rs_currency
order by q_bb_analysis_activem_with_prices.rep_month, q_bb_analysis_activem_with_prices.pc, q_bb_analysis_activem_with_prices.l_1, q_bb_analysis_activem_with_prices.l_2, q_bb_analysis_activem_with_prices.l_3, q_bb_analysis_activem_with_prices.l_4, q_bb_analysis_activem_with_prices.l_5, q_bb_analysis_activem_with_prices.l_6, q_bb_analysis_activem_with_prices.exp_base_mon, sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]);

----------------------------------------------------------------------------------------------------
q_bb_work_up_with_market_coeff
select q_bb_res_up_market_coeff.pc, q_bb_res_up_market_coeff.l_1, q_bb_res_up_market_coeff.l_2, q_bb_res_up_market_coeff.l_3, q_bb_res_up_market_coeff.l_4, q_bb_res_up_market_coeff.l_5, q_bb_res_up_market_coeff.l_6, q_bb_res_up_market_coeff.rep_month, q_bb_res_up_market_coeff.g_month, sum([an_rs_quantity]*[up_cost]*[up_cost_coeff]) as up_with_coeff, q_bb_res_up_market_coeff.currency
from q_bb_res_up_market_coeff
group by q_bb_res_up_market_coeff.pc, q_bb_res_up_market_coeff.l_1, q_bb_res_up_market_coeff.l_2, q_bb_res_up_market_coeff.l_3, q_bb_res_up_market_coeff.l_4, q_bb_res_up_market_coeff.l_5, q_bb_res_up_market_coeff.l_6, q_bb_res_up_market_coeff.rep_month, q_bb_res_up_market_coeff.g_month, q_bb_res_up_market_coeff.currency;

----------------------------------------------------------------------------------------------------
q_bb_work_up_without_coeff
select sum(([an_rs_quantity]*[up_cost])) as unit_price_planned, q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.exp_base_mon, q_bb_up_pre_coeff_activem_indexes.rs_currency
from q_bb_up_pre_coeff_activem_indexes
group by q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.exp_base_mon, q_bb_up_pre_coeff_activem_indexes.rs_currency;

----------------------------------------------------------------------------------------------------
q_budget_allprojects_detailed_report
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.pc, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5] as l5_comb, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6] as l_comb, q_cb_allprojects_report_data.desc_tr_l6, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem, t_001_projects.r03_s_name
from q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.pc, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5], [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6], q_cb_allprojects_report_data.desc_tr_l6, q_cb_allprojects_report_data.currency, t_001_projects.r03_s_name
having ((q_cb_allprojects_report_data.rep_month)=[reports]![r_cb_summary_lvl_5]![text200]) and q_cb_allprojects_report_data.[l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]='d.01.01.15.81' and ((q_cb_allprojects_report_data.pc)=[reports]![r_cb_summary_lvl_5]![text193]);

----------------------------------------------------------------------------------------------------
q_budget_allprojects_report
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.pc, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.desc_tr_l5, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from q_cb_allprojects_report_data
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.pc, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.desc_tr_l5, q_cb_allprojects_report_data.currency
having q_cb_allprojects_report_data.rep_month=[reports]![r_cb_summary_lvl_5]![text200] and q_cb_allprojects_report_data.pc=[reports]![r_cb_summary_lvl_5]![text193] and q_cb_allprojects_report_data.l_1=[reports]![r_cb_summary_lvl_5]![text61] and q_cb_allprojects_report_data.l_2=[reports]![r_cb_summary_lvl_5]![text110] and q_cb_allprojects_report_data.l_3=[reports]![r_cb_summary_lvl_5]![text111] and q_cb_allprojects_report_data.l_4=[reports]![r_cb_summary_lvl_5]![text194];

----------------------------------------------------------------------------------------------------
q_budget_comp_report
select q_cb_sum_projects_data.pc, q_cb_sum_projects_data.l_1, q_cb_sum_projects_data.l_2, q_cb_sum_projects_data.l_3, q_cb_sum_projects_data.desc_tr_l2, q_cb_sum_projects_data.desc_tr_l3, q_cb_sum_projects_data.up_curr, sum(q_cb_sum_projects_data.incomegt_first) as incomegt_first, sum(q_cb_sum_projects_data.expensegt_first) as expensegt_first, sum(q_cb_sum_projects_data.profitgt_first) as profitgt_first, sum(q_cb_sum_projects_data.incomegt_second) as incomegt_second, sum(q_cb_sum_projects_data.expensegt_second) as expensegt_second, sum(q_cb_sum_projects_data.profitgt_second) as profitgt_second, sum(q_cb_sum_projects_data.incomediffgt) as incomediffgt, sum(q_cb_sum_projects_data.expensediff_gt) as expensediff_gt, sum(q_cb_sum_projects_data.profitdiff_gt) as profitdiff_gt, sum(q_cb_sum_projects_data.incomert_first) as incomert_first, sum(q_cb_sum_projects_data.expensert_first) as expensert_first, sum(q_cb_sum_projects_data.profitrt_first) as profitrt_first, sum(q_cb_sum_projects_data.incomert_second) as incomert_second, sum(q_cb_sum_projects_data.expensert_second) as expensert_second, sum(q_cb_sum_projects_data.profitrt_second) as profitrt_second, sum(q_cb_sum_projects_data.incomediffrt) as incomediffrt, sum(q_cb_sum_projects_data.expensediff_rt) as expensediff_rt, sum(q_cb_sum_projects_data.profitdiff_rt) as profitdiff_rt, sum(q_cb_sum_projects_data.incomerem_first) as incomerem_first, sum(q_cb_sum_projects_data.expenserem_first) as expenserem_first, sum(q_cb_sum_projects_data.profitrem_first) as profitrem_first, sum(q_cb_sum_projects_data.incomerem_second) as incomerem_second, sum(q_cb_sum_projects_data.expenserem_second) as expenserem_second, sum(q_cb_sum_projects_data.profitrem_second) as profitrem_second, sum(q_cb_sum_projects_data.incomerem_diff) as incomerem_diff, sum(q_cb_sum_projects_data.expenserem_diff) as expenserem_diff, sum(q_cb_sum_projects_data.profitrem_diff) as profitrem_diff
from q_cb_sum_projects_data
group by q_cb_sum_projects_data.pc, q_cb_sum_projects_data.l_1, q_cb_sum_projects_data.l_2, q_cb_sum_projects_data.l_3, q_cb_sum_projects_data.desc_tr_l2, q_cb_sum_projects_data.desc_tr_l3, q_cb_sum_projects_data.up_curr;

----------------------------------------------------------------------------------------------------
q_budget_comp_report_detailed
select [l_1] + '.' + [l_2] + '.' + [l_3] + '.' + [l_4] + '.' + [l_5] + '.' + [l_6] as l6_comb, q_cb_sum_projects_data.pc, q_cb_sum_projects_data.desc_tr_l6, q_cb_sum_projects_data.up_curr, sum(q_cb_sum_projects_data.incomegt_first) as incomegt_first, sum(q_cb_sum_projects_data.expensegt_first) as expensegt_first, sum(q_cb_sum_projects_data.profitgt_first) as profitgt_first, sum(q_cb_sum_projects_data.incomegt_second) as incomegt_second, sum(q_cb_sum_projects_data.expensegt_second) as expensegt_second, sum(q_cb_sum_projects_data.profitgt_second) as profitgt_second, sum(q_cb_sum_projects_data.incomediffgt) as incomediffgt, sum(q_cb_sum_projects_data.expensediff_gt) as expensediff_gt, sum(q_cb_sum_projects_data.profitdiff_gt) as profitdiff_gt, sum(q_cb_sum_projects_data.incomert_first) as incomert_first, sum(q_cb_sum_projects_data.expensert_first) as expensert_first, sum(q_cb_sum_projects_data.profitrt_first) as profitrt_first, sum(q_cb_sum_projects_data.incomert_second) as incomert_second, sum(q_cb_sum_projects_data.expensert_second) as expensert_second, sum(q_cb_sum_projects_data.profitrt_second) as profitrt_second, sum(q_cb_sum_projects_data.incomediffrt) as incomediffrt, sum(q_cb_sum_projects_data.expensediff_rt) as expensediff_rt, sum(q_cb_sum_projects_data.profitdiff_rt) as profitdiff_rt, sum(q_cb_sum_projects_data.incomerem_first) as incomerem_first, sum(q_cb_sum_projects_data.expenserem_first) as expenserem_first, sum(q_cb_sum_projects_data.profitrem_first) as profitrem_first, sum(q_cb_sum_projects_data.incomerem_second) as incomerem_second, sum(q_cb_sum_projects_data.expenserem_second) as expenserem_second, sum(q_cb_sum_projects_data.profitrem_second) as profitrem_second, sum(q_cb_sum_projects_data.incomerem_diff) as incomerem_diff, sum(q_cb_sum_projects_data.expenserem_diff) as expenserem_diff, sum(q_cb_sum_projects_data.profitrem_diff) as profitrem_diff
from q_cb_sum_projects_data
group by [l_1] + '.' + [l_2] + '.' + [l_3] + '.' + [l_4] + '.' + [l_5] + '.' + [l_6], [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5], q_cb_sum_projects_data.pc, q_cb_sum_projects_data.desc_tr_l6, q_cb_sum_projects_data.up_curr
having q_cb_sum_projects_data.[l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]='d.01.02.21.12'and (q_cb_sum_projects_data.pc)=[reports]![r_cb_sum_allprojects_compare_detailed]![text175];

----------------------------------------------------------------------------------------------------
q_budget_cons_detailed_report
select q_cb_cons_report_data.rep_month, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6] as l_comb, q_cb_cons_report_data.desc_tr_l6, q_cb_cons_report_data.currency, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5] as l5_comb
from q_cb_cons_report_data
group by q_cb_cons_report_data.rep_month, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6], q_cb_cons_report_data.desc_tr_l6, q_cb_cons_report_data.currency, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]
having (((q_cb_cons_report_data.rep_month)=forms!management!cbo_date_consolidated) and ((q_cb_cons_report_data.l_1+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5])='d.01.01.12.21'));

----------------------------------------------------------------------------------------------------
q_budget_cons_report
select q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.l_5, q_cb_cons_report_data.desc_tr_l5, q_cb_cons_report_data.currency, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem
from q_cb_cons_report_data
group by q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.l_5, q_cb_cons_report_data.desc_tr_l5, q_cb_cons_report_data.currency
having (((q_cb_cons_report_data.rep_month)=forms!management!cbo_date_consolidated) and ((q_cb_cons_report_data.l_1)=reports!r_cb_sum_cons_lvl_5!text61) and ((q_cb_cons_report_data.l_2)=reports!r_cb_sum_cons_lvl_5!text110) and ((q_cb_cons_report_data.l_3)=reports!r_cb_sum_cons_lvl_5!text111) and ((q_cb_cons_report_data.l_4)=reports!r_cb_sum_cons_lvl_5!text180));

----------------------------------------------------------------------------------------------------
q_budget_project_months
select 
rep_month,
pc,
name,
'güncel' as budget_type
from q_cb_project_months

union select
rep_month,
pc,
name,
'baz' as budget_type
from q_bb_project_months;

----------------------------------------------------------------------------------------------------
q_budget_wbs_union
select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_first_budget_gt

union

select 
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_second_budget_gt

union

select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_first_budget_rt

union select 
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_second_budget_rt;

----------------------------------------------------------------------------------------------------
q_budget_wbs_union_projects
select 
pc,
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_first_budget_gt

union

select 
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_second_budget_gt

union

select 
pc,
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_first_budget_rt

union select 
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_second_budget_rt;

----------------------------------------------------------------------------------------------------
q_cb_active_months_res_qty
select t_pl_analysis.rep_month, t_pl_analysis.p01_code as pc, q_cb_qty_activem_works.exp_cb_mon, t_pl_analysis.key_r4, q_cb_qty_activem_works.key_r_pc_l6, t_pl_analysis.key_full, t_pl_analysis.l_1, t_pl_analysis.l_2, t_pl_analysis.l_3, t_pl_analysis.rs_l1, t_pl_analysis.rs_l2, t_pl_analysis.rs_l3, t_pl_analysis.rs_l4, t_pl_analysis.l_4, t_pl_analysis.l_5, t_pl_analysis.l_6, t_pl_analysis.key_r4_simple, (1+[r_loss])*([t_pl_analysis].[an_rs_quantity]) as an_rs_quantity, t_pl_analysis.r_loss
from q_cb_qty_activem_works left join t_pl_analysis on q_cb_qty_activem_works.key_r_pc_l6 = t_pl_analysis.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_active_months_res_qty_mod
select q_cb_active_months_res_qty.rep_month, q_cb_active_months_res_qty.pc, q_cb_active_months_res_qty.l_1, q_cb_active_months_res_qty.l_2, q_cb_active_months_res_qty.l_3, q_cb_active_months_res_qty.l_4, q_cb_active_months_res_qty.l_5, q_cb_active_months_res_qty.l_6, q_cb_active_months_res_qty.exp_cb_mon, q_cb_active_months_res_qty.rs_l1, q_cb_active_months_res_qty.rs_l2, q_cb_active_months_res_qty.rs_l3, q_cb_active_months_res_qty.rs_l4, r4_code.currency as rs_currency, q_cb_active_months_res_qty.an_rs_quantity, q_cb_active_months_res_qty.key_r4_simple, q_cb_active_months_res_qty.key_full, q_cb_active_months_res_qty.key_r_pc_l6, q_cb_active_months_res_qty.key_r4
from q_cb_active_months_res_qty left join r4_code on q_cb_active_months_res_qty.key_r4_simple = r4_code.key_r4_simple
where (((q_cb_active_months_res_qty.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_allprojects_report_currmonth_data
select t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6, t_cb_profit_total_st.desc_tr_l2, t_cb_profit_total_st.desc_tr_l3, t_cb_profit_total_st.desc_tr_l6, sum(t_cb_profit_total_st.income) as income, sum(t_cb_profit_total_st.expense) as expense, sum(t_cb_profit_total_st.profit) as profit, t_cb_profit_total_st.currency
from t_cb_profit_total_st
group by t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6, t_cb_profit_total_st.month, t_cb_profit_total_st.desc_tr_l2, t_cb_profit_total_st.desc_tr_l3, t_cb_profit_total_st.desc_tr_l6, t_cb_profit_total_st.currency
having (((t_cb_profit_total_st.pc)="mbe" )) and t_cb_profit_total_st.month<=#2022/07/01#;

----------------------------------------------------------------------------------------------------
q_cb_allprojects_report_data
select q_cb_summary_report_union.rep_month, q_cb_summary_report_union.pc, q_cb_summary_report_union.l_1, q_cb_summary_report_union.l_2, q_cb_summary_report_union.l_3, q_cb_summary_report_union.l_4, q_cb_summary_report_union.l_5, q_cb_summary_report_union.l_6, q_cb_summary_report_union.currency, c2_code.desc_tr_l2, c3_code.desc_tr_l3, sum(iif([q_cb_allprojects_report_endproject_data].[income] is null,"0",[q_cb_allprojects_report_endproject_data].[income])) as incomegt, sum(iif([q_cb_allprojects_report_endproject_data].[expense] is null,"0",[q_cb_allprojects_report_endproject_data].[expense])) as expensegt, [incomegt]-[expensegt] as profitgt, sum(iif([q_cb_summary_report_currmonth_data_group].[income] is null,"0",[q_cb_summary_report_currmonth_data_group].[income])) as incomert, sum(iif([q_cb_summary_report_currmonth_data_group].[expense] is null,"0",[q_cb_summary_report_currmonth_data_group].[expense])) as expensert, sum(iif([q_cb_summary_report_currmonth_data_group].[profit] is null,"0",[q_cb_summary_report_currmonth_data_group].[profit])) as profitrt, [incomegt]-[incomert] as incomerem, [expensegt]-[expensert] as expenserem, [profitgt]-[profitrt] as profitrem, c6_code.desc_tr_l6, c5_code.desc_tr_l5, c4_code.desc_tr_l4
from ((((((q_cb_summary_report_union left join q_cb_allprojects_report_endproject_data on (q_cb_summary_report_union.currency = q_cb_allprojects_report_endproject_data.currency) and (q_cb_summary_report_union.l_6 = q_cb_allprojects_report_endproject_data.l_6) and (q_cb_summary_report_union.l_5 = q_cb_allprojects_report_endproject_data.l_5) and (q_cb_summary_report_union.l_4 = q_cb_allprojects_report_endproject_data.l_4) and (q_cb_summary_report_union.l_3 = q_cb_allprojects_report_endproject_data.l_3) and (q_cb_summary_report_union.l_2 = q_cb_allprojects_report_endproject_data.l_2) and (q_cb_summary_report_union.l_1 = q_cb_allprojects_report_endproject_data.l_1) and (q_cb_summary_report_union.pc = q_cb_allprojects_report_endproject_data.pc) and (q_cb_summary_report_union.rep_month = q_cb_allprojects_report_endproject_data.rep_month)) left join c6_code on (q_cb_summary_report_union.l_6 = c6_code.c_l6) and (q_cb_summary_report_union.l_5 = c6_code.c_l5) and (q_cb_summary_report_union.l_4 = c6_code.c_l4) and (q_cb_summary_report_union.l_3 = c6_code.c_l3) and (q_cb_summary_report_union.l_2 = c6_code.c_l2) and (q_cb_summary_report_union.l_1 = c6_code.c_l1)) left join c3_code on (q_cb_summary_report_union.l_3 = c3_code.c_l3) and (q_cb_summary_report_union.l_2 = c3_code.c_l2) and (q_cb_summary_report_union.l_1 = c3_code.c_l1)) left join c2_code on (q_cb_summary_report_union.l_2 = c2_code.c_l2) and (q_cb_summary_report_union.l_1 = c2_code.c_l1)) left join q_cb_summary_report_currmonth_data_group on (q_cb_summary_report_union.currency = q_cb_summary_report_currmonth_data_group.currency) and (q_cb_summary_report_union.l_6 = q_cb_summary_report_currmonth_data_group.l_6) and (q_cb_summary_report_union.l_5 = q_cb_summary_report_currmonth_data_group.l_5) and (q_cb_summary_report_union.l_4 = q_cb_summary_report_currmonth_data_group.l_4) and (q_cb_summary_report_union.l_3 = q_cb_summary_report_currmonth_data_group.l_3) and (q_cb_summary_report_union.l_2 = q_cb_summary_report_currmonth_data_group.l_2) and (q_cb_summary_report_union.l_1 = q_cb_summary_report_currmonth_data_group.l_1) and (q_cb_summary_report_union.pc = q_cb_summary_report_currmonth_data_group.pc) and (q_cb_summary_report_union.rep_month = q_cb_summary_report_currmonth_data_group.rep_month)) left join c5_code on (q_cb_summary_report_union.l_5 = c5_code.c_l5) and (q_cb_summary_report_union.l_4 = c5_code.c_l4) and (q_cb_summary_report_union.l_3 = c5_code.c_l3) and (q_cb_summary_report_union.l_2 = c5_code.c_l2) and (q_cb_summary_report_union.l_1 = c5_code.c_l1)) left join c4_code on (q_cb_summary_report_union.l_4 = c4_code.c_l4) and (q_cb_summary_report_union.l_3 = c4_code.c_l3) and (q_cb_summary_report_union.l_2 = c4_code.c_l2) and (q_cb_summary_report_union.l_1 = c4_code.c_l1)
group by q_cb_summary_report_union.rep_month, q_cb_summary_report_union.pc, q_cb_summary_report_union.l_1, q_cb_summary_report_union.l_2, q_cb_summary_report_union.l_3, q_cb_summary_report_union.l_4, q_cb_summary_report_union.l_5, q_cb_summary_report_union.l_6, q_cb_summary_report_union.currency, c2_code.desc_tr_l2, c3_code.desc_tr_l3, c6_code.desc_tr_l6, c5_code.desc_tr_l5, c4_code.desc_tr_l4;

----------------------------------------------------------------------------------------------------
q_cb_allprojects_report_endproject_data
select t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6, t_cb_profit_total_st.desc_tr_l2, t_cb_profit_total_st.desc_tr_l3, t_cb_profit_total_st.desc_tr_l6, sum(t_cb_profit_total_st.income) as income, sum(t_cb_profit_total_st.expense) as expense, sum(t_cb_profit_total_st.profit) as profit, t_cb_profit_total_st.currency
from t_cb_profit_total_st
group by t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6, t_cb_profit_total_st.desc_tr_l2, t_cb_profit_total_st.desc_tr_l3, t_cb_profit_total_st.desc_tr_l6, t_cb_profit_total_st.currency
having (((t_cb_profit_total_st.pc)="mbe" ));

----------------------------------------------------------------------------------------------------
q_cb_analysis_activem_with_prices
select q_cb_active_months_res_qty.rep_month, q_cb_active_months_res_qty.pc, q_cb_active_months_res_qty.exp_cb_mon, q_cb_active_months_res_qty.an_rs_quantity, q_cb_active_months_res_qty.key_r4, q_cb_active_months_res_qty.key_r_pc_l6, q_cb_active_months_res_qty.key_full, t_pl_res_up.up_cost, q_cb_active_months_res_qty.l_1, q_cb_active_months_res_qty.l_2, q_cb_active_months_res_qty.l_3, q_cb_active_months_res_qty.l_4, q_cb_active_months_res_qty.l_5, q_cb_active_months_res_qty.l_6, q_cb_active_months_res_qty.rs_l1, q_cb_active_months_res_qty.rs_l2, q_cb_active_months_res_qty.rs_l3, q_cb_active_months_res_qty.rs_l4, r4_code.currency, q_cb_active_months_res_qty.key_r4_simple
from (q_cb_active_months_res_qty left join t_pl_res_up on q_cb_active_months_res_qty.key_r4 = t_pl_res_up.key_r4) left join r4_code on q_cb_active_months_res_qty.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_cb_analysis_activem_with_prices_mod
select q_cb_active_months_res_qty_mod.rep_month, q_cb_active_months_res_qty_mod.pc, q_cb_active_months_res_qty_mod.rs_l1, q_cb_active_months_res_qty_mod.rs_l2, q_cb_active_months_res_qty_mod.rs_l3, q_cb_active_months_res_qty_mod.rs_l4, q_cb_active_months_res_qty_mod.l_1, q_cb_active_months_res_qty_mod.l_2, q_cb_active_months_res_qty_mod.l_3, q_cb_active_months_res_qty_mod.l_4, q_cb_active_months_res_qty_mod.l_5, q_cb_active_months_res_qty_mod.l_6, q_cb_active_months_res_qty_mod.exp_cb_mon, q_cb_active_months_res_qty_mod.rs_currency, q_cb_active_months_res_qty_mod.an_rs_quantity, t_pl_res_up.up_cost, q_cb_active_months_res_qty_mod.key_r4, q_cb_active_months_res_qty_mod.key_r_pc_l6, q_cb_active_months_res_qty_mod.key_full, q_cb_active_months_res_qty_mod.key_r4_simple
from q_cb_active_months_res_qty_mod left join t_pl_res_up on q_cb_active_months_res_qty_mod.key_r4 = t_pl_res_up.key_r4;

----------------------------------------------------------------------------------------------------
q_cb_cons_report_currmonth_data
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, sum(t_cb_profit_usd_st.income) as income, sum(t_cb_profit_usd_st.expense) as expense, sum(t_cb_profit_usd_st.profit) as profit, t_cb_profit_usd_st.currency
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency, t_cb_profit_usd_st.month
having t_cb_profit_usd_st.month<=#2022/07/01#;

----------------------------------------------------------------------------------------------------
q_cb_cons_report_currmonth_data_group
select q_cb_cons_report_currmonth_data.rep_month, q_cb_cons_report_currmonth_data.l_1, q_cb_cons_report_currmonth_data.l_2, q_cb_cons_report_currmonth_data.l_3, q_cb_cons_report_currmonth_data.l_4, q_cb_cons_report_currmonth_data.l_5, q_cb_cons_report_currmonth_data.l_6, q_cb_cons_report_currmonth_data.desc_tr_l2, q_cb_cons_report_currmonth_data.desc_tr_l3, q_cb_cons_report_currmonth_data.desc_tr_l6, sum(q_cb_cons_report_currmonth_data.income) as income, sum(q_cb_cons_report_currmonth_data.expense) as expense, sum(q_cb_cons_report_currmonth_data.profit) as profit, q_cb_cons_report_currmonth_data.currency
from q_cb_cons_report_currmonth_data
group by q_cb_cons_report_currmonth_data.rep_month, q_cb_cons_report_currmonth_data.l_1, q_cb_cons_report_currmonth_data.l_2, q_cb_cons_report_currmonth_data.l_3, q_cb_cons_report_currmonth_data.l_4, q_cb_cons_report_currmonth_data.l_5, q_cb_cons_report_currmonth_data.l_6, q_cb_cons_report_currmonth_data.desc_tr_l2, q_cb_cons_report_currmonth_data.desc_tr_l3, q_cb_cons_report_currmonth_data.desc_tr_l6, q_cb_cons_report_currmonth_data.currency;

----------------------------------------------------------------------------------------------------
q_cb_cons_report_data
select q_cb_cons_report_union.rep_month, q_cb_cons_report_union.l_1, q_cb_cons_report_union.l_2, q_cb_cons_report_union.l_3, q_cb_cons_report_union.l_4, q_cb_cons_report_union.l_5, q_cb_cons_report_union.l_6, q_cb_cons_report_union.currency, sum(iif([q_cb_cons_report_endproject_data].[income] is null,"0",[q_cb_cons_report_endproject_data].[income])) as incomegt, sum(iif([q_cb_cons_report_endproject_data].[expense] is null,"0",[q_cb_cons_report_endproject_data].[expense])) as expensegt, [incomegt]-[expensegt] as profitgt, sum(iif([q_cb_cons_report_currmonth_data_group].[income] is null,"0",[q_cb_cons_report_currmonth_data_group].[income])) as incomert, sum(iif([q_cb_cons_report_currmonth_data_group].[expense] is null,"0",[q_cb_cons_report_currmonth_data_group].[expense])) as expensert, [incomert]-[expensert] as profitrt, c6_code.desc_tr_l6, c2_code.desc_tr_l2, c3_code.desc_tr_l3, [incomegt]-[incomert] as incomerem, [expensegt]-[expensert] as expenserem, [profitgt]-[profitrt] as profitrem, c5_code.desc_tr_l5, c4_code.desc_tr_l4
from ((((((q_cb_cons_report_union left join q_cb_cons_report_currmonth_data_group on (q_cb_cons_report_union.rep_month = q_cb_cons_report_currmonth_data_group.rep_month) and (q_cb_cons_report_union.l_1 = q_cb_cons_report_currmonth_data_group.l_1) and (q_cb_cons_report_union.l_2 = q_cb_cons_report_currmonth_data_group.l_2) and (q_cb_cons_report_union.l_3 = q_cb_cons_report_currmonth_data_group.l_3) and (q_cb_cons_report_union.l_4 = q_cb_cons_report_currmonth_data_group.l_4) and (q_cb_cons_report_union.l_5 = q_cb_cons_report_currmonth_data_group.l_5) and (q_cb_cons_report_union.l_6 = q_cb_cons_report_currmonth_data_group.l_6) and (q_cb_cons_report_union.currency = q_cb_cons_report_currmonth_data_group.currency)) left join q_cb_cons_report_endproject_data on (q_cb_cons_report_union.rep_month = q_cb_cons_report_endproject_data.rep_month) and (q_cb_cons_report_union.l_1 = q_cb_cons_report_endproject_data.l_1) and (q_cb_cons_report_union.l_2 = q_cb_cons_report_endproject_data.l_2) and (q_cb_cons_report_union.l_3 = q_cb_cons_report_endproject_data.l_3) and (q_cb_cons_report_union.l_4 = q_cb_cons_report_endproject_data.l_4) and (q_cb_cons_report_union.l_5 = q_cb_cons_report_endproject_data.l_5) and (q_cb_cons_report_union.l_6 = q_cb_cons_report_endproject_data.l_6) and (q_cb_cons_report_union.currency = q_cb_cons_report_endproject_data.currency)) left join c6_code on (q_cb_cons_report_union.l_1 = c6_code.c_l1) and (q_cb_cons_report_union.l_2 = c6_code.c_l2) and (q_cb_cons_report_union.l_3 = c6_code.c_l3) and (q_cb_cons_report_union.l_4 = c6_code.c_l4) and (q_cb_cons_report_union.l_5 = c6_code.c_l5) and (q_cb_cons_report_union.l_6 = c6_code.c_l6)) left join c2_code on (q_cb_cons_report_union.l_1 = c2_code.c_l1) and (q_cb_cons_report_union.l_2 = c2_code.c_l2)) left join c3_code on (q_cb_cons_report_union.l_1 = c3_code.c_l1) and (q_cb_cons_report_union.l_2 = c3_code.c_l2) and (q_cb_cons_report_union.l_3 = c3_code.c_l3)) left join c5_code on (q_cb_cons_report_union.l_5 = c5_code.c_l5) and (q_cb_cons_report_union.l_4 = c5_code.c_l4) and (q_cb_cons_report_union.l_3 = c5_code.c_l3) and (q_cb_cons_report_union.l_2 = c5_code.c_l2) and (q_cb_cons_report_union.l_1 = c5_code.c_l1)) left join c4_code on (q_cb_cons_report_union.l_4 = c4_code.c_l4) and (q_cb_cons_report_union.l_3 = c4_code.c_l3) and (q_cb_cons_report_union.l_2 = c4_code.c_l2) and (q_cb_cons_report_union.l_1 = c4_code.c_l1)
group by q_cb_cons_report_union.rep_month, q_cb_cons_report_union.l_1, q_cb_cons_report_union.l_2, q_cb_cons_report_union.l_3, q_cb_cons_report_union.l_4, q_cb_cons_report_union.l_5, q_cb_cons_report_union.l_6, q_cb_cons_report_union.currency, c6_code.desc_tr_l6, c2_code.desc_tr_l2, c3_code.desc_tr_l3, c5_code.desc_tr_l5, c4_code.desc_tr_l4;

----------------------------------------------------------------------------------------------------
q_cb_cons_report_endproject_data
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, sum(t_cb_profit_usd_st.income) as income, sum(t_cb_profit_usd_st.expense) as expense, sum(t_cb_profit_usd_st.profit) as profit, t_cb_profit_usd_st.currency
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency;

----------------------------------------------------------------------------------------------------
q_cb_cons_report_union
select 
		rep_month,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency
	from 
		q_cb_cons_report_currmonth_data

union select 
		rep_month,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency

	from 
		q_cb_cons_report_endproject_data;

----------------------------------------------------------------------------------------------------
q_cb_curr_base_month
select q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month
from t_rep_month right join q_budget_project_months on t_rep_month.rep_month = q_budget_project_months.rep_month
group by q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month;

----------------------------------------------------------------------------------------------------
q_cb_curr_base_month_mod
select q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month
from t_rep_month right join q_budget_project_months on t_rep_month.rep_month = q_budget_project_months.rep_month
group by q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month;

----------------------------------------------------------------------------------------------------
q_cb_curr_base_val
select q_cb_curr_base_month.rep_month, q_cb_curr_base_month.rep_month_date, mon_curr_rates.r_eur_eur, mon_curr_rates.r_eur_try, mon_curr_rates.r_eur_usd, mon_curr_rates.r_try_eur, mon_curr_rates.r_try_try, mon_curr_rates.r_try_usd, mon_curr_rates.r_usd_eur, mon_curr_rates.r_usd_try, mon_curr_rates.r_usd_usd
from q_cb_curr_base_month left join mon_curr_rates on (q_cb_curr_base_month.rep_month_date = mon_curr_rates.month) and (q_cb_curr_base_month.rep_month = mon_curr_rates.rep_month)
group by q_cb_curr_base_month.rep_month, q_cb_curr_base_month.rep_month_date, mon_curr_rates.r_eur_eur, mon_curr_rates.r_eur_try, mon_curr_rates.r_eur_usd, mon_curr_rates.r_try_eur, mon_curr_rates.r_try_try, mon_curr_rates.r_try_usd, mon_curr_rates.r_usd_eur, mon_curr_rates.r_usd_try, mon_curr_rates.r_usd_usd;

----------------------------------------------------------------------------------------------------
q_cb_curr_base_val_mod
select q_cb_curr_base_month.rep_month_date, q_monthly_curr_rates_mod_crosstab.r_eur_eur, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_try_eur, q_monthly_curr_rates_mod_crosstab.r_try_try, q_monthly_curr_rates_mod_crosstab.r_try_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur, q_monthly_curr_rates_mod_crosstab.r_usd_try, q_monthly_curr_rates_mod_crosstab.r_usd_usd, q_cb_curr_base_month.rep_month
from q_cb_curr_base_month left join q_monthly_curr_rates_mod_crosstab on q_cb_curr_base_month.rep_month_date = q_monthly_curr_rates_mod_crosstab.month
group by q_cb_curr_base_month.rep_month_date, q_monthly_curr_rates_mod_crosstab.r_eur_eur, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_try_eur, q_monthly_curr_rates_mod_crosstab.r_try_try, q_monthly_curr_rates_mod_crosstab.r_try_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur, q_monthly_curr_rates_mod_crosstab.r_usd_try, q_monthly_curr_rates_mod_crosstab.r_usd_usd, q_cb_curr_base_month.rep_month;

----------------------------------------------------------------------------------------------------
q_cb_curr_escalation_rates
select q_cb_active_months_res_qty.rep_month, q_cb_active_months_res_qty.pc, q_cb_active_months_res_qty.l_1, q_cb_active_months_res_qty.l_2, q_cb_active_months_res_qty.l_3, q_cb_active_months_res_qty.l_4, q_cb_active_months_res_qty.l_5, q_cb_active_months_res_qty.l_6, q_cb_active_months_res_qty.exp_cb_mon as [month], q_cb_active_months_res_qty.rs_l1, q_cb_active_months_res_qty.rs_l2, q_cb_active_months_res_qty.rs_l3, q_cb_active_months_res_qty.rs_l4, iif(([currency]="try" and [w_inf_usd]<>0),1+round([rt_usd_try]*[w_inf_usd],6),(iif([currency]="eur" and [w_inf_usd]<>0,1+round([rt_usd_eur]*[w_inf_usd],6),1))) as k_usd, iif(([currency]="try" and [w_inf_eur]<>0),1+round([rt_eur_try]*[w_inf_eur],6),(iif([currency]="usd" and [w_inf_eur]<>0,1+round([rt_eur_usd]*[w_inf_eur],6),1))) as k_eur, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.currency as rs_currency, q_cb_active_months_res_qty.key_r4_simple, q_cb_active_months_res_qty.key_full, q_cb_active_months_res_qty.key_r_pc_l6, q_cb_active_months_res_qty.key_r4, [key_full] & "." & [rs_currency] & "." & [month] as key_full_comb
from (q_cb_active_months_res_qty left join q_cb_monthly_curr_rates_inc on (q_cb_active_months_res_qty.rep_month = q_cb_monthly_curr_rates_inc.rep_month) and (q_cb_active_months_res_qty.pc = q_cb_monthly_curr_rates_inc.pc) and (q_cb_active_months_res_qty.exp_cb_mon = q_cb_monthly_curr_rates_inc.exp_cb_mon)) left join r4_code on q_cb_active_months_res_qty.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_cb_curr_escalation_rates_mod
select q_cb_active_months_res_qty_mod.rep_month, q_cb_active_months_res_qty_mod.pc, q_cb_active_months_res_qty_mod.l_1, q_cb_active_months_res_qty_mod.l_2, q_cb_active_months_res_qty_mod.l_3, q_cb_active_months_res_qty_mod.l_4, q_cb_active_months_res_qty_mod.l_5, q_cb_active_months_res_qty_mod.l_6, q_cb_active_months_res_qty_mod.exp_cb_mon as [month], q_cb_active_months_res_qty_mod.rs_l1, q_cb_active_months_res_qty_mod.rs_l2, q_cb_active_months_res_qty_mod.rs_l3, q_cb_active_months_res_qty_mod.rs_l4, iif(([currency]="try" and [w_inf_usd]<>0),1+round([rt_usd_try]*[w_inf_usd],6),(iif([currency]="eur" and [w_inf_usd]<>0,1+round([rt_usd_eur]*[w_inf_usd],6),1))) as k_usd, iif(([currency]="try" and [w_inf_eur]<>0),1+round([rt_eur_try]*[w_inf_eur],6),(iif([currency]="usd" and [w_inf_eur]<>0,1+round([rt_eur_usd]*[w_inf_eur],6),1))) as k_eur, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.currency as rs_currency, q_cb_active_months_res_qty_mod.key_r4_simple, q_cb_active_months_res_qty_mod.key_full, q_cb_active_months_res_qty_mod.key_r_pc_l6, q_cb_active_months_res_qty_mod.key_r4, [key_full] & "." & [rs_currency] & "." & [month] as key_full_comb
from (q_cb_active_months_res_qty_mod left join q_cb_monthly_curr_rates_inc_mod on (q_cb_active_months_res_qty_mod.exp_cb_mon = q_cb_monthly_curr_rates_inc_mod.exp_cb_mon) and (q_cb_active_months_res_qty_mod.pc = q_cb_monthly_curr_rates_inc_mod.pc) and (q_cb_active_months_res_qty_mod.rep_month = q_cb_monthly_curr_rates_inc_mod.rep_month)) left join r4_code on q_cb_active_months_res_qty_mod.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_cb_exp
select 
		*
	from 
q_pl_exp
		
where total_expense <>0

union all select 
		*
	from 
		t_ac_exp

where exp_ac_exp <>0;

----------------------------------------------------------------------------------------------------
q_cb_exp_diff
select q_cb_exp_mod.rep_month, q_cb_exp_mod.p01_code, q_cb_exp_mod.l_1, q_cb_exp_mod.l_2, q_cb_exp_mod.l_3, q_cb_exp_mod.l_4, q_cb_exp_mod.l_5, q_cb_exp_mod.l_6, q_cb_exp_mod.month, q_cb_exp_mod.up_curr, q_cb_exp.total_expense as exp_orj, q_cb_exp_mod.total_expense as exp_mod, ([exp_orj])-([exp_mod]) as diff
from q_cb_exp_mod left join q_cb_exp on (q_cb_exp_mod.rep_month = q_cb_exp.rep_month) and (q_cb_exp_mod.p01_code = q_cb_exp.p01_code) and (q_cb_exp_mod.l_1 = q_cb_exp.l_1) and (q_cb_exp_mod.l_2 = q_cb_exp.l_2) and (q_cb_exp_mod.l_3 = q_cb_exp.l_3) and (q_cb_exp_mod.l_4 = q_cb_exp.l_4) and (q_cb_exp_mod.l_5 = q_cb_exp.l_5) and (q_cb_exp_mod.l_6 = q_cb_exp.l_6) and (q_cb_exp_mod.month = q_cb_exp.month) and (q_cb_exp_mod.up_curr = q_cb_exp.up_curr);

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_eur_with_dummy
transform sum(q_cb_exp_eur_with_dummy.eur_expense) as sumofeur_expense
select q_cb_exp_eur_with_dummy.rep_month, q_cb_exp_eur_with_dummy.pc, q_cb_exp_eur_with_dummy.l_1, q_cb_exp_eur_with_dummy.l_2, q_cb_exp_eur_with_dummy.l_3, q_cb_exp_eur_with_dummy.l_4, q_cb_exp_eur_with_dummy.l_5, q_cb_exp_eur_with_dummy.l_6, q_cb_exp_eur_with_dummy.up_curr_conv
from q_cb_exp_eur_with_dummy
group by q_cb_exp_eur_with_dummy.rep_month, q_cb_exp_eur_with_dummy.pc, q_cb_exp_eur_with_dummy.l_1, q_cb_exp_eur_with_dummy.l_2, q_cb_exp_eur_with_dummy.l_3, q_cb_exp_eur_with_dummy.l_4, q_cb_exp_eur_with_dummy.l_5, q_cb_exp_eur_with_dummy.l_6, q_cb_exp_eur_with_dummy.up_curr_conv
pivot q_cb_exp_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_eur_with_dummy_mod
transform sum(q_cb_exp_eur_with_dummy_mod.eur_expense) as sumofeur_expense
select q_cb_exp_eur_with_dummy_mod.rep_month as expr1, q_cb_exp_eur_with_dummy_mod.p01_code as expr2, q_cb_exp_eur_with_dummy_mod.l_1 as expr3, q_cb_exp_eur_with_dummy_mod.l_2 as expr4, q_cb_exp_eur_with_dummy_mod.l_3 as expr5, q_cb_exp_eur_with_dummy_mod.l_4 as expr6, q_cb_exp_eur_with_dummy_mod.l_5 as expr7, q_cb_exp_eur_with_dummy_mod.l_6 as expr8, q_cb_exp_eur_with_dummy_mod.up_curr_conv as expr9
from q_cb_exp_eur_with_dummy_mod
where (((q_cb_exp_eur_with_dummy_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
group by q_cb_exp_eur_with_dummy_mod.rep_month, q_cb_exp_eur_with_dummy_mod.p01_code, q_cb_exp_eur_with_dummy_mod.l_1, q_cb_exp_eur_with_dummy_mod.l_2, q_cb_exp_eur_with_dummy_mod.l_3, q_cb_exp_eur_with_dummy_mod.l_4, q_cb_exp_eur_with_dummy_mod.l_5, q_cb_exp_eur_with_dummy_mod.l_6, q_cb_exp_eur_with_dummy_mod.up_curr_conv
order by q_cb_exp_eur_with_dummy_mod.rep_month, q_cb_exp_eur_with_dummy_mod.p01_code, q_cb_exp_eur_with_dummy_mod.l_1, q_cb_exp_eur_with_dummy_mod.l_2, q_cb_exp_eur_with_dummy_mod.l_3, q_cb_exp_eur_with_dummy_mod.l_4, q_cb_exp_eur_with_dummy_mod.l_5, q_cb_exp_eur_with_dummy_mod.l_6, q_cb_exp_eur_with_dummy_mod.month
pivot q_cb_exp_eur_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_try_with_dummy
transform sum(q_cb_exp_try_with_dummy.try_expense) as sumoftry_expense
select q_cb_exp_try_with_dummy.rep_month, q_cb_exp_try_with_dummy.pc, q_cb_exp_try_with_dummy.l_1, q_cb_exp_try_with_dummy.l_2, q_cb_exp_try_with_dummy.l_3, q_cb_exp_try_with_dummy.l_4, q_cb_exp_try_with_dummy.l_5, q_cb_exp_try_with_dummy.l_6, q_cb_exp_try_with_dummy.up_curr_conv
from q_cb_exp_try_with_dummy
group by q_cb_exp_try_with_dummy.rep_month, q_cb_exp_try_with_dummy.pc, q_cb_exp_try_with_dummy.l_1, q_cb_exp_try_with_dummy.l_2, q_cb_exp_try_with_dummy.l_3, q_cb_exp_try_with_dummy.l_4, q_cb_exp_try_with_dummy.l_5, q_cb_exp_try_with_dummy.l_6, q_cb_exp_try_with_dummy.up_curr_conv
pivot q_cb_exp_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_try_with_dummy_mod
transform sum(q_cb_exp_try_with_dummy_mod.try_expense) as sumoftry_expense
select q_cb_exp_try_with_dummy_mod.rep_month as expr1, q_cb_exp_try_with_dummy_mod.p01_code as expr2, q_cb_exp_try_with_dummy_mod.l_1 as expr3, q_cb_exp_try_with_dummy_mod.l_2 as expr4, q_cb_exp_try_with_dummy_mod.l_3 as expr5, q_cb_exp_try_with_dummy_mod.l_4 as expr6, q_cb_exp_try_with_dummy_mod.l_5 as expr7, q_cb_exp_try_with_dummy_mod.l_6 as expr8, q_cb_exp_try_with_dummy_mod.up_curr_conv as expr9
from q_cb_exp_try_with_dummy_mod
where (((q_cb_exp_try_with_dummy_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
group by q_cb_exp_try_with_dummy_mod.rep_month, q_cb_exp_try_with_dummy_mod.p01_code, q_cb_exp_try_with_dummy_mod.l_1, q_cb_exp_try_with_dummy_mod.l_2, q_cb_exp_try_with_dummy_mod.l_3, q_cb_exp_try_with_dummy_mod.l_4, q_cb_exp_try_with_dummy_mod.l_5, q_cb_exp_try_with_dummy_mod.l_6, q_cb_exp_try_with_dummy_mod.up_curr_conv
pivot q_cb_exp_try_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_usd_with_dummy
transform sum(q_cb_exp_usd_with_dummy.usd_expense) as sumofusd_expense
select q_cb_exp_usd_with_dummy.rep_month, q_cb_exp_usd_with_dummy.pc, q_cb_exp_usd_with_dummy.l_1, q_cb_exp_usd_with_dummy.l_2, q_cb_exp_usd_with_dummy.l_3, q_cb_exp_usd_with_dummy.l_4, q_cb_exp_usd_with_dummy.l_5, q_cb_exp_usd_with_dummy.l_6, q_cb_exp_usd_with_dummy.up_curr_conv
from q_cb_exp_usd_with_dummy
group by q_cb_exp_usd_with_dummy.rep_month, q_cb_exp_usd_with_dummy.pc, q_cb_exp_usd_with_dummy.l_1, q_cb_exp_usd_with_dummy.l_2, q_cb_exp_usd_with_dummy.l_3, q_cb_exp_usd_with_dummy.l_4, q_cb_exp_usd_with_dummy.l_5, q_cb_exp_usd_with_dummy.l_6, q_cb_exp_usd_with_dummy.up_curr_conv
pivot q_cb_exp_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_usd_with_dummy_mod
transform sum(q_cb_exp_usd_with_dummy_mod.usd_expense) as sumofusd_expense
select q_cb_exp_usd_with_dummy_mod.rep_month, q_cb_exp_usd_with_dummy_mod.p01_code as pc, q_cb_exp_usd_with_dummy_mod.l_1, q_cb_exp_usd_with_dummy_mod.l_2, q_cb_exp_usd_with_dummy_mod.l_3, q_cb_exp_usd_with_dummy_mod.l_4, q_cb_exp_usd_with_dummy_mod.l_5, q_cb_exp_usd_with_dummy_mod.l_6, q_cb_exp_usd_with_dummy_mod.up_curr_conv
from q_cb_exp_usd_with_dummy_mod
where (((q_cb_exp_usd_with_dummy_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
group by q_cb_exp_usd_with_dummy_mod.rep_month, q_cb_exp_usd_with_dummy_mod.p01_code, q_cb_exp_usd_with_dummy_mod.l_1, q_cb_exp_usd_with_dummy_mod.l_2, q_cb_exp_usd_with_dummy_mod.l_3, q_cb_exp_usd_with_dummy_mod.l_4, q_cb_exp_usd_with_dummy_mod.l_5, q_cb_exp_usd_with_dummy_mod.l_6, q_cb_exp_usd_with_dummy_mod.up_curr_conv
pivot q_cb_exp_usd_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_with_dummy
transform sum(q_cb_exp_with_dummy.total_expense) as sumoftotal_expense
select q_cb_exp_with_dummy.rep_month, q_cb_exp_with_dummy.p01_code, q_cb_exp_with_dummy.l_1, q_cb_exp_with_dummy.l_2, q_cb_exp_with_dummy.l_3, q_cb_exp_with_dummy.l_4, q_cb_exp_with_dummy.l_5, q_cb_exp_with_dummy.l_6, q_cb_exp_with_dummy.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")) as exc_try, iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_exp_with_dummy
group by q_cb_exp_with_dummy.rep_month, q_cb_exp_with_dummy.p01_code, q_cb_exp_with_dummy.l_1, q_cb_exp_with_dummy.l_2, q_cb_exp_with_dummy.l_3, q_cb_exp_with_dummy.l_4, q_cb_exp_with_dummy.l_5, q_cb_exp_with_dummy.l_6, q_cb_exp_with_dummy.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")), iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")), iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_exp_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_with_dummy_mod
transform sum(q_cb_exp_with_dummy_mod.total_expense) as sumoftotal_expense
select q_cb_exp_with_dummy_mod.rep_month as expr1, q_cb_exp_with_dummy_mod.p01_code as expr2, q_cb_exp_with_dummy_mod.l_1 as expr3, q_cb_exp_with_dummy_mod.l_2 as expr4, q_cb_exp_with_dummy_mod.l_3 as expr5, q_cb_exp_with_dummy_mod.l_4 as expr6, q_cb_exp_with_dummy_mod.l_5 as expr7, q_cb_exp_with_dummy_mod.l_6 as expr8, q_cb_exp_with_dummy_mod.up_curr as expr9, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")) as exc_try, iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_exp_with_dummy_mod
where (((q_cb_exp_with_dummy_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
group by q_cb_exp_with_dummy_mod.rep_month, q_cb_exp_with_dummy_mod.p01_code, q_cb_exp_with_dummy_mod.l_1, q_cb_exp_with_dummy_mod.l_2, q_cb_exp_with_dummy_mod.l_3, q_cb_exp_with_dummy_mod.l_4, q_cb_exp_with_dummy_mod.l_5, q_cb_exp_with_dummy_mod.l_6, q_cb_exp_with_dummy_mod.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")), iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")), iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_exp_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_eur
select t_q_cb_exp.rep_month, t_q_cb_exp.pc, t_q_cb_exp.l_1, t_q_cb_exp.l_2, t_q_cb_exp.l_3, t_q_cb_exp.l_4, t_q_cb_exp.l_5, t_q_cb_exp.l_6, t_q_cb_exp.month, t_q_cb_exp.total_expense, t_q_cb_exp.up_curr, iif([up_curr]="eur",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_eur],[total_expense]*[r_try_eur])) as eur_expense, "eur" as up_curr_conv, t_q_cb_exp.key_r_pc_l6
from t_q_cb_exp left join mon_curr_rates on (t_q_cb_exp.month = mon_curr_rates.month) and (t_q_cb_exp.rep_month = mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_exp_eur_mod
select t_q_cb_exp_mod.rep_month, t_q_cb_exp_mod.p01_code, t_q_cb_exp_mod.l_1, t_q_cb_exp_mod.l_2, t_q_cb_exp_mod.l_3, t_q_cb_exp_mod.l_4, t_q_cb_exp_mod.l_5, t_q_cb_exp_mod.l_6, t_q_cb_exp_mod.month, t_q_cb_exp_mod.total_expense, t_q_cb_exp_mod.up_curr, iif([up_curr]="eur",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_eur],[total_expense]*[r_try_eur])) as eur_expense, "eur" as up_curr_conv, t_q_cb_exp_mod.key_r_pc_l6
from t_q_cb_exp_mod left join q_monthly_curr_rates_mod_crosstab on t_q_cb_exp_mod.month = q_monthly_curr_rates_mod_crosstab.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_eur_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_eur

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_eur_with_dummy_mod
select 
		rep_month,
p01_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_eur_mod


union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_lastm
select t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6, max(t_ac_exp.exp_ac_mon) as lastm
from t_ac_exp
group by t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6;

----------------------------------------------------------------------------------------------------
q_cb_exp_lastm_mod
select q_cb_exp_lastm.rep_month, q_cb_exp_lastm.pc, q_cb_exp_lastm.l_1, q_cb_exp_lastm.l_2, q_cb_exp_lastm.l_3, q_cb_exp_lastm.l_4, q_cb_exp_lastm.l_5, q_cb_exp_lastm.l_6, q_cb_exp_lastm.lastm
from q_cb_exp_lastm
where (((q_cb_exp_lastm.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_exp_mod
select 
		*
	from 
q_pl_exp_mod
		
where total_expense <>0

union all select 
		*
	from 
		q_cb_exp_pre_mod

where total_expense <>0;

----------------------------------------------------------------------------------------------------
q_cb_exp_mod_mt
select q_cb_exp_mod.rep_month, q_cb_exp_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_mod.month, q_cb_exp_mod.total_expense, q_cb_exp_mod.up_curr, q_cb_exp_mod.l_1, q_cb_exp_mod.l_2, q_cb_exp_mod.l_3, q_cb_exp_mod.l_4, q_cb_exp_mod.l_5, q_cb_exp_mod.l_6, q_cb_exp_mod.key_r_pc_l6 into t_q_cb_exp_mod
from q_cb_exp_mod left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_exp_mod.l_1 = c3_code.[c_l1]) and (q_cb_exp_mod.l_2 = c3_code.[c_l2]) and (q_cb_exp_mod.l_3 = c3_code.[c_l3])
group by q_cb_exp_mod.rep_month, q_cb_exp_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_mod.month, q_cb_exp_mod.total_expense, q_cb_exp_mod.up_curr, q_cb_exp_mod.l_1, q_cb_exp_mod.l_2, q_cb_exp_mod.l_3, q_cb_exp_mod.l_4, q_cb_exp_mod.l_5, q_cb_exp_mod.l_6, q_cb_exp_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mod_mt_eur
select q_cb_exp_eur_mod.rep_month, q_cb_exp_eur_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_eur_mod.month, q_cb_exp_eur_mod.eur_expense, q_cb_exp_eur_mod.up_curr_conv, q_cb_exp_eur_mod.l_1, q_cb_exp_eur_mod.l_2, q_cb_exp_eur_mod.l_3, q_cb_exp_eur_mod.l_4, q_cb_exp_eur_mod.l_5, q_cb_exp_eur_mod.l_6, q_cb_exp_eur_mod.key_r_pc_l6 into t_q_cb_exp_eur_mod
from q_cb_exp_eur_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_exp_eur_mod.l_3 = c3_code.[c_l3]) and (q_cb_exp_eur_mod.l_2 = c3_code.[c_l2]) and (q_cb_exp_eur_mod.l_1 = c3_code.[c_l1])
group by q_cb_exp_eur_mod.rep_month, q_cb_exp_eur_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_eur_mod.month, q_cb_exp_eur_mod.eur_expense, q_cb_exp_eur_mod.up_curr_conv, q_cb_exp_eur_mod.l_1, q_cb_exp_eur_mod.l_2, q_cb_exp_eur_mod.l_3, q_cb_exp_eur_mod.l_4, q_cb_exp_eur_mod.l_5, q_cb_exp_eur_mod.l_6, q_cb_exp_eur_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mod_mt_try
select q_cb_exp_try_mod.rep_month, q_cb_exp_try_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_try_mod.month, q_cb_exp_try_mod.try_expense, q_cb_exp_try_mod.up_curr_conv, q_cb_exp_try_mod.l_1, q_cb_exp_try_mod.l_2, q_cb_exp_try_mod.l_3, q_cb_exp_try_mod.l_4, q_cb_exp_try_mod.l_5, q_cb_exp_try_mod.l_6, q_cb_exp_try_mod.key_r_pc_l6 into t_q_cb_exp_try_mod
from q_cb_exp_try_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_exp_try_mod.l_3 = c3_code.[c_l3]) and (q_cb_exp_try_mod.l_2 = c3_code.[c_l2]) and (q_cb_exp_try_mod.l_1 = c3_code.[c_l1])
group by q_cb_exp_try_mod.rep_month, q_cb_exp_try_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_try_mod.month, q_cb_exp_try_mod.try_expense, q_cb_exp_try_mod.up_curr_conv, q_cb_exp_try_mod.l_1, q_cb_exp_try_mod.l_2, q_cb_exp_try_mod.l_3, q_cb_exp_try_mod.l_4, q_cb_exp_try_mod.l_5, q_cb_exp_try_mod.l_6, q_cb_exp_try_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mod_mt_usd
select q_cb_exp_usd_mod.rep_month, q_cb_exp_usd_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_usd_mod.month, q_cb_exp_usd_mod.usd_expense, q_cb_exp_usd_mod.up_curr_conv, q_cb_exp_usd_mod.l_1, q_cb_exp_usd_mod.l_2, q_cb_exp_usd_mod.l_3, q_cb_exp_usd_mod.l_4, q_cb_exp_usd_mod.l_5, q_cb_exp_usd_mod.l_6, q_cb_exp_usd_mod.key_r_pc_l6 into t_q_cb_exp_usd_mod
from q_cb_exp_usd_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_exp_usd_mod.l_3 = c3_code.[c_l3]) and (q_cb_exp_usd_mod.l_2 = c3_code.[c_l2]) and (q_cb_exp_usd_mod.l_1 = c3_code.[c_l1])
group by q_cb_exp_usd_mod.rep_month, q_cb_exp_usd_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_usd_mod.month, q_cb_exp_usd_mod.usd_expense, q_cb_exp_usd_mod.up_curr_conv, q_cb_exp_usd_mod.l_1, q_cb_exp_usd_mod.l_2, q_cb_exp_usd_mod.l_3, q_cb_exp_usd_mod.l_4, q_cb_exp_usd_mod.l_5, q_cb_exp_usd_mod.l_6, q_cb_exp_usd_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mt
select q_cb_exp.rep_month, q_cb_exp.p01_code as pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp.month, sum(q_cb_exp.total_expense) as total_expense, q_cb_exp.up_curr, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.key_r_pc_l6 into t_q_cb_exp
from q_cb_exp left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_exp.l_1 = c3_code.[c_l1]) and (q_cb_exp.l_2 = c3_code.[c_l2]) and (q_cb_exp.l_3 = c3_code.[c_l3])
group by q_cb_exp.rep_month, q_cb_exp.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp.month, q_cb_exp.up_curr, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mt_eur
select q_cb_exp_eur.rep_month, q_cb_exp_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_eur.month, sum(q_cb_exp_eur.eur_expense) as sumofeur_expense, q_cb_exp_eur.up_curr_conv, q_cb_exp_eur.l_1, q_cb_exp_eur.l_2, q_cb_exp_eur.l_3, q_cb_exp_eur.l_4, q_cb_exp_eur.l_5, q_cb_exp_eur.l_6, q_cb_exp_eur.key_r_pc_l6 into t_q_cb_exp_eur
from q_cb_exp_eur left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_exp_eur.l_1 = c3_code.[c_l1]) and (q_cb_exp_eur.l_2 = c3_code.[c_l2]) and (q_cb_exp_eur.l_3 = c3_code.[c_l3])
group by q_cb_exp_eur.rep_month, q_cb_exp_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_eur.month, q_cb_exp_eur.up_curr_conv, q_cb_exp_eur.l_1, q_cb_exp_eur.l_2, q_cb_exp_eur.l_3, q_cb_exp_eur.l_4, q_cb_exp_eur.l_5, q_cb_exp_eur.l_6, q_cb_exp_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mt_try
select q_cb_exp_try.rep_month, q_cb_exp_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_try.month, sum(q_cb_exp_try.try_expense) as try_expense, q_cb_exp_try.up_curr_conv, q_cb_exp_try.l_1, q_cb_exp_try.l_2, q_cb_exp_try.l_3, q_cb_exp_try.l_4, q_cb_exp_try.l_5, q_cb_exp_try.l_6, q_cb_exp_try.key_r_pc_l6 into t_q_cb_exp_try
from q_cb_exp_try left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_exp_try.l_1 = c3_code.[c_l1]) and (q_cb_exp_try.l_2 = c3_code.[c_l2]) and (q_cb_exp_try.l_3 = c3_code.[c_l3])
group by q_cb_exp_try.rep_month, q_cb_exp_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_try.month, q_cb_exp_try.up_curr_conv, q_cb_exp_try.l_1, q_cb_exp_try.l_2, q_cb_exp_try.l_3, q_cb_exp_try.l_4, q_cb_exp_try.l_5, q_cb_exp_try.l_6, q_cb_exp_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mt_usd
select q_cb_exp_usd.rep_month, q_cb_exp_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_usd.month, sum(q_cb_exp_usd.usd_expense) as usd_expense, q_cb_exp_usd.up_curr_conv, q_cb_exp_usd.l_1, q_cb_exp_usd.l_2, q_cb_exp_usd.l_3, q_cb_exp_usd.l_4, q_cb_exp_usd.l_5, q_cb_exp_usd.l_6, q_cb_exp_usd.key_r_pc_l6 into t_q_cb_exp_usd
from q_cb_exp_usd left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_exp_usd.l_1 = c3_code.[c_l1]) and (q_cb_exp_usd.l_2 = c3_code.[c_l2]) and (q_cb_exp_usd.l_3 = c3_code.[c_l3])
group by q_cb_exp_usd.rep_month, q_cb_exp_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_usd.month, q_cb_exp_usd.up_curr_conv, q_cb_exp_usd.l_1, q_cb_exp_usd.l_2, q_cb_exp_usd.l_3, q_cb_exp_usd.l_4, q_cb_exp_usd.l_5, q_cb_exp_usd.l_6, q_cb_exp_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_pre_mod
select t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6, t_ac_exp.exp_ac_mon as [month], t_ac_exp.exp_ac_exp as total_expense, t_ac_exp.up_curr, t_ac_exp.key_r_pc_l6
from t_ac_exp
where (((t_ac_exp.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_exp_try
select t_q_cb_exp.rep_month, t_q_cb_exp.pc, t_q_cb_exp.l_1, t_q_cb_exp.l_2, t_q_cb_exp.l_3, t_q_cb_exp.l_4, t_q_cb_exp.l_5, t_q_cb_exp.l_6, t_q_cb_exp.month, t_q_cb_exp.total_expense, t_q_cb_exp.up_curr, iif([up_curr]="try",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_try],[total_expense]*[r_eur_try])) as try_expense, "try" as up_curr_conv, t_q_cb_exp.key_r_pc_l6
from t_q_cb_exp left join mon_curr_rates on (t_q_cb_exp.month = mon_curr_rates.month) and (t_q_cb_exp.rep_month = mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_exp_try_mod
select t_q_cb_exp_mod.rep_month, t_q_cb_exp_mod.p01_code, t_q_cb_exp_mod.l_1, t_q_cb_exp_mod.l_2, t_q_cb_exp_mod.l_3, t_q_cb_exp_mod.l_4, t_q_cb_exp_mod.l_5, t_q_cb_exp_mod.l_6, t_q_cb_exp_mod.month, t_q_cb_exp_mod.total_expense, t_q_cb_exp_mod.up_curr, iif([up_curr]="try",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_try],[total_expense]*[r_eur_try])) as try_expense, "try" as up_curr_conv, t_q_cb_exp_mod.key_r_pc_l6
from t_q_cb_exp_mod left join q_monthly_curr_rates_mod_crosstab on t_q_cb_exp_mod.month = q_monthly_curr_rates_mod_crosstab.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_try_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_expense,
up_curr_conv,
key_r_pc_l6


	from 
		q_cb_exp_try

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_try_with_dummy_mod
select 
		rep_month,
p01_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_try_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_usd
select t_q_cb_exp.rep_month, t_q_cb_exp.pc, t_q_cb_exp.l_1, t_q_cb_exp.l_2, t_q_cb_exp.l_3, t_q_cb_exp.l_4, t_q_cb_exp.l_5, t_q_cb_exp.l_6, t_q_cb_exp.month, t_q_cb_exp.total_expense, t_q_cb_exp.up_curr, iif([up_curr]="usd",[total_expense],iif([up_curr]="eur",[total_expense]*[r_eur_usd],[total_expense]*[r_try_usd])) as usd_expense, "usd" as up_curr_conv, t_q_cb_exp.key_r_pc_l6
from t_q_cb_exp left join mon_curr_rates on (t_q_cb_exp.month = mon_curr_rates.month) and (t_q_cb_exp.rep_month = mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_exp_usd_diff
select q_cb_exp_usd_mod.rep_month, q_cb_exp_usd_mod.month, q_cb_exp_usd_mod.p01_code, q_cb_exp_usd_mod.l_1, q_cb_exp_usd_mod.l_2, q_cb_exp_usd_mod.l_3, q_cb_exp_usd_mod.l_4, q_cb_exp_usd_mod.l_5, q_cb_exp_usd_mod.l_6, q_cb_exp_usd_mod.up_curr_conv, q_cb_exp_usd.usd_expense as exp_orj, q_cb_exp_usd_mod.usd_expense as exp_mod, [exp_orj]-[exp_mod] as diff, q_cb_exp_usd_mod.up_curr
from q_cb_exp_usd_mod left join q_cb_exp_usd on (q_cb_exp_usd_mod.rep_month = q_cb_exp_usd.rep_month) and (q_cb_exp_usd_mod.p01_code = q_cb_exp_usd.pc) and (q_cb_exp_usd_mod.l_1 = q_cb_exp_usd.l_1) and (q_cb_exp_usd_mod.l_2 = q_cb_exp_usd.l_2) and (q_cb_exp_usd_mod.l_3 = q_cb_exp_usd.l_3) and (q_cb_exp_usd_mod.l_4 = q_cb_exp_usd.l_4) and (q_cb_exp_usd_mod.l_5 = q_cb_exp_usd.l_5) and (q_cb_exp_usd_mod.l_6 = q_cb_exp_usd.l_6) and (q_cb_exp_usd_mod.month = q_cb_exp_usd.month) and (q_cb_exp_usd_mod.up_curr = q_cb_exp_usd.up_curr) and (q_cb_exp_usd_mod.up_curr_conv = q_cb_exp_usd.up_curr_conv)
order by q_cb_exp_usd_mod.rep_month, q_cb_exp_usd_mod.month, q_cb_exp_usd_mod.p01_code, q_cb_exp_usd_mod.l_1, q_cb_exp_usd_mod.l_2, q_cb_exp_usd_mod.l_3, q_cb_exp_usd_mod.l_4, q_cb_exp_usd_mod.l_5, q_cb_exp_usd_mod.l_6, q_cb_exp_usd_mod.up_curr_conv;

----------------------------------------------------------------------------------------------------
q_cb_exp_usd_mod
select t_q_cb_exp_mod.rep_month, t_q_cb_exp_mod.p01_code, t_q_cb_exp_mod.l_1, t_q_cb_exp_mod.l_2, t_q_cb_exp_mod.l_3, t_q_cb_exp_mod.l_4, t_q_cb_exp_mod.l_5, t_q_cb_exp_mod.l_6, t_q_cb_exp_mod.month, t_q_cb_exp_mod.total_expense, t_q_cb_exp_mod.up_curr, iif([up_curr]="usd",[total_expense],iif([up_curr]="eur",[total_expense]*[r_eur_usd],[total_expense]*[r_try_usd])) as usd_expense, "usd" as up_curr_conv, t_q_cb_exp_mod.key_r_pc_l6
from t_q_cb_exp_mod left join q_monthly_curr_rates_mod_crosstab on t_q_cb_exp_mod.month = q_monthly_curr_rates_mod_crosstab.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_usd_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_usd

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_usd_with_dummy_mod
select 
		rep_month,
p01_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_usd_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_with_dummy
select 
		*
	from 
		q_cb_exp

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_with_dummy_mod
select 
		*
	from 
		q_cb_exp_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_calculation
select t_cb_inc_qty.rep_month, t_cb_inc_qty.pc, t_cb_inc_qty.l_1, t_cb_inc_qty.l_2, t_cb_inc_qty.l_3, t_cb_inc_qty.l_4, t_cb_inc_qty.l_5, t_cb_inc_qty.l_6, t_cb_inc_qty.inc_base_mon, iif([inc_rate] is null,1,1+[inc_rate]) as inc_rate_1, iif([inc_rate_pcode] is null,1,1+[inc_rate_pcode]) as inc_rate_2, t_cb_inc_wbs.up, t_cb_inc_wbs.currency, [up]*[inc_rate_1]*[inc_rate_2] as up_total, t_cb_inc_qty.inc_base_qty, [up_total]*[inc_base_qty] as inc_total, t_cb_inc_qty.key_r_pc_l6
from ((t_cb_inc_qty left join t_cb_inc_esc_rates_l6 on (t_cb_inc_qty.inc_base_mon = t_cb_inc_esc_rates_l6.month) and (t_cb_inc_qty.l_6 = t_cb_inc_esc_rates_l6.c_l6) and (t_cb_inc_qty.l_5 = t_cb_inc_esc_rates_l6.c_l5) and (t_cb_inc_qty.l_4 = t_cb_inc_esc_rates_l6.c_l4) and (t_cb_inc_qty.l_3 = t_cb_inc_esc_rates_l6.c_l3) and (t_cb_inc_qty.l_2 = t_cb_inc_esc_rates_l6.c_l2) and (t_cb_inc_qty.l_1 = t_cb_inc_esc_rates_l6.c_l1) and (t_cb_inc_qty.pc = t_cb_inc_esc_rates_l6.p01_code) and (t_cb_inc_qty.rep_month = t_cb_inc_esc_rates_l6.rep_month)) left join t_cb_inc_esc_rates_pcode on (t_cb_inc_qty.inc_base_mon = t_cb_inc_esc_rates_pcode.month) and (t_cb_inc_qty.pc = t_cb_inc_esc_rates_pcode.p01_code) and (t_cb_inc_qty.rep_month = t_cb_inc_esc_rates_pcode.rep_month)) left join t_cb_inc_wbs on t_cb_inc_qty.key_r_pc_l6 = t_cb_inc_wbs.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_eur_with_dummy_crosstab
transform sum(q_cb_inc_eur_with_dummy.eur_income) as eur_income
select q_cb_inc_eur_with_dummy.rep_month, q_cb_inc_eur_with_dummy.pc, q_cb_inc_eur_with_dummy.l_1, q_cb_inc_eur_with_dummy.l_2, q_cb_inc_eur_with_dummy.l_3, q_cb_inc_eur_with_dummy.l_4, q_cb_inc_eur_with_dummy.l_5, q_cb_inc_eur_with_dummy.l_6, q_cb_inc_eur_with_dummy.up_curr_conv
from q_cb_inc_eur_with_dummy
group by q_cb_inc_eur_with_dummy.rep_month, q_cb_inc_eur_with_dummy.pc, q_cb_inc_eur_with_dummy.l_1, q_cb_inc_eur_with_dummy.l_2, q_cb_inc_eur_with_dummy.l_3, q_cb_inc_eur_with_dummy.l_4, q_cb_inc_eur_with_dummy.l_5, q_cb_inc_eur_with_dummy.l_6, q_cb_inc_eur_with_dummy.up_curr_conv
pivot q_cb_inc_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_eur_with_dummy_crosstab_mod
transform sum(q_cb_inc_eur_with_dummy_mod.eur_income) as eur_income
select q_cb_inc_eur_with_dummy_mod.rep_month, q_cb_inc_eur_with_dummy_mod.pc, q_cb_inc_eur_with_dummy_mod.l_1, q_cb_inc_eur_with_dummy_mod.l_2, q_cb_inc_eur_with_dummy_mod.l_3, q_cb_inc_eur_with_dummy_mod.l_4, q_cb_inc_eur_with_dummy_mod.l_5, q_cb_inc_eur_with_dummy_mod.l_6, q_cb_inc_eur_with_dummy_mod.up_curr_conv
from q_cb_inc_eur_with_dummy_mod
group by q_cb_inc_eur_with_dummy_mod.rep_month, q_cb_inc_eur_with_dummy_mod.pc, q_cb_inc_eur_with_dummy_mod.l_1, q_cb_inc_eur_with_dummy_mod.l_2, q_cb_inc_eur_with_dummy_mod.l_3, q_cb_inc_eur_with_dummy_mod.l_4, q_cb_inc_eur_with_dummy_mod.l_5, q_cb_inc_eur_with_dummy_mod.l_6, q_cb_inc_eur_with_dummy_mod.up_curr_conv
pivot q_cb_inc_eur_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_try_with_dummy_crosstab
transform sum(q_cb_inc_try_with_dummy.try_income) as try_income
select q_cb_inc_try_with_dummy.rep_month, q_cb_inc_try_with_dummy.pc, q_cb_inc_try_with_dummy.l_1, q_cb_inc_try_with_dummy.l_2, q_cb_inc_try_with_dummy.l_3, q_cb_inc_try_with_dummy.l_4, q_cb_inc_try_with_dummy.l_5, q_cb_inc_try_with_dummy.l_6, q_cb_inc_try_with_dummy.up_curr_conv
from q_cb_inc_try_with_dummy
group by q_cb_inc_try_with_dummy.rep_month, q_cb_inc_try_with_dummy.pc, q_cb_inc_try_with_dummy.l_1, q_cb_inc_try_with_dummy.l_2, q_cb_inc_try_with_dummy.l_3, q_cb_inc_try_with_dummy.l_4, q_cb_inc_try_with_dummy.l_5, q_cb_inc_try_with_dummy.l_6, q_cb_inc_try_with_dummy.up_curr_conv
pivot q_cb_inc_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_try_with_dummy_crosstab_mod
transform sum(q_cb_inc_try_with_dummy_mod.try_income) as try_income
select q_cb_inc_try_with_dummy_mod.rep_month, q_cb_inc_try_with_dummy_mod.pc, q_cb_inc_try_with_dummy_mod.l_1, q_cb_inc_try_with_dummy_mod.l_2, q_cb_inc_try_with_dummy_mod.l_3, q_cb_inc_try_with_dummy_mod.l_4, q_cb_inc_try_with_dummy_mod.l_5, q_cb_inc_try_with_dummy_mod.l_6, q_cb_inc_try_with_dummy_mod.up_curr_conv
from q_cb_inc_try_with_dummy_mod
group by q_cb_inc_try_with_dummy_mod.rep_month, q_cb_inc_try_with_dummy_mod.pc, q_cb_inc_try_with_dummy_mod.l_1, q_cb_inc_try_with_dummy_mod.l_2, q_cb_inc_try_with_dummy_mod.l_3, q_cb_inc_try_with_dummy_mod.l_4, q_cb_inc_try_with_dummy_mod.l_5, q_cb_inc_try_with_dummy_mod.l_6, q_cb_inc_try_with_dummy_mod.up_curr_conv
pivot q_cb_inc_try_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_usd_with_dummy_crosstab
transform sum(q_cb_inc_usd_with_dummy.usd_income) as usd_income
select q_cb_inc_usd_with_dummy.rep_month, q_cb_inc_usd_with_dummy.pc, q_cb_inc_usd_with_dummy.l_1, q_cb_inc_usd_with_dummy.l_2, q_cb_inc_usd_with_dummy.l_3, q_cb_inc_usd_with_dummy.l_4, q_cb_inc_usd_with_dummy.l_5, q_cb_inc_usd_with_dummy.l_6, q_cb_inc_usd_with_dummy.up_curr_conv
from q_cb_inc_usd_with_dummy
group by q_cb_inc_usd_with_dummy.rep_month, q_cb_inc_usd_with_dummy.pc, q_cb_inc_usd_with_dummy.l_1, q_cb_inc_usd_with_dummy.l_2, q_cb_inc_usd_with_dummy.l_3, q_cb_inc_usd_with_dummy.l_4, q_cb_inc_usd_with_dummy.l_5, q_cb_inc_usd_with_dummy.l_6, q_cb_inc_usd_with_dummy.up_curr_conv
pivot q_cb_inc_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_usd_with_dummy_crosstab_mod
transform sum(q_cb_inc_usd_with_dummy_mod.usd_income) as usd_income
select q_cb_inc_usd_with_dummy_mod.rep_month, q_cb_inc_usd_with_dummy_mod.pc, q_cb_inc_usd_with_dummy_mod.l_1, q_cb_inc_usd_with_dummy_mod.l_2, q_cb_inc_usd_with_dummy_mod.l_3, q_cb_inc_usd_with_dummy_mod.l_4, q_cb_inc_usd_with_dummy_mod.l_5, q_cb_inc_usd_with_dummy_mod.l_6, q_cb_inc_usd_with_dummy_mod.up_curr_conv
from q_cb_inc_usd_with_dummy_mod
group by q_cb_inc_usd_with_dummy_mod.rep_month, q_cb_inc_usd_with_dummy_mod.pc, q_cb_inc_usd_with_dummy_mod.l_1, q_cb_inc_usd_with_dummy_mod.l_2, q_cb_inc_usd_with_dummy_mod.l_3, q_cb_inc_usd_with_dummy_mod.l_4, q_cb_inc_usd_with_dummy_mod.l_5, q_cb_inc_usd_with_dummy_mod.l_6, q_cb_inc_usd_with_dummy_mod.up_curr_conv
pivot q_cb_inc_usd_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_with_dummy_crosstab
transform sum(q_cb_inc_with_dummy.inc_total) as total_income
select q_cb_inc_with_dummy.rep_month, q_cb_inc_with_dummy.pc, q_cb_inc_with_dummy.l_1, q_cb_inc_with_dummy.l_2, q_cb_inc_with_dummy.l_3, q_cb_inc_with_dummy.l_4, q_cb_inc_with_dummy.l_5, q_cb_inc_with_dummy.l_6, q_cb_inc_with_dummy.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")) as exc_try, iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_inc_with_dummy
group by q_cb_inc_with_dummy.rep_month, q_cb_inc_with_dummy.pc, q_cb_inc_with_dummy.l_1, q_cb_inc_with_dummy.l_2, q_cb_inc_with_dummy.l_3, q_cb_inc_with_dummy.l_4, q_cb_inc_with_dummy.l_5, q_cb_inc_with_dummy.l_6, q_cb_inc_with_dummy.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")), iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")), iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_inc_with_dummy.inc_base_mon;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur
select t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6, t_cb_inc_total_st.inc_total, t_cb_inc_total_st.currency, iif([currency]="eur",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_eur],[inc_total]*[r_try_eur])) as eur_income, "eur" as up_curr_conv, t_cb_inc_total_st.inc_base_mon as [month], t_cb_inc_total_st.key_r_pc_l6
from t_cb_inc_total_st left join mon_curr_rates on (t_cb_inc_total_st.inc_base_mon = mon_curr_rates.month) and (t_cb_inc_total_st.rep_month = mon_curr_rates.rep_month)
order by t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_mod
select q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, iif([currency]="eur",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_eur],[inc_total]*[r_try_eur])) as eur_income, "eur" as up_curr_conv, q_cb_inc_total_mod.month as [month], q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.key_r_pc_l6
from q_cb_inc_total_mod left join q_monthly_curr_rates_mod_crosstab on q_cb_inc_total_mod.month = q_monthly_curr_rates_mod_crosstab.month
where (((q_cb_inc_total_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_mod_mt
select q_cb_inc_eur_mod.rep_month, q_cb_inc_eur_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_eur_mod.month, q_cb_inc_eur_mod.eur_income, q_cb_inc_eur_mod.up_curr_conv, q_cb_inc_eur_mod.l_1, q_cb_inc_eur_mod.l_2, q_cb_inc_eur_mod.l_3, q_cb_inc_eur_mod.l_4, q_cb_inc_eur_mod.l_5, q_cb_inc_eur_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_eur_mod.key_r_pc_l6 into t_cb_inc_eur_mod_st
from (q_cb_inc_eur_mod left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_inc_eur_mod.l_3 = c3_code.c_l3) and (q_cb_inc_eur_mod.l_2 = c3_code.c_l2) and (q_cb_inc_eur_mod.l_1 = c3_code.c_l1)) left join c6_code on (q_cb_inc_eur_mod.l_6 = c6_code.c_l6) and (q_cb_inc_eur_mod.l_5 = c6_code.c_l5) and (q_cb_inc_eur_mod.l_4 = c6_code.c_l4) and (q_cb_inc_eur_mod.l_3 = c6_code.c_l3) and (q_cb_inc_eur_mod.l_2 = c6_code.c_l2) and (q_cb_inc_eur_mod.l_1 = c6_code.c_l1)
group by q_cb_inc_eur_mod.rep_month, q_cb_inc_eur_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_eur_mod.month, q_cb_inc_eur_mod.eur_income, q_cb_inc_eur_mod.up_curr_conv, q_cb_inc_eur_mod.l_1, q_cb_inc_eur_mod.l_2, q_cb_inc_eur_mod.l_3, q_cb_inc_eur_mod.l_4, q_cb_inc_eur_mod.l_5, q_cb_inc_eur_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_eur_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_mt
select q_cb_inc_eur.rep_month, q_cb_inc_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_eur.month, sum(q_cb_inc_eur.eur_income) as eur_income, q_cb_inc_eur.up_curr_conv, q_cb_inc_eur.l_1, q_cb_inc_eur.l_2, q_cb_inc_eur.l_3, q_cb_inc_eur.l_4, q_cb_inc_eur.l_5, q_cb_inc_eur.l_6, c6_code.desc_tr_l6, q_cb_inc_eur.key_r_pc_l6 into t_cb_inc_eur_st
from (q_cb_inc_eur left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_inc_eur.l_3 = c3_code.c_l3) and (q_cb_inc_eur.l_2 = c3_code.c_l2) and (q_cb_inc_eur.l_1 = c3_code.c_l1)) left join c6_code on (q_cb_inc_eur.l_6 = c6_code.c_l6) and (q_cb_inc_eur.l_5 = c6_code.c_l5) and (q_cb_inc_eur.l_4 = c6_code.c_l4) and (q_cb_inc_eur.l_3 = c6_code.c_l3) and (q_cb_inc_eur.l_2 = c6_code.c_l2) and (q_cb_inc_eur.l_1 = c6_code.c_l1)
group by q_cb_inc_eur.rep_month, q_cb_inc_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_eur.month, q_cb_inc_eur.up_curr_conv, q_cb_inc_eur.l_1, q_cb_inc_eur.l_2, q_cb_inc_eur.l_3, q_cb_inc_eur.l_4, q_cb_inc_eur.l_5, q_cb_inc_eur.l_6, c6_code.desc_tr_l6, q_cb_inc_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_income,
up_curr_conv,
key_r_pc_l6

from 
q_cb_inc_eur

union all select 
*
from 
q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_income,
up_curr_conv,
key_r_pc_l6

from 
q_cb_inc_eur_mod

union all select 
*
from 
q_bb_qty_dummy_full

where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_inc_qty
select *
from t_cb_inc_qty;

----------------------------------------------------------------------------------------------------
q_cb_inc_qty_crosstab
transform sum(q_cb_inc_qty.inc_base_qty) as inc_base_qty
select q_cb_inc_qty.rep_month, q_cb_inc_qty.pc, q_cb_inc_qty.l_1, q_cb_inc_qty.l_2, q_cb_inc_qty.l_3, q_cb_inc_qty.l_4, q_cb_inc_qty.l_5, q_cb_inc_qty.l_6
from q_cb_inc_qty
group by q_cb_inc_qty.rep_month, q_cb_inc_qty.pc, q_cb_inc_qty.l_1, q_cb_inc_qty.l_2, q_cb_inc_qty.l_3, q_cb_inc_qty.l_4, q_cb_inc_qty.l_5, q_cb_inc_qty.l_6
order by q_cb_inc_qty.rep_month, q_cb_inc_qty.pc, q_cb_inc_qty.l_1, q_cb_inc_qty.l_2, q_cb_inc_qty.l_3, q_cb_inc_qty.l_4, q_cb_inc_qty.l_5, q_cb_inc_qty.l_6
pivot q_cb_inc_qty.inc_base_mon;

----------------------------------------------------------------------------------------------------
q_cb_inc_total
select q_cb_inc_calculation.rep_month, q_cb_inc_calculation.pc, q_cb_inc_calculation.l_1, q_cb_inc_calculation.l_2, q_cb_inc_calculation.l_3, q_cb_inc_calculation.l_4, q_cb_inc_calculation.l_5, q_cb_inc_calculation.l_6, q_cb_inc_calculation.inc_base_mon, sum(q_cb_inc_calculation.inc_total) as inc_total, q_cb_inc_calculation.currency, q_cb_inc_calculation.key_r_pc_l6
from q_cb_inc_calculation
group by q_cb_inc_calculation.rep_month, q_cb_inc_calculation.pc, q_cb_inc_calculation.l_1, q_cb_inc_calculation.l_2, q_cb_inc_calculation.l_3, q_cb_inc_calculation.l_4, q_cb_inc_calculation.l_5, q_cb_inc_calculation.l_6, q_cb_inc_calculation.inc_base_mon, q_cb_inc_calculation.currency, q_cb_inc_calculation.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_total_mod
select t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6, t_cb_inc_total_st.inc_base_mon as [month], t_cb_inc_total_st.inc_total, t_cb_inc_total_st.currency, t_cb_inc_total_st.key_r_pc_l6
from t_cb_inc_total_st
where (((t_cb_inc_total_st.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_inc_total_mod_mt
select q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_total_mod.month, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_total_mod.key_r_pc_l6 into t_cb_inc_total_mod_st
from (q_cb_inc_total_mod left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_inc_total_mod.l_3 = c3_code.c_l3) and (q_cb_inc_total_mod.l_2 = c3_code.c_l2) and (q_cb_inc_total_mod.l_1 = c3_code.c_l1)) left join c6_code on (q_cb_inc_total_mod.l_6 = c6_code.c_l6) and (q_cb_inc_total_mod.l_5 = c6_code.c_l5) and (q_cb_inc_total_mod.l_4 = c6_code.c_l4) and (q_cb_inc_total_mod.l_3 = c6_code.c_l3) and (q_cb_inc_total_mod.l_2 = c6_code.c_l2) and (q_cb_inc_total_mod.l_1 = c6_code.c_l1)
group by q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_total_mod.month, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_total_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_total_mt
select q_cb_inc_total.rep_month, q_cb_inc_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_total.inc_base_mon, sum(q_cb_inc_total.inc_total) as inc_total, q_cb_inc_total.currency, q_cb_inc_total.l_1, q_cb_inc_total.l_2, q_cb_inc_total.l_3, q_cb_inc_total.l_4, q_cb_inc_total.l_5, q_cb_inc_total.l_6, c6_code.desc_tr_l6, q_cb_inc_total.key_r_pc_l6 into t_cb_inc_total_st
from (q_cb_inc_total left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_inc_total.l_3 = c3_code.c_l3) and (q_cb_inc_total.l_2 = c3_code.c_l2) and (q_cb_inc_total.l_1 = c3_code.c_l1)) left join c6_code on (q_cb_inc_total.l_6 = c6_code.c_l6) and (q_cb_inc_total.l_5 = c6_code.c_l5) and (q_cb_inc_total.l_4 = c6_code.c_l4) and (q_cb_inc_total.l_3 = c6_code.c_l3) and (q_cb_inc_total.l_2 = c6_code.c_l2) and (q_cb_inc_total.l_1 = c6_code.c_l1)
group by q_cb_inc_total.rep_month, q_cb_inc_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_total.inc_base_mon, q_cb_inc_total.currency, q_cb_inc_total.l_1, q_cb_inc_total.l_2, q_cb_inc_total.l_3, q_cb_inc_total.l_4, q_cb_inc_total.l_5, q_cb_inc_total.l_6, c6_code.desc_tr_l6, q_cb_inc_total.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_try
select t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6, t_cb_inc_total_st.inc_total, t_cb_inc_total_st.currency, iif([currency]="try",[inc_total],iif([currency]="eur",[inc_total]*[r_eur_try],[inc_total]*[r_usd_try])) as try_income, "try" as up_curr_conv, t_cb_inc_total_st.inc_base_mon as [month], t_cb_inc_total_st.key_r_pc_l6
from t_cb_inc_total_st left join mon_curr_rates on (t_cb_inc_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_inc_total_st.inc_base_mon = mon_curr_rates.month);

----------------------------------------------------------------------------------------------------
q_cb_inc_try_mod
select q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, iif([currency]="try",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_try],[inc_total]*[r_eur_try])) as try_income, "try" as up_curr_conv, q_cb_inc_total_mod.month as [month], q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.key_r_pc_l6
from q_cb_inc_total_mod left join q_monthly_curr_rates_mod_crosstab on q_cb_inc_total_mod.month = q_monthly_curr_rates_mod_crosstab.month
where (((q_cb_inc_total_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6;

----------------------------------------------------------------------------------------------------
q_cb_inc_try_mod_mt
select q_cb_inc_try_mod.rep_month, q_cb_inc_try_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_try_mod.month, q_cb_inc_try_mod.try_income, q_cb_inc_try_mod.up_curr_conv, q_cb_inc_try_mod.l_1, q_cb_inc_try_mod.l_2, q_cb_inc_try_mod.l_3, q_cb_inc_try_mod.l_4, q_cb_inc_try_mod.l_5, q_cb_inc_try_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_try_mod.key_r_pc_l6 into t_cb_inc_try_mod_st
from (q_cb_inc_try_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_inc_try_mod.l_1 = c3_code.c_l1) and (q_cb_inc_try_mod.l_2 = c3_code.c_l2) and (q_cb_inc_try_mod.l_3 = c3_code.c_l3)) left join c6_code on (q_cb_inc_try_mod.l_1 = c6_code.c_l1) and (q_cb_inc_try_mod.l_2 = c6_code.c_l2) and (q_cb_inc_try_mod.l_3 = c6_code.c_l3) and (q_cb_inc_try_mod.l_4 = c6_code.c_l4) and (q_cb_inc_try_mod.l_5 = c6_code.c_l5) and (q_cb_inc_try_mod.l_6 = c6_code.c_l6)
group by q_cb_inc_try_mod.rep_month, q_cb_inc_try_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_try_mod.month, q_cb_inc_try_mod.try_income, q_cb_inc_try_mod.up_curr_conv, q_cb_inc_try_mod.l_1, q_cb_inc_try_mod.l_2, q_cb_inc_try_mod.l_3, q_cb_inc_try_mod.l_4, q_cb_inc_try_mod.l_5, q_cb_inc_try_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_try_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_try_mt
select q_cb_inc_try.rep_month, q_cb_inc_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_try.month, sum(q_cb_inc_try.try_income) as try_income, q_cb_inc_try.up_curr_conv, q_cb_inc_try.l_1, q_cb_inc_try.l_2, q_cb_inc_try.l_3, q_cb_inc_try.l_4, q_cb_inc_try.l_5, q_cb_inc_try.l_6, c6_code.desc_tr_l6, q_cb_inc_try.key_r_pc_l6 into t_cb_inc_try_st
from (q_cb_inc_try left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_inc_try.l_1 = c3_code.c_l1) and (q_cb_inc_try.l_2 = c3_code.c_l2) and (q_cb_inc_try.l_3 = c3_code.c_l3)) left join c6_code on (q_cb_inc_try.l_1 = c6_code.c_l1) and (q_cb_inc_try.l_2 = c6_code.c_l2) and (q_cb_inc_try.l_3 = c6_code.c_l3) and (q_cb_inc_try.l_4 = c6_code.c_l4) and (q_cb_inc_try.l_5 = c6_code.c_l5) and (q_cb_inc_try.l_6 = c6_code.c_l6)
group by q_cb_inc_try.rep_month, q_cb_inc_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_try.month, q_cb_inc_try.up_curr_conv, q_cb_inc_try.l_1, q_cb_inc_try.l_2, q_cb_inc_try.l_3, q_cb_inc_try.l_4, q_cb_inc_try.l_5, q_cb_inc_try.l_6, c6_code.desc_tr_l6, q_cb_inc_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_try_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_inc_try

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_try_with_dummy_mod
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_inc_try_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full


where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_inc_usd
select t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6, t_cb_inc_total_st.inc_total, t_cb_inc_total_st.currency, iif([currency]="usd",[inc_total],iif([currency]="eur",[inc_total]*[r_eur_usd],[inc_total]*[r_try_usd])) as usd_income, "usd" as up_curr_conv, t_cb_inc_total_st.inc_base_mon as [month], t_cb_inc_total_st.key_r_pc_l6, mon_curr_rates.r_usd_try, mon_curr_rates.r_try_usd
from t_cb_inc_total_st left join mon_curr_rates on (t_cb_inc_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_inc_total_st.inc_base_mon = mon_curr_rates.month);

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_mod
select q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, iif([currency]="usd",[inc_total],iif([currency]="eur",[inc_total]*[r_eur_usd],[inc_total]*[r_try_usd])) as usd_income, "usd" as up_curr_conv, q_cb_inc_total_mod.month as [month], q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.key_r_pc_l6
from q_cb_inc_total_mod left join q_monthly_curr_rates_mod_crosstab on q_cb_inc_total_mod.month = q_monthly_curr_rates_mod_crosstab.month
where (((q_cb_inc_total_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6;

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_mod_mt
select q_cb_inc_usd_mod.rep_month, q_cb_inc_usd_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_usd_mod.month, q_cb_inc_usd_mod.usd_income, q_cb_inc_usd_mod.up_curr_conv, q_cb_inc_usd_mod.l_1, q_cb_inc_usd_mod.l_2, q_cb_inc_usd_mod.l_3, q_cb_inc_usd_mod.l_4, q_cb_inc_usd_mod.l_5, q_cb_inc_usd_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_usd_mod.key_r_pc_l6 into t_cb_inc_usd_mod_st
from (q_cb_inc_usd_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_inc_usd_mod.l_1 = c3_code.c_l1) and (q_cb_inc_usd_mod.l_2 = c3_code.c_l2) and (q_cb_inc_usd_mod.l_3 = c3_code.c_l3)) left join c6_code on (q_cb_inc_usd_mod.l_1 = c6_code.c_l1) and (q_cb_inc_usd_mod.l_2 = c6_code.c_l2) and (q_cb_inc_usd_mod.l_3 = c6_code.c_l3) and (q_cb_inc_usd_mod.l_4 = c6_code.c_l4) and (q_cb_inc_usd_mod.l_5 = c6_code.c_l5) and (q_cb_inc_usd_mod.l_6 = c6_code.c_l6)
group by q_cb_inc_usd_mod.rep_month, q_cb_inc_usd_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_usd_mod.month, q_cb_inc_usd_mod.usd_income, q_cb_inc_usd_mod.up_curr_conv, q_cb_inc_usd_mod.l_1, q_cb_inc_usd_mod.l_2, q_cb_inc_usd_mod.l_3, q_cb_inc_usd_mod.l_4, q_cb_inc_usd_mod.l_5, q_cb_inc_usd_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_usd_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_mt
select q_cb_inc_usd.rep_month, q_cb_inc_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_usd.month, sum(q_cb_inc_usd.usd_income) as usd_income, q_cb_inc_usd.up_curr_conv, q_cb_inc_usd.l_1, q_cb_inc_usd.l_2, q_cb_inc_usd.l_3, q_cb_inc_usd.l_4, q_cb_inc_usd.l_5, q_cb_inc_usd.l_6, c6_code.desc_tr_l6, q_cb_inc_usd.key_r_pc_l6 into t_cb_inc_usd_st
from (q_cb_inc_usd left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_inc_usd.l_1 = c3_code.c_l1) and (q_cb_inc_usd.l_2 = c3_code.c_l2) and (q_cb_inc_usd.l_3 = c3_code.c_l3)) left join c6_code on (q_cb_inc_usd.l_1 = c6_code.c_l1) and (q_cb_inc_usd.l_2 = c6_code.c_l2) and (q_cb_inc_usd.l_3 = c6_code.c_l3) and (q_cb_inc_usd.l_4 = c6_code.c_l4) and (q_cb_inc_usd.l_5 = c6_code.c_l5) and (q_cb_inc_usd.l_6 = c6_code.c_l6)
group by q_cb_inc_usd.rep_month, q_cb_inc_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_usd.month, q_cb_inc_usd.up_curr_conv, q_cb_inc_usd.l_1, q_cb_inc_usd.l_2, q_cb_inc_usd.l_3, q_cb_inc_usd.l_4, q_cb_inc_usd.l_5, q_cb_inc_usd.l_6, c6_code.desc_tr_l6, q_cb_inc_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_income,
up_curr_conv,
key_r_pc_l6


	from 
		q_cb_inc_usd

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_with_dummy_mod
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_inc_usd_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full


where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_inc_with_dummy
select 
		*
	from 
		q_cb_inc_total

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_with_dummy_crosstab_mod
transform sum(q_cb_inc_with_dummy_mod.inc_total) as total_income
select q_cb_inc_with_dummy_mod.rep_month, q_cb_inc_with_dummy_mod.pc, q_cb_inc_with_dummy_mod.l_1, q_cb_inc_with_dummy_mod.l_2, q_cb_inc_with_dummy_mod.l_3, q_cb_inc_with_dummy_mod.l_4, q_cb_inc_with_dummy_mod.l_5, q_cb_inc_with_dummy_mod.l_6, q_cb_inc_with_dummy_mod.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")) as exc_try, iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_inc_with_dummy_mod
group by q_cb_inc_with_dummy_mod.rep_month, q_cb_inc_with_dummy_mod.pc, q_cb_inc_with_dummy_mod.l_1, q_cb_inc_with_dummy_mod.l_2, q_cb_inc_with_dummy_mod.l_3, q_cb_inc_with_dummy_mod.l_4, q_cb_inc_with_dummy_mod.l_5, q_cb_inc_with_dummy_mod.l_6, q_cb_inc_with_dummy_mod.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")), iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")), iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_inc_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_with_dummy_mod
select 
		*
	from 
		q_cb_inc_total_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full

where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_activem
select q_cb_qty_activem_works_monthly.rep_month, mon_curr_rates.r_eur_try, mon_curr_rates.r_eur_usd, mon_curr_rates.r_usd_eur, mon_curr_rates.r_usd_try, q_cb_qty_activem_works_monthly.exp_cb_mon
from q_cb_qty_activem_works_monthly left join mon_curr_rates on (q_cb_qty_activem_works_monthly.exp_cb_mon = mon_curr_rates.month) and (q_cb_qty_activem_works_monthly.rep_month = mon_curr_rates.rep_month)
group by q_cb_qty_activem_works_monthly.rep_month, mon_curr_rates.r_eur_try, mon_curr_rates.r_eur_usd, mon_curr_rates.r_usd_eur, mon_curr_rates.r_usd_try, q_cb_qty_activem_works_monthly.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_activem_mod
select q_cb_active_months_res_qty_mod.rep_month, q_cb_active_months_res_qty_mod.pc, q_cb_active_months_res_qty_mod.l_1, q_cb_active_months_res_qty_mod.l_2, q_cb_active_months_res_qty_mod.l_3, q_cb_active_months_res_qty_mod.l_4, q_cb_active_months_res_qty_mod.l_5, q_cb_active_months_res_qty_mod.l_6, q_cb_active_months_res_qty_mod.rs_l1, q_cb_active_months_res_qty_mod.rs_l2, q_cb_active_months_res_qty_mod.rs_l3, q_cb_active_months_res_qty_mod.rs_l4, q_cb_active_months_res_qty_mod.rs_currency, q_cb_active_months_res_qty_mod.exp_cb_mon, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur, q_monthly_curr_rates_mod_crosstab.r_usd_try
from q_cb_active_months_res_qty_mod left join q_monthly_curr_rates_mod_crosstab on q_cb_active_months_res_qty_mod.exp_cb_mon = q_monthly_curr_rates_mod_crosstab.month
group by q_cb_active_months_res_qty_mod.rep_month, q_cb_active_months_res_qty_mod.pc, q_cb_active_months_res_qty_mod.l_1, q_cb_active_months_res_qty_mod.l_2, q_cb_active_months_res_qty_mod.l_3, q_cb_active_months_res_qty_mod.l_4, q_cb_active_months_res_qty_mod.l_5, q_cb_active_months_res_qty_mod.l_6, q_cb_active_months_res_qty_mod.rs_l1, q_cb_active_months_res_qty_mod.rs_l2, q_cb_active_months_res_qty_mod.rs_l3, q_cb_active_months_res_qty_mod.rs_l4, q_cb_active_months_res_qty_mod.rs_currency, q_cb_active_months_res_qty_mod.exp_cb_mon, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur, q_monthly_curr_rates_mod_crosstab.r_usd_try;

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_inc
select q_cb_qty_activem_works_monthly.rep_month, q_cb_qty_activem_works_monthly.pc, q_cb_qty_activem_works_monthly.exp_cb_mon, [q_cb_monthly_curr_rates_activem].[r_eur_try]/[q_cb_curr_base_val].[r_eur_try]-1 as rt_eur_try, [q_cb_monthly_curr_rates_activem].[r_eur_usd]/[q_cb_curr_base_val].[r_eur_usd]-1 as rt_eur_usd, [q_cb_monthly_curr_rates_activem].[r_usd_try]/[q_cb_curr_base_val].[r_usd_try]-1 as rt_usd_try, [q_cb_monthly_curr_rates_activem].[r_usd_eur]/[q_cb_curr_base_val].[r_usd_eur]-1 as rt_usd_eur
from (q_cb_qty_activem_works_monthly left join q_cb_monthly_curr_rates_activem on (q_cb_qty_activem_works_monthly.exp_cb_mon = q_cb_monthly_curr_rates_activem.exp_cb_mon) and (q_cb_qty_activem_works_monthly.rep_month = q_cb_monthly_curr_rates_activem.rep_month)) left join q_cb_curr_base_val on q_cb_qty_activem_works_monthly.rep_month = q_cb_curr_base_val.rep_month
group by q_cb_qty_activem_works_monthly.rep_month, q_cb_qty_activem_works_monthly.pc, q_cb_qty_activem_works_monthly.exp_cb_mon, [q_cb_monthly_curr_rates_activem].[r_eur_try]/[q_cb_curr_base_val].[r_eur_try]-1, [q_cb_monthly_curr_rates_activem].[r_eur_usd]/[q_cb_curr_base_val].[r_eur_usd]-1, [q_cb_monthly_curr_rates_activem].[r_usd_try]/[q_cb_curr_base_val].[r_usd_try]-1, [q_cb_monthly_curr_rates_activem].[r_usd_eur]/[q_cb_curr_base_val].[r_usd_eur]-1;

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_inc_mod
select q_cb_qty_activem_works_monthly_mod.rep_month, q_cb_qty_activem_works_monthly_mod.pc, q_cb_qty_activem_works_monthly_mod.exp_cb_mon, [q_cb_monthly_curr_rates_activem_mod].[r_eur_try]/[q_cb_curr_base_val_mod].[r_eur_try]-1 as rt_eur_try, [q_cb_monthly_curr_rates_activem_mod].[r_eur_usd]/[q_cb_curr_base_val_mod].[r_eur_usd]-1 as rt_eur_usd, [q_cb_monthly_curr_rates_activem_mod].[r_usd_try]/[q_cb_curr_base_val_mod].[r_usd_try]-1 as rt_usd_try, [q_cb_monthly_curr_rates_activem_mod].[r_usd_eur]/[q_cb_curr_base_val_mod].[r_usd_eur]-1 as rt_usd_eur
from (q_cb_qty_activem_works_monthly_mod left join q_cb_monthly_curr_rates_activem_mod on (q_cb_qty_activem_works_monthly_mod.exp_cb_mon = q_cb_monthly_curr_rates_activem_mod.exp_cb_mon) and (q_cb_qty_activem_works_monthly_mod.rep_month = q_cb_monthly_curr_rates_activem_mod.rep_month)) left join q_cb_curr_base_val_mod on q_cb_qty_activem_works_monthly_mod.rep_month = q_cb_curr_base_val_mod.rep_month
group by q_cb_qty_activem_works_monthly_mod.rep_month, q_cb_qty_activem_works_monthly_mod.pc, q_cb_qty_activem_works_monthly_mod.exp_cb_mon, [q_cb_monthly_curr_rates_activem_mod].[r_eur_try]/[q_cb_curr_base_val_mod].[r_eur_try]-1, [q_cb_monthly_curr_rates_activem_mod].[r_eur_usd]/[q_cb_curr_base_val_mod].[r_eur_usd]-1, [q_cb_monthly_curr_rates_activem_mod].[r_usd_try]/[q_cb_curr_base_val_mod].[r_usd_try]-1, [q_cb_monthly_curr_rates_activem_mod].[r_usd_eur]/[q_cb_curr_base_val_mod].[r_usd_eur]-1;

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_lastm_mod
select q_monthly_curr_rates_mod_crosstab.month, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_usd_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur
from q_monthly_curr_rates_mod_crosstab
where (((q_monthly_curr_rates_mod_crosstab.month)=dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_lastm_mod_mt
select q_cb_monthly_curr_rates_lastm_mod.month, q_cb_monthly_curr_rates_lastm_mod.r_eur_try, q_cb_monthly_curr_rates_lastm_mod.r_usd_try, q_cb_monthly_curr_rates_lastm_mod.r_eur_usd, q_cb_monthly_curr_rates_lastm_mod.r_usd_eur into t_cb_monthly_curr_rates_lastm_mod_st
from q_cb_monthly_curr_rates_lastm_mod;

----------------------------------------------------------------------------------------------------
q_cb_pr_wbs
select t_cb_inc_total_st.rep_month
	,t_cb_inc_total_st.pc
	,t_cb_inc_total_st.l_1
	,t_cb_inc_total_st.l_2
	,t_cb_inc_total_st.l_3
	,t_cb_inc_total_st.l_4
	,t_cb_inc_total_st.l_5
	,t_cb_inc_total_st.l_6
	,t_cb_inc_total_st.currency
	,t_cb_inc_total_st.inc_base_mon as [month] 
	,t_cb_inc_total_st.key_r_pc_l6
from t_cb_inc_total_st 
group by t_cb_inc_total_st.rep_month
	,t_cb_inc_total_st.pc
	,t_cb_inc_total_st.l_1
	,t_cb_inc_total_st.l_2
	,t_cb_inc_total_st.l_3
	,t_cb_inc_total_st.l_4
	,t_cb_inc_total_st.l_5
	,t_cb_inc_total_st.l_6
	,t_cb_inc_total_st.currency
	,t_cb_inc_total_st.inc_base_mon 
	,t_cb_inc_total_st.key_r_pc_l6
having (((sum(t_cb_inc_total_st.[inc_total]))<>0)) 
union select t_q_cb_exp.rep_month
	,t_q_cb_exp.pc
	,t_q_cb_exp.l_1
	,t_q_cb_exp.l_2
	,t_q_cb_exp.l_3
	,t_q_cb_exp.l_4
	,t_q_cb_exp.l_5
	,t_q_cb_exp.l_6
	,t_q_cb_exp.up_curr
	,t_q_cb_exp.month as [month] 
	,t_q_cb_exp.key_r_pc_l6
from t_q_cb_exp 
group by t_q_cb_exp.rep_month
	,t_q_cb_exp.pc
	,t_q_cb_exp.l_1
	,t_q_cb_exp.l_2
	,t_q_cb_exp.l_3
	,t_q_cb_exp.l_4
	,t_q_cb_exp.l_5
	,t_q_cb_exp.l_6
	,t_q_cb_exp.up_curr
	,t_q_cb_exp.month 
	,t_q_cb_exp.key_r_pc_l6	
having (((sum(t_q_cb_exp.[total_expense]))<>0));

----------------------------------------------------------------------------------------------------
q_cb_pr_wbs_mod
select t_cb_inc_total_mod_st.rep_month
	,t_cb_inc_total_mod_st.pc
	,t_cb_inc_total_mod_st.l_1
	,t_cb_inc_total_mod_st.l_2
	,t_cb_inc_total_mod_st.l_3
	,t_cb_inc_total_mod_st.l_4
	,t_cb_inc_total_mod_st.l_5
	,t_cb_inc_total_mod_st.l_6
	,t_cb_inc_total_mod_st.currency
	,t_cb_inc_total_mod_st.month as [month] 
	,t_cb_inc_total_mod_st.key_r_pc_l6
from t_cb_inc_total_mod_st 
group by t_cb_inc_total_mod_st.rep_month
	,t_cb_inc_total_mod_st.pc
	,t_cb_inc_total_mod_st.l_1
	,t_cb_inc_total_mod_st.l_2
	,t_cb_inc_total_mod_st.l_3
	,t_cb_inc_total_mod_st.l_4
	,t_cb_inc_total_mod_st.l_5
	,t_cb_inc_total_mod_st.l_6
	,t_cb_inc_total_mod_st.currency
	,t_cb_inc_total_mod_st.month 
	,t_cb_inc_total_mod_st.key_r_pc_l6
having (((sum(t_cb_inc_total_mod_st.[inc_total]))<>0)) 
union select t_q_cb_exp_mod.rep_month
	,t_q_cb_exp_mod.p01_code
	,t_q_cb_exp_mod.l_1
	,t_q_cb_exp_mod.l_2
	,t_q_cb_exp_mod.l_3
	,t_q_cb_exp_mod.l_4
	,t_q_cb_exp_mod.l_5
	,t_q_cb_exp_mod.l_6
	,t_q_cb_exp_mod.up_curr
	,t_q_cb_exp_mod.month as [month] 
	,t_q_cb_exp_mod.key_r_pc_l6
from t_q_cb_exp_mod 
group by t_q_cb_exp_mod.rep_month
	,t_q_cb_exp_mod.p01_code
	,t_q_cb_exp_mod.l_1
	,t_q_cb_exp_mod.l_2
	,t_q_cb_exp_mod.l_3
	,t_q_cb_exp_mod.l_4
	,t_q_cb_exp_mod.l_5
	,t_q_cb_exp_mod.l_6
	,t_q_cb_exp_mod.up_curr
	,t_q_cb_exp_mod.month 
	,t_q_cb_exp_mod.key_r_pc_l6	
having (((sum(t_q_cb_exp_mod.[total_expense]))<>0));

----------------------------------------------------------------------------------------------------
q_cb_profit
select q_cb_pr_wbs.rep_month, q_cb_pr_wbs.pc, q_cb_pr_wbs.l_1, q_cb_pr_wbs.l_2, q_cb_pr_wbs.l_3, q_cb_pr_wbs.l_4, q_cb_pr_wbs.l_5, q_cb_pr_wbs.l_6, q_cb_pr_wbs.currency, q_cb_pr_wbs.month, iif([inc_total] is null,0,[inc_total]) as income, iif([total_expense] is null,0,[total_expense]) as expense, [income]-[expense] as profit, q_cb_pr_wbs.key_r_pc_l6
from (q_cb_pr_wbs left join t_cb_inc_total_st on (q_cb_pr_wbs.key_r_pc_l6 = t_cb_inc_total_st.key_r_pc_l6) and (q_cb_pr_wbs.month = t_cb_inc_total_st.inc_base_mon) and (q_cb_pr_wbs.currency = t_cb_inc_total_st.currency)) left join t_q_cb_exp on (q_cb_pr_wbs.key_r_pc_l6 = t_q_cb_exp.key_r_pc_l6) and (q_cb_pr_wbs.month = t_q_cb_exp.month) and (q_cb_pr_wbs.currency = t_q_cb_exp.up_curr)
order by q_cb_pr_wbs.rep_month, q_cb_pr_wbs.pc, q_cb_pr_wbs.l_1, q_cb_pr_wbs.l_2, q_cb_pr_wbs.l_3, q_cb_pr_wbs.l_4, q_cb_pr_wbs.l_5, q_cb_pr_wbs.l_6, q_cb_pr_wbs.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_eur_with_dummy_crosstab
transform sum(q_cb_profit_eur_with_dummy.profit) as profit
select q_cb_profit_eur_with_dummy.rep_month, q_cb_profit_eur_with_dummy.pc, q_cb_profit_eur_with_dummy.l_1, q_cb_profit_eur_with_dummy.l_2, q_cb_profit_eur_with_dummy.l_3, q_cb_profit_eur_with_dummy.l_4, q_cb_profit_eur_with_dummy.l_5, q_cb_profit_eur_with_dummy.l_6, q_cb_profit_eur_with_dummy.curr
from q_cb_profit_eur_with_dummy
group by q_cb_profit_eur_with_dummy.rep_month, q_cb_profit_eur_with_dummy.pc, q_cb_profit_eur_with_dummy.l_1, q_cb_profit_eur_with_dummy.l_2, q_cb_profit_eur_with_dummy.l_3, q_cb_profit_eur_with_dummy.l_4, q_cb_profit_eur_with_dummy.l_5, q_cb_profit_eur_with_dummy.l_6, q_cb_profit_eur_with_dummy.curr
order by q_cb_profit_eur_with_dummy.rep_month, q_cb_profit_eur_with_dummy.pc, q_cb_profit_eur_with_dummy.l_1, q_cb_profit_eur_with_dummy.l_2, q_cb_profit_eur_with_dummy.l_3, q_cb_profit_eur_with_dummy.l_4, q_cb_profit_eur_with_dummy.l_5, q_cb_profit_eur_with_dummy.l_6
pivot q_cb_profit_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_eur_with_dummy_crosstab_mod
transform sum(q_cb_profit_eur_with_dummy_mod.profit) as profit
select q_cb_profit_eur_with_dummy_mod.rep_month, q_cb_profit_eur_with_dummy_mod.pc, q_cb_profit_eur_with_dummy_mod.l_1, q_cb_profit_eur_with_dummy_mod.l_2, q_cb_profit_eur_with_dummy_mod.l_3, q_cb_profit_eur_with_dummy_mod.l_4, q_cb_profit_eur_with_dummy_mod.l_5, q_cb_profit_eur_with_dummy_mod.l_6, q_cb_profit_eur_with_dummy_mod.curr
from q_cb_profit_eur_with_dummy_mod
group by q_cb_profit_eur_with_dummy_mod.rep_month, q_cb_profit_eur_with_dummy_mod.pc, q_cb_profit_eur_with_dummy_mod.l_1, q_cb_profit_eur_with_dummy_mod.l_2, q_cb_profit_eur_with_dummy_mod.l_3, q_cb_profit_eur_with_dummy_mod.l_4, q_cb_profit_eur_with_dummy_mod.l_5, q_cb_profit_eur_with_dummy_mod.l_6, q_cb_profit_eur_with_dummy_mod.curr
order by q_cb_profit_eur_with_dummy_mod.rep_month, q_cb_profit_eur_with_dummy_mod.pc, q_cb_profit_eur_with_dummy_mod.l_1, q_cb_profit_eur_with_dummy_mod.l_2, q_cb_profit_eur_with_dummy_mod.l_3, q_cb_profit_eur_with_dummy_mod.l_4, q_cb_profit_eur_with_dummy_mod.l_5, q_cb_profit_eur_with_dummy_mod.l_6
pivot q_cb_profit_eur_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_try_with_dummy_crosstab
transform sum(q_cb_profit_try_with_dummy.profit) as profit
select q_cb_profit_try_with_dummy.rep_month, q_cb_profit_try_with_dummy.pc, q_cb_profit_try_with_dummy.l_1, q_cb_profit_try_with_dummy.l_2, q_cb_profit_try_with_dummy.l_3, q_cb_profit_try_with_dummy.l_4, q_cb_profit_try_with_dummy.l_5, q_cb_profit_try_with_dummy.l_6, q_cb_profit_try_with_dummy.curr
from q_cb_profit_try_with_dummy
group by q_cb_profit_try_with_dummy.rep_month, q_cb_profit_try_with_dummy.pc, q_cb_profit_try_with_dummy.l_1, q_cb_profit_try_with_dummy.l_2, q_cb_profit_try_with_dummy.l_3, q_cb_profit_try_with_dummy.l_4, q_cb_profit_try_with_dummy.l_5, q_cb_profit_try_with_dummy.l_6, q_cb_profit_try_with_dummy.curr
order by q_cb_profit_try_with_dummy.rep_month, q_cb_profit_try_with_dummy.pc, q_cb_profit_try_with_dummy.l_1, q_cb_profit_try_with_dummy.l_2, q_cb_profit_try_with_dummy.l_3, q_cb_profit_try_with_dummy.l_4, q_cb_profit_try_with_dummy.l_5, q_cb_profit_try_with_dummy.l_6
pivot q_cb_profit_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_try_with_dummy_crosstab_mod
transform sum(q_cb_profit_try_with_dummy_mod.profit) as profit
select q_cb_profit_try_with_dummy_mod.rep_month, q_cb_profit_try_with_dummy_mod.pc, q_cb_profit_try_with_dummy_mod.l_1, q_cb_profit_try_with_dummy_mod.l_2, q_cb_profit_try_with_dummy_mod.l_3, q_cb_profit_try_with_dummy_mod.l_4, q_cb_profit_try_with_dummy_mod.l_5, q_cb_profit_try_with_dummy_mod.l_6, q_cb_profit_try_with_dummy_mod.curr
from q_cb_profit_try_with_dummy_mod
group by q_cb_profit_try_with_dummy_mod.rep_month, q_cb_profit_try_with_dummy_mod.pc, q_cb_profit_try_with_dummy_mod.l_1, q_cb_profit_try_with_dummy_mod.l_2, q_cb_profit_try_with_dummy_mod.l_3, q_cb_profit_try_with_dummy_mod.l_4, q_cb_profit_try_with_dummy_mod.l_5, q_cb_profit_try_with_dummy_mod.l_6, q_cb_profit_try_with_dummy_mod.curr
order by q_cb_profit_try_with_dummy_mod.rep_month, q_cb_profit_try_with_dummy_mod.pc, q_cb_profit_try_with_dummy_mod.l_1, q_cb_profit_try_with_dummy_mod.l_2, q_cb_profit_try_with_dummy_mod.l_3, q_cb_profit_try_with_dummy_mod.l_4, q_cb_profit_try_with_dummy_mod.l_5, q_cb_profit_try_with_dummy_mod.l_6
pivot q_cb_profit_try_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_usd_with_dummy_crosstab
transform sum(q_cb_profit_usd_with_dummy.profit) as profit
select q_cb_profit_usd_with_dummy.rep_month, q_cb_profit_usd_with_dummy.pc, q_cb_profit_usd_with_dummy.l_1, q_cb_profit_usd_with_dummy.l_2, q_cb_profit_usd_with_dummy.l_3, q_cb_profit_usd_with_dummy.l_4, q_cb_profit_usd_with_dummy.l_5, q_cb_profit_usd_with_dummy.l_6, q_cb_profit_usd_with_dummy.curr
from q_cb_profit_usd_with_dummy
group by q_cb_profit_usd_with_dummy.rep_month, q_cb_profit_usd_with_dummy.pc, q_cb_profit_usd_with_dummy.l_1, q_cb_profit_usd_with_dummy.l_2, q_cb_profit_usd_with_dummy.l_3, q_cb_profit_usd_with_dummy.l_4, q_cb_profit_usd_with_dummy.l_5, q_cb_profit_usd_with_dummy.l_6, q_cb_profit_usd_with_dummy.curr
order by q_cb_profit_usd_with_dummy.rep_month, q_cb_profit_usd_with_dummy.pc, q_cb_profit_usd_with_dummy.l_1, q_cb_profit_usd_with_dummy.l_2, q_cb_profit_usd_with_dummy.l_3, q_cb_profit_usd_with_dummy.l_4, q_cb_profit_usd_with_dummy.l_5, q_cb_profit_usd_with_dummy.l_6
pivot q_cb_profit_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_usd_with_dummy_crosstab_mod
transform sum(q_cb_profit_usd_with_dummy_mod.profit) as profit
select q_cb_profit_usd_with_dummy_mod.rep_month, q_cb_profit_usd_with_dummy_mod.pc, q_cb_profit_usd_with_dummy_mod.l_1, q_cb_profit_usd_with_dummy_mod.l_2, q_cb_profit_usd_with_dummy_mod.l_3, q_cb_profit_usd_with_dummy_mod.l_4, q_cb_profit_usd_with_dummy_mod.l_5, q_cb_profit_usd_with_dummy_mod.l_6, q_cb_profit_usd_with_dummy_mod.curr
from q_cb_profit_usd_with_dummy_mod
group by q_cb_profit_usd_with_dummy_mod.rep_month, q_cb_profit_usd_with_dummy_mod.pc, q_cb_profit_usd_with_dummy_mod.l_1, q_cb_profit_usd_with_dummy_mod.l_2, q_cb_profit_usd_with_dummy_mod.l_3, q_cb_profit_usd_with_dummy_mod.l_4, q_cb_profit_usd_with_dummy_mod.l_5, q_cb_profit_usd_with_dummy_mod.l_6, q_cb_profit_usd_with_dummy_mod.curr
order by q_cb_profit_usd_with_dummy_mod.rep_month, q_cb_profit_usd_with_dummy_mod.pc, q_cb_profit_usd_with_dummy_mod.l_1, q_cb_profit_usd_with_dummy_mod.l_2, q_cb_profit_usd_with_dummy_mod.l_3, q_cb_profit_usd_with_dummy_mod.l_4, q_cb_profit_usd_with_dummy_mod.l_5, q_cb_profit_usd_with_dummy_mod.l_6
pivot q_cb_profit_usd_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_with_dummy_crosstab
transform sum(q_cb_profit_with_dummy.profit) as sumofprofit
select q_cb_profit_with_dummy.rep_month, q_cb_profit_with_dummy.pc, q_cb_profit_with_dummy.l_1, q_cb_profit_with_dummy.l_2, q_cb_profit_with_dummy.l_3, q_cb_profit_with_dummy.l_4, q_cb_profit_with_dummy.l_5, q_cb_profit_with_dummy.l_6, q_cb_profit_with_dummy.curr
from q_cb_profit_with_dummy
group by q_cb_profit_with_dummy.rep_month, q_cb_profit_with_dummy.pc, q_cb_profit_with_dummy.l_1, q_cb_profit_with_dummy.l_2, q_cb_profit_with_dummy.l_3, q_cb_profit_with_dummy.l_4, q_cb_profit_with_dummy.l_5, q_cb_profit_with_dummy.l_6, q_cb_profit_with_dummy.curr
order by q_cb_profit_with_dummy.rep_month, q_cb_profit_with_dummy.pc, q_cb_profit_with_dummy.l_1, q_cb_profit_with_dummy.l_2, q_cb_profit_with_dummy.l_3, q_cb_profit_with_dummy.l_4, q_cb_profit_with_dummy.l_5, q_cb_profit_with_dummy.l_6, q_cb_profit_with_dummy.month
pivot q_cb_profit_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur
select t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6, t_cb_profit_total_st.month, "eur" as [currency], iif([t_cb_profit_total_st].[currency]="usd",[t_cb_profit_total_st].[income]*[r_usd_eur],iif([t_cb_profit_total_st].[currency]="try",[t_cb_profit_total_st].[income]*[r_try_eur],[t_cb_profit_total_st].[income])) as income, iif([t_cb_profit_total_st].[currency]="usd",[t_cb_profit_total_st].[expense]*[r_usd_eur],iif([t_cb_profit_total_st].[currency]="try",[t_cb_profit_total_st].[expense]*[r_try_eur],[t_cb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_st.key_r_pc_l6
from t_cb_profit_total_st left join mon_curr_rates on (t_cb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_profit_total_st.month = mon_curr_rates.month)
order by t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_mod
select t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6, t_cb_profit_total_mod_st.month, "eur" as [currency], iif([t_cb_profit_total_mod_st].[currency]="usd",[t_cb_profit_total_mod_st].[income]*[r_usd_eur],iif([t_cb_profit_total_mod_st].[currency]="try",[t_cb_profit_total_mod_st].[income]*[r_try_eur],[t_cb_profit_total_mod_st].[income])) as income, iif([t_cb_profit_total_mod_st].[currency]="usd",[t_cb_profit_total_mod_st].[expense]*[r_usd_eur],iif([t_cb_profit_total_mod_st].[currency]="try",[t_cb_profit_total_mod_st].[expense]*[r_try_eur],[t_cb_profit_total_mod_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_mod_st.key_r_pc_l6
from t_cb_profit_total_mod_st left join q_monthly_curr_rates_mod_crosstab on t_cb_profit_total_mod_st.month = q_monthly_curr_rates_mod_crosstab.month
order by t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_mod_mt
select q_cb_profit_eur_mod.rep_month, q_cb_profit_eur_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, sum(q_cb_profit_eur_mod.expense) as expense, sum(q_cb_profit_eur_mod.income) as income, q_cb_profit_eur_mod.month, q_cb_profit_eur_mod.currency, q_cb_profit_eur_mod.l_1, q_cb_profit_eur_mod.l_2, q_cb_profit_eur_mod.l_3, q_cb_profit_eur_mod.l_4, q_cb_profit_eur_mod.l_5, q_cb_profit_eur_mod.l_6, sum(q_cb_profit_eur_mod.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_eur_mod.key_r_pc_l6 into t_cb_profit_eur_st
from ((q_cb_profit_eur_mod left join c3_code on (q_cb_profit_eur_mod.l_1 = c3_code.c_l1) and (q_cb_profit_eur_mod.l_2 = c3_code.c_l2) and (q_cb_profit_eur_mod.l_3 = c3_code.c_l3)) left join c2_code on (q_cb_profit_eur_mod.l_1 = c2_code.c_l1) and (q_cb_profit_eur_mod.l_2 = c2_code.c_l2)) left join c6_code on (q_cb_profit_eur_mod.l_1 = c6_code.c_l1) and (q_cb_profit_eur_mod.l_2 = c6_code.c_l2) and (q_cb_profit_eur_mod.l_3 = c6_code.c_l3) and (q_cb_profit_eur_mod.l_4 = c6_code.c_l4) and (q_cb_profit_eur_mod.l_5 = c6_code.c_l5) and (q_cb_profit_eur_mod.l_6 = c6_code.c_l6)
group by q_cb_profit_eur_mod.rep_month, q_cb_profit_eur_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_eur_mod.month, q_cb_profit_eur_mod.currency, q_cb_profit_eur_mod.l_1, q_cb_profit_eur_mod.l_2, q_cb_profit_eur_mod.l_3, q_cb_profit_eur_mod.l_4, q_cb_profit_eur_mod.l_5, q_cb_profit_eur_mod.l_6, c6_code.desc_tr_l6, q_cb_profit_eur_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_mt
select q_cb_profit_eur.rep_month, q_cb_profit_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, sum(q_cb_profit_eur.expense) as expense, sum(q_cb_profit_eur.income) as income, q_cb_profit_eur.month, q_cb_profit_eur.currency, q_cb_profit_eur.l_1, q_cb_profit_eur.l_2, q_cb_profit_eur.l_3, q_cb_profit_eur.l_4, q_cb_profit_eur.l_5, q_cb_profit_eur.l_6, sum(q_cb_profit_eur.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_eur.key_r_pc_l6 into t_cb_profit_eur_st
from ((q_cb_profit_eur left join c3_code on (q_cb_profit_eur.l_3 = c3_code.c_l3) and (q_cb_profit_eur.l_2 = c3_code.c_l2) and (q_cb_profit_eur.l_1 = c3_code.c_l1)) left join c2_code on (q_cb_profit_eur.l_2 = c2_code.c_l2) and (q_cb_profit_eur.l_1 = c2_code.c_l1)) left join c6_code on (q_cb_profit_eur.l_6 = c6_code.c_l6) and (q_cb_profit_eur.l_5 = c6_code.c_l5) and (q_cb_profit_eur.l_4 = c6_code.c_l4) and (q_cb_profit_eur.l_3 = c6_code.c_l3) and (q_cb_profit_eur.l_2 = c6_code.c_l2) and (q_cb_profit_eur.l_1 = c6_code.c_l1)
group by q_cb_profit_eur.rep_month, q_cb_profit_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_eur.month, q_cb_profit_eur.currency, q_cb_profit_eur.l_1, q_cb_profit_eur.l_2, q_cb_profit_eur.l_3, q_cb_profit_eur.l_4, q_cb_profit_eur.l_5, q_cb_profit_eur.l_6, c6_code.desc_tr_l6, q_cb_profit_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_eur

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_eur_mod

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full 


where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_profit_mod
select q_cb_pr_wbs_mod.rep_month, q_cb_pr_wbs_mod.pc, q_cb_pr_wbs_mod.l_1, q_cb_pr_wbs_mod.l_2, q_cb_pr_wbs_mod.l_3, q_cb_pr_wbs_mod.l_4, q_cb_pr_wbs_mod.l_5, q_cb_pr_wbs_mod.l_6, q_cb_pr_wbs_mod.currency, q_cb_pr_wbs_mod.month, iif([inc_total] is null,0,[inc_total]) as income, iif([total_expense] is null,0,[total_expense]) as expense, [income]-[expense] as profit, q_cb_pr_wbs_mod.key_r_pc_l6
from (q_cb_pr_wbs_mod left join t_cb_inc_total_mod_st on (q_cb_pr_wbs_mod.currency = t_cb_inc_total_mod_st.currency) and (q_cb_pr_wbs_mod.month = t_cb_inc_total_mod_st.month) and (q_cb_pr_wbs_mod.key_r_pc_l6 = t_cb_inc_total_mod_st.key_r_pc_l6)) left join t_q_cb_exp_mod on (q_cb_pr_wbs_mod.currency = t_q_cb_exp_mod.up_curr) and (q_cb_pr_wbs_mod.month = t_q_cb_exp_mod.month) and (q_cb_pr_wbs_mod.key_r_pc_l6 = t_q_cb_exp_mod.key_r_pc_l6)
order by q_cb_pr_wbs_mod.rep_month, q_cb_pr_wbs_mod.pc, q_cb_pr_wbs_mod.l_1, q_cb_pr_wbs_mod.l_2, q_cb_pr_wbs_mod.l_3, q_cb_pr_wbs_mod.l_4, q_cb_pr_wbs_mod.l_5, q_cb_pr_wbs_mod.l_6, q_cb_pr_wbs_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_total_mod_mt
select q_cb_profit_mod.rep_month, q_cb_profit_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_mod.month, sum(q_cb_profit_mod.expense) as expense, sum(q_cb_profit_mod.income) as income, q_cb_profit_mod.currency, q_cb_profit_mod.l_1, q_cb_profit_mod.l_2, q_cb_profit_mod.l_3, q_cb_profit_mod.l_4, q_cb_profit_mod.l_5, q_cb_profit_mod.l_6, sum(q_cb_profit_mod.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_mod.key_r_pc_l6 into t_cb_profit_total_mod_st
from ((q_cb_profit_mod left join c3_code on (q_cb_profit_mod.l_3 = c3_code.c_l3) and (q_cb_profit_mod.l_2 = c3_code.c_l2) and (q_cb_profit_mod.l_1 = c3_code.c_l1)) left join c2_code on (q_cb_profit_mod.l_2 = c2_code.c_l2) and (q_cb_profit_mod.l_1 = c2_code.c_l1)) left join c6_code on (q_cb_profit_mod.l_6 = c6_code.c_l6) and (q_cb_profit_mod.l_5 = c6_code.c_l5) and (q_cb_profit_mod.l_4 = c6_code.c_l4) and (q_cb_profit_mod.l_3 = c6_code.c_l3) and (q_cb_profit_mod.l_2 = c6_code.c_l2) and (q_cb_profit_mod.l_1 = c6_code.c_l1)
group by q_cb_profit_mod.rep_month, q_cb_profit_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_mod.month, q_cb_profit_mod.currency, q_cb_profit_mod.l_1, q_cb_profit_mod.l_2, q_cb_profit_mod.l_3, q_cb_profit_mod.l_4, q_cb_profit_mod.l_5, q_cb_profit_mod.l_6, c6_code.desc_tr_l6, q_cb_profit_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_total_mt
select q_cb_profit.rep_month, q_cb_profit.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit.month, q_cb_profit.expense, q_cb_profit.income, q_cb_profit.currency, q_cb_profit.l_1, q_cb_profit.l_2, q_cb_profit.l_3, q_cb_profit.l_4, q_cb_profit.l_5, q_cb_profit.l_6, q_cb_profit.profit, c6_code.desc_tr_l6, q_cb_profit.key_r_pc_l6 into t_cb_profit_total_st
from ((q_cb_profit left join c3_code on (q_cb_profit.l_1 = c3_code.c_l1) and (q_cb_profit.l_2 = c3_code.c_l2) and (q_cb_profit.l_3 = c3_code.c_l3)) left join c2_code on (q_cb_profit.l_1 = c2_code.c_l1) and (q_cb_profit.l_2 = c2_code.c_l2)) left join c6_code on (q_cb_profit.l_1 = c6_code.c_l1) and (q_cb_profit.l_2 = c6_code.c_l2) and (q_cb_profit.l_3 = c6_code.c_l3) and (q_cb_profit.l_4 = c6_code.c_l4) and (q_cb_profit.l_5 = c6_code.c_l5) and (q_cb_profit.l_6 = c6_code.c_l6)
group by q_cb_profit.rep_month, q_cb_profit.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit.month, q_cb_profit.expense, q_cb_profit.income, q_cb_profit.currency, q_cb_profit.l_1, q_cb_profit.l_2, q_cb_profit.l_3, q_cb_profit.l_4, q_cb_profit.l_5, q_cb_profit.l_6, q_cb_profit.profit, c6_code.desc_tr_l6, q_cb_profit.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try
select t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6, t_cb_profit_total_st.month, "try" as [currency], iif([t_cb_profit_total_st].[currency]="usd",[t_cb_profit_total_st].[income]*[r_usd_try],iif([t_cb_profit_total_st].[currency]="eur",[t_cb_profit_total_st].[income]*[r_eur_try],[t_cb_profit_total_st].[income])) as income, iif([t_cb_profit_total_st].[currency]="usd",[t_cb_profit_total_st].[expense]*[r_usd_try],iif([t_cb_profit_total_st].[currency]="eur",[t_cb_profit_total_st].[expense]*[r_eur_try],[t_cb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_st.key_r_pc_l6
from t_cb_profit_total_st left join mon_curr_rates on (t_cb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_profit_total_st.month = mon_curr_rates.month)
order by t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_mod
select t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6, t_cb_profit_total_mod_st.month, "try" as [currency], iif([t_cb_profit_total_mod_st].[currency]="usd",[t_cb_profit_total_mod_st].[income]*[r_usd_try],iif([t_cb_profit_total_mod_st].[currency]="eur",[t_cb_profit_total_mod_st].[income]*[r_eur_try],[t_cb_profit_total_mod_st].[income])) as income, iif([t_cb_profit_total_mod_st].[currency]="usd",[t_cb_profit_total_mod_st].[expense]*[r_usd_try],iif([t_cb_profit_total_mod_st].[currency]="eur",[t_cb_profit_total_mod_st].[expense]*[r_eur_try],[t_cb_profit_total_mod_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_mod_st.key_r_pc_l6
from t_cb_profit_total_mod_st left join q_monthly_curr_rates_mod_crosstab on t_cb_profit_total_mod_st.month = q_monthly_curr_rates_mod_crosstab.month
order by t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_mod_mt
select q_cb_profit_try_mod.rep_month, q_cb_profit_try_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_try_mod.month, sum(q_cb_profit_try_mod.expense) as expense, sum(q_cb_profit_try_mod.income) as income, q_cb_profit_try_mod.currency, q_cb_profit_try_mod.l_1, q_cb_profit_try_mod.l_2, q_cb_profit_try_mod.l_3, q_cb_profit_try_mod.l_4, q_cb_profit_try_mod.l_5, q_cb_profit_try_mod.l_6, sum(q_cb_profit_try_mod.profit) as profit, c6_code.desc_tr_l6 into t_cb_profit_mod_try_st
from ((q_cb_profit_try_mod left join c3_code on (q_cb_profit_try_mod.l_1 = c3_code.c_l1) and (q_cb_profit_try_mod.l_2 = c3_code.c_l2) and (q_cb_profit_try_mod.l_3 = c3_code.c_l3)) left join c2_code on (q_cb_profit_try_mod.l_1 = c2_code.c_l1) and (q_cb_profit_try_mod.l_2 = c2_code.c_l2)) left join c6_code on (q_cb_profit_try_mod.l_1 = c6_code.c_l1) and (q_cb_profit_try_mod.l_2 = c6_code.c_l2) and (q_cb_profit_try_mod.l_3 = c6_code.c_l3) and (q_cb_profit_try_mod.l_4 = c6_code.c_l4) and (q_cb_profit_try_mod.l_5 = c6_code.c_l5) and (q_cb_profit_try_mod.l_6 = c6_code.c_l6)
group by q_cb_profit_try_mod.rep_month, q_cb_profit_try_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_try_mod.month, q_cb_profit_try_mod.currency, q_cb_profit_try_mod.l_1, q_cb_profit_try_mod.l_2, q_cb_profit_try_mod.l_3, q_cb_profit_try_mod.l_4, q_cb_profit_try_mod.l_5, q_cb_profit_try_mod.l_6, c6_code.desc_tr_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_mt
select q_cb_profit_try.rep_month, q_cb_profit_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_try.month, sum(q_cb_profit_try.expense) as expense, sum(q_cb_profit_try.income) as income, q_cb_profit_try.currency, q_cb_profit_try.l_1, q_cb_profit_try.l_2, q_cb_profit_try.l_3, q_cb_profit_try.l_4, q_cb_profit_try.l_5, q_cb_profit_try.l_6, sum(q_cb_profit_try.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_try.key_r_pc_l6 into t_cb_profit_try_st
from ((q_cb_profit_try left join c3_code on (q_cb_profit_try.l_1 = c3_code.c_l1) and (q_cb_profit_try.l_2 = c3_code.c_l2) and (q_cb_profit_try.l_3 = c3_code.c_l3)) left join c2_code on (q_cb_profit_try.l_1 = c2_code.c_l1) and (q_cb_profit_try.l_2 = c2_code.c_l2)) left join c6_code on (q_cb_profit_try.l_1 = c6_code.c_l1) and (q_cb_profit_try.l_2 = c6_code.c_l2) and (q_cb_profit_try.l_3 = c6_code.c_l3) and (q_cb_profit_try.l_4 = c6_code.c_l4) and (q_cb_profit_try.l_5 = c6_code.c_l5) and (q_cb_profit_try.l_6 = c6_code.c_l6)
group by q_cb_profit_try.rep_month, q_cb_profit_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_try.month, q_cb_profit_try.currency, q_cb_profit_try.l_1, q_cb_profit_try.l_2, q_cb_profit_try.l_3, q_cb_profit_try.l_4, q_cb_profit_try.l_5, q_cb_profit_try.l_6, c6_code.desc_tr_l6, q_cb_profit_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_try

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_try_mod

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full




where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_profit_usd
select t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6, t_cb_profit_total_st.month, "usd" as [currency], iif([t_cb_profit_total_st].[currency]="eur",[t_cb_profit_total_st].[income]*[r_eur_usd],iif([t_cb_profit_total_st].[currency]="try",[t_cb_profit_total_st].[income]*[r_try_usd],[t_cb_profit_total_st].[income])) as income, iif([t_cb_profit_total_st].[currency]="eur",[t_cb_profit_total_st].[expense]*[r_eur_usd],iif([t_cb_profit_total_st].[currency]="try",[t_cb_profit_total_st].[expense]*[r_try_usd],[t_cb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_st.key_r_pc_l6
from t_cb_profit_total_st left join mon_curr_rates on (t_cb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_profit_total_st.month = mon_curr_rates.month)
order by t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_mod
select t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6, t_cb_profit_total_mod_st.month, "usd" as [currency], iif([t_cb_profit_total_mod_st].[currency]="eur",[t_cb_profit_total_mod_st].[income]*[r_eur_usd],iif([t_cb_profit_total_mod_st].[currency]="try",[t_cb_profit_total_mod_st].[income]*[r_try_usd],[t_cb_profit_total_mod_st].[income])) as income, iif([t_cb_profit_total_mod_st].[currency]="eur",[t_cb_profit_total_mod_st].[expense]*[r_eur_usd],iif([t_cb_profit_total_mod_st].[currency]="try",[t_cb_profit_total_mod_st].[expense]*[r_try_usd],[t_cb_profit_total_mod_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_mod_st.key_r_pc_l6
from t_cb_profit_total_mod_st left join q_monthly_curr_rates_mod_crosstab on t_cb_profit_total_mod_st.month = q_monthly_curr_rates_mod_crosstab.month
order by t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_mod_mt
select q_cb_profit_usd_mod.rep_month, q_cb_profit_usd_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_usd_mod.month, sum(q_cb_profit_usd_mod.expense) as expense, sum(q_cb_profit_usd_mod.income) as income, q_cb_profit_usd_mod.currency, q_cb_profit_usd_mod.l_1, q_cb_profit_usd_mod.l_2, q_cb_profit_usd_mod.l_3, q_cb_profit_usd_mod.l_4, q_cb_profit_usd_mod.l_5, q_cb_profit_usd_mod.l_6, sum(q_cb_profit_usd_mod.profit) as profit, c6_code.desc_tr_l6 into t_cb_profit_usd_mod_st
from ((q_cb_profit_usd_mod left join c3_code on (q_cb_profit_usd_mod.l_1 = c3_code.c_l1) and (q_cb_profit_usd_mod.l_2 = c3_code.c_l2) and (q_cb_profit_usd_mod.l_3 = c3_code.c_l3)) left join c2_code on (q_cb_profit_usd_mod.l_1 = c2_code.c_l1) and (q_cb_profit_usd_mod.l_2 = c2_code.c_l2)) left join c6_code on (q_cb_profit_usd_mod.l_1 = c6_code.c_l1) and (q_cb_profit_usd_mod.l_2 = c6_code.c_l2) and (q_cb_profit_usd_mod.l_3 = c6_code.c_l3) and (q_cb_profit_usd_mod.l_4 = c6_code.c_l4) and (q_cb_profit_usd_mod.l_5 = c6_code.c_l5) and (q_cb_profit_usd_mod.l_6 = c6_code.c_l6)
group by q_cb_profit_usd_mod.rep_month, q_cb_profit_usd_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_usd_mod.month, q_cb_profit_usd_mod.currency, q_cb_profit_usd_mod.l_1, q_cb_profit_usd_mod.l_2, q_cb_profit_usd_mod.l_3, q_cb_profit_usd_mod.l_4, q_cb_profit_usd_mod.l_5, q_cb_profit_usd_mod.l_6, c6_code.desc_tr_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_mt
select q_cb_profit_usd.rep_month, q_cb_profit_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_usd.month, sum(q_cb_profit_usd.expense) as expense, sum(q_cb_profit_usd.income) as income, q_cb_profit_usd.currency, q_cb_profit_usd.l_1, q_cb_profit_usd.l_2, q_cb_profit_usd.l_3, q_cb_profit_usd.l_4, q_cb_profit_usd.l_5, q_cb_profit_usd.l_6, sum(q_cb_profit_usd.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_usd.key_r_pc_l6 into t_cb_profit_usd_st
from ((q_cb_profit_usd left join c3_code on (q_cb_profit_usd.l_3 = c3_code.c_l3) and (q_cb_profit_usd.l_2 = c3_code.c_l2) and (q_cb_profit_usd.l_1 = c3_code.c_l1)) left join c2_code on (q_cb_profit_usd.l_2 = c2_code.c_l2) and (q_cb_profit_usd.l_1 = c2_code.c_l1)) left join c6_code on (q_cb_profit_usd.l_6 = c6_code.c_l6) and (q_cb_profit_usd.l_5 = c6_code.c_l5) and (q_cb_profit_usd.l_4 = c6_code.c_l4) and (q_cb_profit_usd.l_3 = c6_code.c_l3) and (q_cb_profit_usd.l_2 = c6_code.c_l2) and (q_cb_profit_usd.l_1 = c6_code.c_l1)
group by q_cb_profit_usd.rep_month, q_cb_profit_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_usd.month, q_cb_profit_usd.currency, q_cb_profit_usd.l_1, q_cb_profit_usd.l_2, q_cb_profit_usd.l_3, q_cb_profit_usd.l_4, q_cb_profit_usd.l_5, q_cb_profit_usd.l_6, c6_code.desc_tr_l6, q_cb_profit_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_usd

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_usd_mod

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full




where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_profit_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency as curr,
month,
profit

from 
q_cb_profit

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr as curr,
g_month as month,
total_expense as profit

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_profit_with_dummy_crosstab_mod
transform sum(q_cb_profit_with_dummy_mod.profit) as total_profit
select q_cb_profit_with_dummy_mod.rep_month, q_cb_profit_with_dummy_mod.pc, q_cb_profit_with_dummy_mod.l_1, q_cb_profit_with_dummy_mod.l_2, q_cb_profit_with_dummy_mod.l_3, q_cb_profit_with_dummy_mod.l_4, q_cb_profit_with_dummy_mod.l_5, q_cb_profit_with_dummy_mod.l_6, q_cb_profit_with_dummy_mod.curr, iif([curr]="eur","r_eur_try",iif([curr]="usd","r_usd_try","r_try_try")) as exc_try, iif([curr]="eur","r_eur_usd",iif([curr]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([curr]="eur","r_eur_eur",iif([curr]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_profit_with_dummy_mod
group by q_cb_profit_with_dummy_mod.rep_month, q_cb_profit_with_dummy_mod.pc, q_cb_profit_with_dummy_mod.l_1, q_cb_profit_with_dummy_mod.l_2, q_cb_profit_with_dummy_mod.l_3, q_cb_profit_with_dummy_mod.l_4, q_cb_profit_with_dummy_mod.l_5, q_cb_profit_with_dummy_mod.l_6, q_cb_profit_with_dummy_mod.curr, iif([curr]="eur","r_eur_try",iif([curr]="usd","r_usd_try","r_try_try")), iif([curr]="eur","r_eur_usd",iif([curr]="usd","r_usd_usd","r_try_usd")), iif([curr]="eur","r_eur_eur",iif([curr]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_profit_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency as curr,
month,
profit

from 
q_cb_profit_mod

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr as curr,
g_month as month,
total_expense as profit

	from 
		q_bb_qty_dummy_full

where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_project_months
select t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_001_projects.r03_s_name as name
from t_cb_profit_total_st left join t_001_projects on t_cb_profit_total_st.pc = t_001_projects.p_code
group by t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_001_projects.r03_s_name
order by t_cb_profit_total_st.rep_month desc;

----------------------------------------------------------------------------------------------------
q_cb_qty_activem_works
select t_cb_qty.key_r_pc_l6, t_cb_qty.exp_cb_mon
from t_cb_qty left join t_rep_month on t_cb_qty.rep_month = t_rep_month.rep_month
where (((t_cb_qty.exp_cb_mon)>t_rep_month.rep_month_date) and ((t_cb_qty.exp_cb_qty)<>0))
order by t_cb_qty.key_r_pc_l6, t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_qty_activem_works_mod
select t_cb_qty.key_r_pc_l6, t_cb_qty.exp_cb_mon
from t_cb_qty left join t_rep_month on t_cb_qty.rep_month = t_rep_month.rep_month
where (((t_cb_qty.exp_cb_mon)>t_rep_month.rep_month_date) and ((t_cb_qty.exp_cb_qty)<>0) and ((t_cb_qty.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by t_cb_qty.key_r_pc_l6, t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_qty_activem_works_monthly
select t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon
from t_cb_qty left join t_rep_month on t_cb_qty.rep_month = t_rep_month.rep_month
where (((t_cb_qty.exp_cb_mon)>t_rep_month.rep_month_date) and ((t_cb_qty.exp_cb_qty)<>0))
group by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon
order by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_qty_activem_works_monthly_mod
select t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon
from t_cb_qty left join t_rep_month on t_cb_qty.rep_month = t_rep_month.rep_month
where (((t_cb_qty.exp_cb_mon)>t_rep_month.rep_month_date) and ((t_cb_qty.exp_cb_qty)<>0))
group by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon
having (((t_cb_qty.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_qty_crosstab
transform sum(t_cb_qty.exp_cb_qty) as sumofexp_cb_qty
select t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.l_1, t_cb_qty.l_2, t_cb_qty.l_3, t_cb_qty.l_4, t_cb_qty.l_5, t_cb_qty.l_6
from t_cb_qty
group by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.l_1, t_cb_qty.l_2, t_cb_qty.l_3, t_cb_qty.l_4, t_cb_qty.l_5, t_cb_qty.l_6
order by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.l_1, t_cb_qty.l_2, t_cb_qty.l_3, t_cb_qty.l_4, t_cb_qty.l_5, t_cb_qty.l_6
pivot t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_res_up_market_coeff
select q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.rs_l1 as r_1_code, q_cb_up_pre_coeff_activem_indexes.rs_l2 as r_2_code, q_cb_up_pre_coeff_activem_indexes.rs_l3 as r_3_code, q_cb_up_pre_coeff_activem_indexes.rs_l4 as r_4_code, (1+[w_ufe]*[bb_ufe])*(1+[w_tufe]*[bb_tufe])*(1+[w_inf_usd]*[bb_inf_usd])*(1+[w_inf_eur]*[bb_inf_eur])*(1+[w_metal]*[bb_metal])*(1+[w_petrol]*[bb_petrol])*(1+[w_cement]*[bb_cement])*(1+[w_electricity]*[bb_electricity]) as up_cost_coeff, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon as g_month, q_cb_up_pre_coeff_activem_indexes.up_cost, q_cb_up_pre_coeff_activem_indexes.an_rs_quantity, r4_code.currency, q_cb_up_pre_coeff_activem_indexes.key_r4_simple, q_cb_up_pre_coeff_activem_indexes.key_r4, q_cb_up_pre_coeff_activem_indexes.key_r_pc_l6, q_cb_up_pre_coeff_activem_indexes.key_full, [key_full] & "." & [q_cb_up_pre_coeff_activem_indexes].[rs_currency] & "." & [q_cb_up_pre_coeff_activem_indexes].[exp_cb_mon] as key_full_comb
from q_cb_up_pre_coeff_activem_indexes left join r4_code on q_cb_up_pre_coeff_activem_indexes.key_r4_simple = r4_code.key_r4_simple
group by q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.rs_l1, q_cb_up_pre_coeff_activem_indexes.rs_l2, q_cb_up_pre_coeff_activem_indexes.rs_l3, q_cb_up_pre_coeff_activem_indexes.rs_l4, (1+[w_ufe]*[bb_ufe])*(1+[w_tufe]*[bb_tufe])*(1+[w_inf_usd]*[bb_inf_usd])*(1+[w_inf_eur]*[bb_inf_eur])*(1+[w_metal]*[bb_metal])*(1+[w_petrol]*[bb_petrol])*(1+[w_cement]*[bb_cement])*(1+[w_electricity]*[bb_electricity]), q_cb_up_pre_coeff_activem_indexes.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes.up_cost, q_cb_up_pre_coeff_activem_indexes.an_rs_quantity, r4_code.currency, q_cb_up_pre_coeff_activem_indexes.key_r4_simple, q_cb_up_pre_coeff_activem_indexes.key_r4, q_cb_up_pre_coeff_activem_indexes.key_r_pc_l6, q_cb_up_pre_coeff_activem_indexes.key_full, [key_full] & "." & [q_cb_up_pre_coeff_activem_indexes].[rs_currency] & "." & [q_cb_up_pre_coeff_activem_indexes].[exp_cb_mon]
order by q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.rs_l1, q_cb_up_pre_coeff_activem_indexes.rs_l2, q_cb_up_pre_coeff_activem_indexes.rs_l3, q_cb_up_pre_coeff_activem_indexes.rs_l4, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_res_up_market_coeff_mod
select q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.rs_l1 as r_1_code, q_cb_up_pre_coeff_activem_indexes_mod.rs_l2 as r_2_code, q_cb_up_pre_coeff_activem_indexes_mod.rs_l3 as r_3_code, q_cb_up_pre_coeff_activem_indexes_mod.rs_l4 as r_4_code, q_cb_up_pre_coeff_activem_indexes_mod.rs_currency as [currency], (1+[w_ufe]*[bb_ufe])*(1+[w_tufe]*[bb_tufe])*(1+[w_inf_usd]*[bb_inf_usd])*(1+[w_inf_eur]*[bb_inf_eur])*(1+[w_metal]*[bb_metal])*(1+[w_petrol]*[bb_petrol])*(1+[w_cement]*[bb_cement])*(1+[w_electricity]*[bb_electricity]) as up_cost_coeff, q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon as g_month, q_cb_up_pre_coeff_activem_indexes_mod.up_cost, q_cb_up_pre_coeff_activem_indexes_mod.an_rs_quantity, q_cb_up_pre_coeff_activem_indexes_mod.key_r4, q_cb_up_pre_coeff_activem_indexes_mod.key_r_pc_l6, q_cb_up_pre_coeff_activem_indexes_mod.key_full, q_cb_up_pre_coeff_activem_indexes_mod.key_r4_simple, [key_full] & "." & [q_cb_up_pre_coeff_activem_indexes_mod].[rs_currency] & "." & [q_cb_up_pre_coeff_activem_indexes_mod].[exp_cb_mon] as key_full_comb
from q_cb_up_pre_coeff_activem_indexes_mod left join r4_code on q_cb_up_pre_coeff_activem_indexes_mod.key_r4_simple = r4_code.key_r4_simple
group by q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.rs_l1, q_cb_up_pre_coeff_activem_indexes_mod.rs_l2, q_cb_up_pre_coeff_activem_indexes_mod.rs_l3, q_cb_up_pre_coeff_activem_indexes_mod.rs_l4, q_cb_up_pre_coeff_activem_indexes_mod.rs_currency, (1+[w_ufe]*[bb_ufe])*(1+[w_tufe]*[bb_tufe])*(1+[w_inf_usd]*[bb_inf_usd])*(1+[w_inf_eur]*[bb_inf_eur])*(1+[w_metal]*[bb_metal])*(1+[w_petrol]*[bb_petrol])*(1+[w_cement]*[bb_cement])*(1+[w_electricity]*[bb_electricity]), q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes_mod.up_cost, q_cb_up_pre_coeff_activem_indexes_mod.an_rs_quantity, q_cb_up_pre_coeff_activem_indexes_mod.key_r4, q_cb_up_pre_coeff_activem_indexes_mod.key_r_pc_l6, q_cb_up_pre_coeff_activem_indexes_mod.key_full, q_cb_up_pre_coeff_activem_indexes_mod.key_r4_simple, [key_full] & "." & [q_cb_up_pre_coeff_activem_indexes_mod].[rs_currency] & "." & [q_cb_up_pre_coeff_activem_indexes_mod].[exp_cb_mon]
order by q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.rs_l1, q_cb_up_pre_coeff_activem_indexes_mod.rs_l2, q_cb_up_pre_coeff_activem_indexes_mod.rs_l3, q_cb_up_pre_coeff_activem_indexes_mod.rs_l4, q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_data
select q_budget_wbs_union.l_1, q_budget_wbs_union.l_2, q_budget_wbs_union.l_3, q_budget_wbs_union.l_4, q_budget_wbs_union.l_5, q_budget_wbs_union.l_6, q_budget_wbs_union.up_curr, sum(iif([q_second_budget_gt].[incomegt] is null,"0",[q_second_budget_gt].[incomegt])) as incomegt_second, sum(iif([q_second_budget_gt].[expensegt] is null,"0",[q_second_budget_gt].[expensegt])) as expensegt_second, sum(iif([q_second_budget_gt].[profitgt] is null,"0",[q_second_budget_gt].[profitgt])) as profitgt_second, sum(iif([q_first_budget_gt].[incomegt] is null,"0",[q_first_budget_gt].[incomegt])) as incomegt_first, sum(iif([q_first_budget_gt].[expensegt] is null,"0",[q_first_budget_gt].[expensegt])) as expensegt_first, sum(iif([q_first_budget_gt].[profitgt] is null,"0",[q_first_budget_gt].[profitgt])) as profitgt_first, [incomegt_second]-[incomegt_first] as incomediffgt, [expensegt_second]-[expensegt_first] as expensediff_gt, [profitgt_second]-[profitgt_first] as profitdiff_gt, sum(iif([q_second_budget_rt_grouped].[incomert] is null,"0",[q_second_budget_rt_grouped].[incomert])) as incomert_second, sum(iif([q_second_budget_rt_grouped].[expensert] is null,"0",[q_second_budget_rt_grouped].[expensert])) as expensert_second, sum(iif([q_second_budget_rt_grouped].[profitrt] is null,"0",[q_second_budget_rt_grouped].[profitrt])) as profitrt_second, sum(iif([q_first_budget_rt_grouped].[incomert] is null,"0",[q_first_budget_rt_grouped].[incomert])) as incomert_first, sum(iif([q_first_budget_rt_grouped].[expensert] is null,"0",[q_first_budget_rt_grouped].[expensert])) as expensert_first, sum(iif([q_first_budget_rt_grouped].[profitrt] is null,"0",[q_first_budget_rt_grouped].[profitrt])) as profitrt_first, [incomert_second]-[incomert_first] as incomediffrt, [expensert_second]-[expensert_first] as expensediff_rt, [profitrt_second]-[profitrt_first] as profitdiff_rt, [incomegt_second]-[incomert_second] as incomerem_second, [expensegt_second]-[expensert_second] as expenserem_second, [profitgt_second]-[profitrt_second] as profitrem_second, [incomegt_first]-[incomert_first] as incomerem_first, [expensegt_first]-[expensert_first] as expenserem_first, [profitgt_first]-[profitrt_first] as profitrem_first, [incomerem_second]-[incomerem_first] as incomerem_diff, [expenserem_second]-[expenserem_first] as expenserem_diff, [profitrem_second]-[profitrem_first] as profitrem_diff, q_budget_wbs_union.desc_tr_l3, q_budget_wbs_union.desc_tr_l2, q_budget_wbs_union.desc_tr_l6, c5_code.desc_tr_l5, c4_code.desc_tr_l4
from (((((q_budget_wbs_union left join q_second_budget_gt on (q_budget_wbs_union.up_curr = q_second_budget_gt.up_curr) and (q_budget_wbs_union.l_6 = q_second_budget_gt.l_6) and (q_budget_wbs_union.l_5 = q_second_budget_gt.l_5) and (q_budget_wbs_union.l_4 = q_second_budget_gt.l_4) and (q_budget_wbs_union.l_3 = q_second_budget_gt.l_3) and (q_budget_wbs_union.l_2 = q_second_budget_gt.l_2) and (q_budget_wbs_union.l_1 = q_second_budget_gt.l_1)) left join q_first_budget_gt on (q_budget_wbs_union.up_curr = q_first_budget_gt.up_curr) and (q_budget_wbs_union.l_6 = q_first_budget_gt.l_6) and (q_budget_wbs_union.l_5 = q_first_budget_gt.l_5) and (q_budget_wbs_union.l_4 = q_first_budget_gt.l_4) and (q_budget_wbs_union.l_3 = q_first_budget_gt.l_3) and (q_budget_wbs_union.l_2 = q_first_budget_gt.l_2) and (q_budget_wbs_union.l_1 = q_first_budget_gt.l_1)) left join q_second_budget_rt_grouped on (q_budget_wbs_union.up_curr = q_second_budget_rt_grouped.up_curr) and (q_budget_wbs_union.l_6 = q_second_budget_rt_grouped.l_6) and (q_budget_wbs_union.l_5 = q_second_budget_rt_grouped.l_5) and (q_budget_wbs_union.l_4 = q_second_budget_rt_grouped.l_4) and (q_budget_wbs_union.l_3 = q_second_budget_rt_grouped.l_3) and (q_budget_wbs_union.l_2 = q_second_budget_rt_grouped.l_2) and (q_budget_wbs_union.l_1 = q_second_budget_rt_grouped.l_1)) left join q_first_budget_rt_grouped on (q_budget_wbs_union.up_curr = q_first_budget_rt_grouped.up_curr) and (q_budget_wbs_union.l_6 = q_first_budget_rt_grouped.l_6) and (q_budget_wbs_union.l_5 = q_first_budget_rt_grouped.l_5) and (q_budget_wbs_union.l_4 = q_first_budget_rt_grouped.l_4) and (q_budget_wbs_union.l_3 = q_first_budget_rt_grouped.l_3) and (q_budget_wbs_union.l_2 = q_first_budget_rt_grouped.l_2) and (q_budget_wbs_union.l_1 = q_first_budget_rt_grouped.l_1)) left join c5_code on (q_budget_wbs_union.l_5 = c5_code.c_l5) and (q_budget_wbs_union.l_4 = c5_code.c_l4) and (q_budget_wbs_union.l_3 = c5_code.c_l3) and (q_budget_wbs_union.l_2 = c5_code.c_l2) and (q_budget_wbs_union.l_1 = c5_code.c_l1)) left join c4_code on (q_budget_wbs_union.l_4 = c4_code.c_l4) and (q_budget_wbs_union.l_3 = c4_code.c_l3) and (q_budget_wbs_union.l_2 = c4_code.c_l2) and (q_budget_wbs_union.l_1 = c4_code.c_l1)
group by q_budget_wbs_union.l_1, q_budget_wbs_union.l_2, q_budget_wbs_union.l_3, q_budget_wbs_union.l_4, q_budget_wbs_union.l_5, q_budget_wbs_union.l_6, q_budget_wbs_union.up_curr, q_budget_wbs_union.desc_tr_l3, q_budget_wbs_union.desc_tr_l2, q_budget_wbs_union.desc_tr_l6, c5_code.desc_tr_l5, c4_code.desc_tr_l4;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_mod_usd_total
select sum(t_q_cb_exp_usd_mod.usd_expense) as total_usd_expense, t_q_cb_exp_usd_mod.rep_month
from t_q_cb_exp_usd_mod
group by t_q_cb_exp_usd_mod.rep_month
having (((t_q_cb_exp_usd_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_report_data
select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
incomegt_second as second_data_gt,
incomert_second as second_data_rt,
incomegt_first as first_data_gt,
incomert_first as first_data_rt,
incomerem_second as second_data_rem,
incomerem_first as first_data_rem,
incomegt_second - incomegt_first as gt_rem,
incomert_second - incomert_first as rt_rem,
incomerem_second - incomerem_first as rem_rem,
"1 - gelİr" as budget_type,
desc_tr_l5,
desc_tr_l4

	from 
		q_cb_sum_cons_data

where (incomegt_second + incomert_second + incomegt_first + incomert_first) <> 0

union

select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
expensegt_second,
expensert_second,
expensegt_first,
expensert_first,
expenserem_second,
expenserem_first,
expensegt_second - expensegt_first,
expensert_second - expensert_first as rt_rem,
expenserem_second - expenserem_first as rem_rem,
"2 - gİder" as budget_type,
desc_tr_l5,
desc_tr_l4

	from 
		q_cb_sum_cons_data

where  (expensegt_second + expensert_second + expensegt_first + expensert_first) <>0

union select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
profitgt_second,
profitrt_second,
profitgt_first,
profitrt_first,
profitrem_second,
profitrem_first,
profitgt_second - profitgt_first,
profitrt_second - profitrt_first as rt_rem,
profitrem_second - profitrem_first as rem_rem,
"3 - brüt kar" as budget_type,
desc_tr_l5,
desc_tr_l4

	from 
		q_cb_sum_cons_data

where  (profitgt_second + profitrt_second + profitgt_first + profitrt_first) <>0;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_report_data_lvl_4
select q_cb_sum_cons_report_data.l_1, q_cb_sum_cons_report_data.l_2, q_cb_sum_cons_report_data.l_3, q_cb_sum_cons_report_data.l_4, q_cb_sum_cons_report_data.l_5, q_cb_sum_cons_report_data.l_6, q_cb_sum_cons_report_data.up_curr, q_cb_sum_cons_report_data.desc_tr_l3, q_cb_sum_cons_report_data.desc_tr_l4, q_cb_sum_cons_report_data.desc_tr_l5, q_cb_sum_cons_report_data.desc_tr_l6, sum(q_cb_sum_cons_report_data.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data.budget_type, sum(q_cb_sum_cons_report_data.gt_rem) as gt_rem
from q_cb_sum_cons_report_data
group by q_cb_sum_cons_report_data.l_1, q_cb_sum_cons_report_data.l_2, q_cb_sum_cons_report_data.l_3, q_cb_sum_cons_report_data.l_4, q_cb_sum_cons_report_data.l_5, q_cb_sum_cons_report_data.l_6, q_cb_sum_cons_report_data.up_curr, q_cb_sum_cons_report_data.desc_tr_l3, q_cb_sum_cons_report_data.desc_tr_l4, q_cb_sum_cons_report_data.desc_tr_l5, q_cb_sum_cons_report_data.desc_tr_l6, q_cb_sum_cons_report_data.budget_type
having (((q_cb_sum_cons_report_data.l_1)='d') and ((q_cb_sum_cons_report_data.l_2)='01') and ((q_cb_sum_cons_report_data.l_3)='01'))
order by sum(q_cb_sum_cons_report_data.gt_rem) desc;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_report_data_lvl_5
select q_cb_sum_cons_report_data_lvl_4.l_1, q_cb_sum_cons_report_data_lvl_4.l_2, q_cb_sum_cons_report_data_lvl_4.l_3, q_cb_sum_cons_report_data_lvl_4.l_4, q_cb_sum_cons_report_data_lvl_4.l_5, q_cb_sum_cons_report_data_lvl_4.l_6, q_cb_sum_cons_report_data_lvl_4.up_curr, q_cb_sum_cons_report_data_lvl_4.desc_tr_l3, q_cb_sum_cons_report_data_lvl_4.desc_tr_l4, q_cb_sum_cons_report_data_lvl_4.desc_tr_l5, q_cb_sum_cons_report_data_lvl_4.desc_tr_l6, sum(q_cb_sum_cons_report_data_lvl_4.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data_lvl_4.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data_lvl_4.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data_lvl_4.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data_lvl_4.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data_lvl_4.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data_lvl_4.budget_type, sum(q_cb_sum_cons_report_data_lvl_4.gt_rem) as gt_rem
from q_cb_sum_cons_report_data_lvl_4
group by q_cb_sum_cons_report_data_lvl_4.l_1, q_cb_sum_cons_report_data_lvl_4.l_2, q_cb_sum_cons_report_data_lvl_4.l_3, q_cb_sum_cons_report_data_lvl_4.l_4, q_cb_sum_cons_report_data_lvl_4.l_5, q_cb_sum_cons_report_data_lvl_4.l_6, q_cb_sum_cons_report_data_lvl_4.up_curr, q_cb_sum_cons_report_data_lvl_4.desc_tr_l3, q_cb_sum_cons_report_data_lvl_4.desc_tr_l4, q_cb_sum_cons_report_data_lvl_4.desc_tr_l5, q_cb_sum_cons_report_data_lvl_4.desc_tr_l6, q_cb_sum_cons_report_data_lvl_4.budget_type
having (((q_cb_sum_cons_report_data_lvl_4.l_1)='d') and ((q_cb_sum_cons_report_data_lvl_4.l_2)='01') and ((q_cb_sum_cons_report_data_lvl_4.l_4)='11') and ((q_cb_sum_cons_report_data_lvl_4.l_3)='01'))
order by sum(q_cb_sum_cons_report_data_lvl_4.gt_rem) desc;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_usd_total
select sum(t_q_cb_exp_usd.usd_expense) as total_usd_expense, t_q_cb_exp_usd.rep_month
from t_q_cb_exp_usd
group by t_q_cb_exp_usd.rep_month
having (((t_q_cb_exp_usd.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_sum_projects_data
select q_budget_wbs_union_projects.pc, q_budget_wbs_union_projects.l_1, q_budget_wbs_union_projects.l_2, q_budget_wbs_union_projects.l_3, q_budget_wbs_union_projects.l_4, q_budget_wbs_union_projects.l_5, q_budget_wbs_union_projects.l_6, q_budget_wbs_union_projects.up_curr, sum(iif([q_second_budget_gt].[incomegt] is null,"0",[q_second_budget_gt].[incomegt])) as incomegt_second, sum(iif([q_second_budget_gt].[expensegt] is null,"0",[q_second_budget_gt].[expensegt])) as expensegt_second, sum(iif([q_second_budget_gt].[profitgt] is null,"0",[q_second_budget_gt].[profitgt])) as profitgt_second, sum(iif([q_first_budget_gt].[incomegt] is null,"0",[q_first_budget_gt].[incomegt])) as incomegt_first, sum(iif([q_first_budget_gt].[expensegt] is null,"0",[q_first_budget_gt].[expensegt])) as expensegt_first, sum(iif([q_first_budget_gt].[profitgt] is null,"0",[q_first_budget_gt].[profitgt])) as profitgt_first, [incomegt_second]-[incomegt_first] as incomediffgt, [expensegt_second]-[expensegt_first] as expensediff_gt, [profitgt_second]-[profitgt_first] as profitdiff_gt, sum(iif([q_second_budget_rt_grouped_projects].[incomert] is null,"0",[q_second_budget_rt_grouped_projects].[incomert])) as incomert_second, sum(iif([q_second_budget_rt_grouped_projects].[expensert] is null,"0",[q_second_budget_rt_grouped_projects].[expensert])) as expensert_second, sum(iif([q_second_budget_rt_grouped_projects].[profitrt] is null,"0",[q_second_budget_rt_grouped_projects].[profitrt])) as profitrt_second, sum(iif([q_first_budget_rt_grouped_projects].[incomert] is null,"0",[q_first_budget_rt_grouped_projects].[incomert])) as incomert_first, sum(iif([q_first_budget_rt_grouped_projects].[expensert] is null,"0",[q_first_budget_rt_grouped_projects].[expensert])) as expensert_first, sum(iif([q_first_budget_rt_grouped_projects].[profitrt] is null,"0",[q_first_budget_rt_grouped_projects].[profitrt])) as profitrt_first, [incomert_second]-[incomert_first] as incomediffrt, [expensert_second]-[expensert_first] as expensediff_rt, [profitrt_second]-[profitrt_first] as profitdiff_rt, [incomegt_second]-[incomert_second] as incomerem_second, [expensegt_second]-[expensert_second] as expenserem_second, [profitgt_second]-[profitrt_second] as profitrem_second, [incomegt_first]-[incomert_first] as incomerem_first, [expensegt_first]-[expensert_first] as expenserem_first, [profitgt_first]-[profitrt_first] as profitrem_first, [incomerem_second]-[incomerem_first] as incomerem_diff, [expenserem_second]-[expenserem_first] as expenserem_diff, [profitrem_second]-[profitrem_first] as profitrem_diff, q_budget_wbs_union_projects.desc_tr_l3, q_budget_wbs_union_projects.desc_tr_l2, q_budget_wbs_union_projects.desc_tr_l6, c4_code.desc_tr_l4, c5_code.desc_tr_l5
from (((((q_budget_wbs_union_projects left join q_second_budget_gt on (q_budget_wbs_union_projects.up_curr = q_second_budget_gt.up_curr) and (q_budget_wbs_union_projects.l_6 = q_second_budget_gt.l_6) and (q_budget_wbs_union_projects.l_5 = q_second_budget_gt.l_5) and (q_budget_wbs_union_projects.l_4 = q_second_budget_gt.l_4) and (q_budget_wbs_union_projects.l_3 = q_second_budget_gt.l_3) and (q_budget_wbs_union_projects.l_2 = q_second_budget_gt.l_2) and (q_budget_wbs_union_projects.l_1 = q_second_budget_gt.l_1) and (q_budget_wbs_union_projects.pc = q_second_budget_gt.pc)) left join q_first_budget_gt on (q_budget_wbs_union_projects.up_curr = q_first_budget_gt.up_curr) and (q_budget_wbs_union_projects.l_6 = q_first_budget_gt.l_6) and (q_budget_wbs_union_projects.l_5 = q_first_budget_gt.l_5) and (q_budget_wbs_union_projects.l_4 = q_first_budget_gt.l_4) and (q_budget_wbs_union_projects.l_3 = q_first_budget_gt.l_3) and (q_budget_wbs_union_projects.l_2 = q_first_budget_gt.l_2) and (q_budget_wbs_union_projects.l_1 = q_first_budget_gt.l_1) and (q_budget_wbs_union_projects.pc = q_first_budget_gt.pc)) left join q_second_budget_rt_grouped_projects on (q_budget_wbs_union_projects.pc = q_second_budget_rt_grouped_projects.pc) and (q_budget_wbs_union_projects.up_curr = q_second_budget_rt_grouped_projects.up_curr) and (q_budget_wbs_union_projects.l_6 = q_second_budget_rt_grouped_projects.l_6) and (q_budget_wbs_union_projects.l_5 = q_second_budget_rt_grouped_projects.l_5) and (q_budget_wbs_union_projects.l_4 = q_second_budget_rt_grouped_projects.l_4) and (q_budget_wbs_union_projects.l_3 = q_second_budget_rt_grouped_projects.l_3) and (q_budget_wbs_union_projects.l_2 = q_second_budget_rt_grouped_projects.l_2) and (q_budget_wbs_union_projects.l_1 = q_second_budget_rt_grouped_projects.l_1)) left join q_first_budget_rt_grouped_projects on (q_budget_wbs_union_projects.pc = q_first_budget_rt_grouped_projects.pc) and (q_budget_wbs_union_projects.up_curr = q_first_budget_rt_grouped_projects.up_curr) and (q_budget_wbs_union_projects.l_6 = q_first_budget_rt_grouped_projects.l_6) and (q_budget_wbs_union_projects.l_5 = q_first_budget_rt_grouped_projects.l_5) and (q_budget_wbs_union_projects.l_4 = q_first_budget_rt_grouped_projects.l_4) and (q_budget_wbs_union_projects.l_3 = q_first_budget_rt_grouped_projects.l_3) and (q_budget_wbs_union_projects.l_2 = q_first_budget_rt_grouped_projects.l_2) and (q_budget_wbs_union_projects.l_1 = q_first_budget_rt_grouped_projects.l_1)) left join c4_code on (q_budget_wbs_union_projects.l_4 = c4_code.c_l4) and (q_budget_wbs_union_projects.l_3 = c4_code.c_l3) and (q_budget_wbs_union_projects.l_2 = c4_code.c_l2) and (q_budget_wbs_union_projects.l_1 = c4_code.c_l1)) left join c5_code on (q_budget_wbs_union_projects.l_5 = c5_code.c_l5) and (q_budget_wbs_union_projects.l_4 = c5_code.c_l4) and (q_budget_wbs_union_projects.l_3 = c5_code.c_l3) and (q_budget_wbs_union_projects.l_2 = c5_code.c_l2) and (q_budget_wbs_union_projects.l_1 = c5_code.c_l1)
group by q_budget_wbs_union_projects.pc, q_budget_wbs_union_projects.l_1, q_budget_wbs_union_projects.l_2, q_budget_wbs_union_projects.l_3, q_budget_wbs_union_projects.l_4, q_budget_wbs_union_projects.l_5, q_budget_wbs_union_projects.l_6, q_budget_wbs_union_projects.up_curr, q_budget_wbs_union_projects.desc_tr_l3, q_budget_wbs_union_projects.desc_tr_l2, q_budget_wbs_union_projects.desc_tr_l6, c4_code.desc_tr_l4, c5_code.desc_tr_l5;

----------------------------------------------------------------------------------------------------
q_cb_sum_projects_report_data
select 
pc,
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
incomegt_second as second_data_gt,
incomert_second as second_data_rt,
incomegt_first as first_data_gt,
incomert_first as first_data_rt,
incomerem_second as second_data_rem,
incomerem_first as first_data_rem,
incomegt_second - incomegt_first as gt_rem,
incomert_second - incomert_first as rt_rem,
incomerem_second - incomerem_first as rem_rem,
"1 - gelİr" as budget_type,
desc_tr_l4,
desc_tr_l5

	from 
		 q_cb_sum_projects_data

where (incomegt_second + incomert_second + incomegt_first + incomert_first) <> 0


union

select 
pc,
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
expensegt_second,
expensert_second,
expensegt_first,
expensert_first,
expenserem_second,
expenserem_first,
expensegt_second - expensegt_first,
expensert_second - expensert_first as rt_rem,
expenserem_second - expenserem_first as rem_rem,
"2 - gİder" as budget_type,
desc_tr_l4,
desc_tr_l5


	from 
		 q_cb_sum_projects_data


where  (expensegt_second + expensert_second + expensegt_first + expensert_first) <>0


union select 
pc,
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
profitgt_second,
profitrt_second,
profitgt_first,
profitrt_first,
profitrem_second,
profitrem_first,
profitgt_second - profitgt_first,
profitrt_second - profitrt_first as rt_rem,
profitrem_second - profitrem_first as rem_rem,
"3 - brüt kar" as budget_type,
desc_tr_l4,
desc_tr_l5


	from 
		 q_cb_sum_projects_data

where  (profitgt_second + profitrt_second + profitgt_first + profitrt_first) <>0;

----------------------------------------------------------------------------------------------------
q_cb_sum_projects_report_data_lvl_4
select q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l4, q_cb_sum_projects_report_data.desc_tr_l5, q_cb_sum_projects_report_data.desc_tr_l6, sum(q_cb_sum_projects_report_data.second_data_gt) as second_data_gt, sum(q_cb_sum_projects_report_data.second_data_rt) as second_data_rt, sum(q_cb_sum_projects_report_data.first_data_gt) as first_data_gt, sum(q_cb_sum_projects_report_data.first_data_rt) as first_data_rt, sum(q_cb_sum_projects_report_data.second_data_rem) as second_data_rem, sum(q_cb_sum_projects_report_data.first_data_rem) as first_data_rem, q_cb_sum_projects_report_data.budget_type, sum(q_cb_sum_projects_report_data.gt_rem) as gt_rem
from q_cb_sum_projects_report_data
group by q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l4, q_cb_sum_projects_report_data.desc_tr_l5, q_cb_sum_projects_report_data.desc_tr_l6, q_cb_sum_projects_report_data.budget_type
having (((q_cb_sum_projects_report_data.l_1)='d') and ((q_cb_sum_projects_report_data.l_2)='01') and ((q_cb_sum_projects_report_data.pc)='mbe') and ((q_cb_sum_projects_report_data.l_3)='01'))
order by sum(q_cb_sum_projects_report_data.gt_rem) desc;

----------------------------------------------------------------------------------------------------
q_cb_sum_projects_report_data_lvl_5
select q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l4, q_cb_sum_projects_report_data.desc_tr_l5, q_cb_sum_projects_report_data.desc_tr_l6, sum(q_cb_sum_projects_report_data.second_data_gt) as second_data_gt, sum(q_cb_sum_projects_report_data.second_data_rt) as second_data_rt, sum(q_cb_sum_projects_report_data.first_data_gt) as first_data_gt, sum(q_cb_sum_projects_report_data.first_data_rt) as first_data_rt, sum(q_cb_sum_projects_report_data.second_data_rem) as second_data_rem, sum(q_cb_sum_projects_report_data.first_data_rem) as first_data_rem, q_cb_sum_projects_report_data.budget_type, sum(q_cb_sum_projects_report_data.gt_rem) as gt_rem
from q_cb_sum_projects_report_data
group by q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l4, q_cb_sum_projects_report_data.desc_tr_l5, q_cb_sum_projects_report_data.desc_tr_l6, q_cb_sum_projects_report_data.budget_type
having (((q_cb_sum_projects_report_data.l_1)='d') and ((q_cb_sum_projects_report_data.l_2)='01') and ((q_cb_sum_projects_report_data.pc)='mbe') and ((q_cb_sum_projects_report_data.l_4)='11') and ((q_cb_sum_projects_report_data.l_3)='01'))
order by sum(q_cb_sum_projects_report_data.gt_rem) desc;

----------------------------------------------------------------------------------------------------
q_cb_summary_report_currmonth_data_group
select q_cb_allprojects_report_currmonth_data.rep_month, q_cb_allprojects_report_currmonth_data.pc, q_cb_allprojects_report_currmonth_data.l_1, q_cb_allprojects_report_currmonth_data.l_2, q_cb_allprojects_report_currmonth_data.l_3, q_cb_allprojects_report_currmonth_data.l_4, q_cb_allprojects_report_currmonth_data.l_5, q_cb_allprojects_report_currmonth_data.l_6, q_cb_allprojects_report_currmonth_data.desc_tr_l2, q_cb_allprojects_report_currmonth_data.desc_tr_l3, q_cb_allprojects_report_currmonth_data.desc_tr_l6, sum(q_cb_allprojects_report_currmonth_data.income) as income, sum(q_cb_allprojects_report_currmonth_data.expense) as expense, sum(q_cb_allprojects_report_currmonth_data.profit) as profit, q_cb_allprojects_report_currmonth_data.currency
from q_cb_allprojects_report_currmonth_data
group by q_cb_allprojects_report_currmonth_data.rep_month, q_cb_allprojects_report_currmonth_data.pc, q_cb_allprojects_report_currmonth_data.l_1, q_cb_allprojects_report_currmonth_data.l_2, q_cb_allprojects_report_currmonth_data.l_3, q_cb_allprojects_report_currmonth_data.l_4, q_cb_allprojects_report_currmonth_data.l_5, q_cb_allprojects_report_currmonth_data.l_6, q_cb_allprojects_report_currmonth_data.desc_tr_l2, q_cb_allprojects_report_currmonth_data.desc_tr_l3, q_cb_allprojects_report_currmonth_data.desc_tr_l6, q_cb_allprojects_report_currmonth_data.currency;

----------------------------------------------------------------------------------------------------
q_cb_summary_report_union
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency
	from 
		q_cb_allprojects_report_currmonth_data

union select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency

	from 
		q_cb_allprojects_report_endproject_data;

----------------------------------------------------------------------------------------------------
q_cb_unit_price
select q_cb_up_coeff.rep_month, q_cb_up_coeff.up_pr_code as p01_code, q_cb_up_coeff.l_1, q_cb_up_coeff.l_2, q_cb_up_coeff.l_3, q_cb_up_coeff.l_4, q_cb_up_coeff.l_5, q_cb_up_coeff.l_6, q_cb_up_coeff.g_month as [month], q_cb_up_coeff.g_month, q_cb_up_coeff.rs_currency as up_curr, sum([up_cost]*[an_rs_quantity]*[up_cost_coeff_all]) as unit_price_planned_coeff, q_cb_up_coeff.key_r_pc_l6
from q_cb_up_coeff
group by q_cb_up_coeff.rep_month, q_cb_up_coeff.up_pr_code, q_cb_up_coeff.l_1, q_cb_up_coeff.l_2, q_cb_up_coeff.l_3, q_cb_up_coeff.l_4, q_cb_up_coeff.l_5, q_cb_up_coeff.l_6, q_cb_up_coeff.g_month, q_cb_up_coeff.rs_currency, q_cb_up_coeff.key_r_pc_l6, q_cb_up_coeff.g_month
order by q_cb_up_coeff.rep_month, q_cb_up_coeff.up_pr_code, q_cb_up_coeff.l_1, q_cb_up_coeff.l_2, q_cb_up_coeff.l_3, q_cb_up_coeff.l_4, q_cb_up_coeff.l_5, q_cb_up_coeff.l_6, q_cb_up_coeff.g_month, q_cb_up_coeff.g_month;

----------------------------------------------------------------------------------------------------
q_cb_unit_price_crosstab
transform sum(q_cb_unit_price.unit_price_planned_coeff) as sumofunit_price_planned_coeff
select q_cb_unit_price.rep_month, q_cb_unit_price.l_1, q_cb_unit_price.l_2, q_cb_unit_price.l_3, q_cb_unit_price.l_4, q_cb_unit_price.l_5, q_cb_unit_price.l_6, q_cb_unit_price.up_curr, q_cb_unit_price.p01_code
from q_cb_unit_price
group by q_cb_unit_price.rep_month, q_cb_unit_price.l_1, q_cb_unit_price.l_2, q_cb_unit_price.l_3, q_cb_unit_price.l_4, q_cb_unit_price.l_5, q_cb_unit_price.l_6, q_cb_unit_price.up_curr, q_cb_unit_price.p01_code
pivot q_cb_unit_price.month;

----------------------------------------------------------------------------------------------------
q_cb_unit_price_crosstab_mod
transform sum(q_cb_unit_price_mod.unit_price_planned_coeff) as sumofunit_price_planned_coeff
select q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.p01_code
from q_cb_unit_price_mod
group by q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.p01_code
pivot q_cb_unit_price_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_unit_price_diff
select q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.p01_code, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.month, q_cb_unit_price.unit_price_planned_coeff as up_orj, q_cb_unit_price_mod.unit_price_planned_coeff as up_mod, ([up_orj])-([up_mod]) as diff
from q_cb_unit_price_mod left join q_cb_unit_price on (q_cb_unit_price_mod.up_curr = q_cb_unit_price.up_curr) and (q_cb_unit_price_mod.month = q_cb_unit_price.month) and (q_cb_unit_price_mod.l_6 = q_cb_unit_price.l_6) and (q_cb_unit_price_mod.l_5 = q_cb_unit_price.l_5) and (q_cb_unit_price_mod.l_4 = q_cb_unit_price.l_4) and (q_cb_unit_price_mod.l_3 = q_cb_unit_price.l_3) and (q_cb_unit_price_mod.l_2 = q_cb_unit_price.l_2) and (q_cb_unit_price_mod.l_1 = q_cb_unit_price.l_1) and (q_cb_unit_price_mod.p01_code = q_cb_unit_price.p01_code) and (q_cb_unit_price_mod.rep_month = q_cb_unit_price.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_unit_price_mod
select q_cb_up_coeff_mod.rep_month, q_cb_up_coeff_mod.up_pr_code as p01_code, q_cb_up_coeff_mod.l_1, q_cb_up_coeff_mod.l_2, q_cb_up_coeff_mod.l_3, q_cb_up_coeff_mod.l_4, q_cb_up_coeff_mod.l_5, q_cb_up_coeff_mod.l_6, q_cb_up_coeff_mod.month, q_cb_up_coeff_mod.g_month, q_cb_up_coeff_mod.rs_currency as up_curr, sum([up_cost]*[an_rs_quantity]*[up_cost_coeff_all]) as unit_price_planned_coeff, q_cb_up_coeff_mod.key_r_pc_l6
from q_cb_up_coeff_mod
group by q_cb_up_coeff_mod.rep_month, q_cb_up_coeff_mod.up_pr_code, q_cb_up_coeff_mod.l_1, q_cb_up_coeff_mod.l_2, q_cb_up_coeff_mod.l_3, q_cb_up_coeff_mod.l_4, q_cb_up_coeff_mod.l_5, q_cb_up_coeff_mod.l_6, q_cb_up_coeff_mod.month, q_cb_up_coeff_mod.g_month, q_cb_up_coeff_mod.rs_currency, q_cb_up_coeff_mod.key_r_pc_l6
order by q_cb_up_coeff_mod.rep_month, q_cb_up_coeff_mod.up_pr_code, q_cb_up_coeff_mod.l_1, q_cb_up_coeff_mod.l_2, q_cb_up_coeff_mod.l_3, q_cb_up_coeff_mod.l_4, q_cb_up_coeff_mod.l_5, q_cb_up_coeff_mod.l_6, q_cb_up_coeff_mod.month, q_cb_up_coeff_mod.g_month;

----------------------------------------------------------------------------------------------------
q_cb_unit_price_pre
select q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc as p01_code, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon as [month], q_cb_up_pre_coeff_activem_indexes.exp_cb_mon as g_month, q_cb_up_pre_coeff_activem_indexes.rs_currency as up_curr, q_cb_up_pre_coeff_activem_indexes.key_r_pc_l6, sum(iif([up_curr]="try",[up_cost]*[w_inf_usd]*(1+[rt_usd_try])*(1+[bb_inf_usd]),iif([currency]="eur",[up_cost]*[w_inf_usd]*(1+[rt_usd_eur])*(1+[bb_inf_usd]),[up_cost]*(1+[bb_inf_usd])))) as cost_exc_inf_usd, sum(iif([up_curr]="try",[up_cost]*[w_inf_eur]*(1+[rt_eur_try])*(1+[bb_inf_eur]),iif([currency]="usd",[up_cost]*[w_inf_eur]*(1+[rt_eur_usd])*(1+[bb_inf_eur]),[up_cost]*(1+[bb_inf_eur])))) as cost_exc_inf_eur, sum([up_cost]*([w_ufe]*(1+[bb_ufe])+[w_tufe]*(1+[bb_tufe])+[w_metal]*(1+[bb_metal])+[w_petrol]*(1+[bb_petrol])+[w_cement]*(1+[bb_cement])+[w_electricity]*(1+[bb_electricity]))) as cost_market, sum(q_cb_up_pre_coeff_activem_indexes.up_cost) as up_cost_base, t_pl_analysis.an_rs_quantity
from (q_cb_up_pre_coeff_activem_indexes left join r4_code on q_cb_up_pre_coeff_activem_indexes.key_r4_simple = r4_code.key_r4_simple) left join t_pl_analysis on q_cb_up_pre_coeff_activem_indexes.key_full = t_pl_analysis.key_full
group by q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes.rs_currency, q_cb_up_pre_coeff_activem_indexes.key_r_pc_l6, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon, t_pl_analysis.an_rs_quantity
order by q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_unit_price_to
select q_cb_unit_price_pre.rep_month, q_cb_unit_price_pre.p01_code, q_cb_unit_price_pre.l_1, q_cb_unit_price_pre.l_2, q_cb_unit_price_pre.l_3, q_cb_unit_price_pre.l_4, q_cb_unit_price_pre.l_5, q_cb_unit_price_pre.l_6, q_cb_unit_price_pre.month, q_cb_unit_price_pre.g_month, q_cb_unit_price_pre.up_curr, q_cb_unit_price_pre.up_cost_base, sum([cost_market]+[cost_exc_inf_usd]+[cost_exc_inf_eur]) as unit_price_planned_coeff, q_cb_unit_price_pre.key_r_pc_l6, iif([up_cost_base]<>0,round(((([cost_exc_inf_usd]+[cost_exc_inf_eur]+[cost_market])/[up_cost_base])-1)*100,2),0) as inc_rate
from q_cb_unit_price_pre
group by q_cb_unit_price_pre.rep_month, q_cb_unit_price_pre.p01_code, q_cb_unit_price_pre.l_1, q_cb_unit_price_pre.l_2, q_cb_unit_price_pre.l_3, q_cb_unit_price_pre.l_4, q_cb_unit_price_pre.l_5, q_cb_unit_price_pre.l_6, q_cb_unit_price_pre.month, q_cb_unit_price_pre.g_month, q_cb_unit_price_pre.up_curr, q_cb_unit_price_pre.up_cost_base, q_cb_unit_price_pre.key_r_pc_l6, iif([up_cost_base]<>0,round(((([cost_exc_inf_usd]+[cost_exc_inf_eur]+[cost_market])/[up_cost_base])-1)*100,2),0), q_cb_unit_price_pre.g_month
order by q_cb_unit_price_pre.rep_month, q_cb_unit_price_pre.p01_code, q_cb_unit_price_pre.l_1, q_cb_unit_price_pre.l_2, q_cb_unit_price_pre.l_3, q_cb_unit_price_pre.l_4, q_cb_unit_price_pre.l_5, q_cb_unit_price_pre.l_6, q_cb_unit_price_pre.g_month, q_cb_unit_price_pre.g_month;

----------------------------------------------------------------------------------------------------
q_cb_up_check
select q_pl_exp.rep_month, q_pl_exp.p01_code, q_pl_exp.l_1, q_pl_exp.l_2, q_pl_exp.l_3, q_pl_exp.l_4, q_pl_exp.l_5, q_pl_exp.l_6, q_pl_exp.up_curr, sum(q_pl_exp.total_expense) as [total expense], sum(q_cb_qty.exp_cb_qty) as quantity, c6_code.unit, q_cb_work_up_without_coeff.unit_price_planned as up_without_coeff, [total expense]/[quantity] as up_average_with_coeff, [up_average_with_coeff]/[up_without_coeff] as up_average_coeff
from ((q_pl_exp left join c6_code on (q_pl_exp.l_1 = c6_code.c_l1) and (q_pl_exp.l_2 = c6_code.c_l2) and (q_pl_exp.l_3 = c6_code.c_l3) and (q_pl_exp.l_4 = c6_code.c_l4) and (q_pl_exp.l_5 = c6_code.c_l5) and (q_pl_exp.l_6 = c6_code.c_l6)) left join q_cb_qty on (q_pl_exp.rep_month = q_cb_qty.rep_month) and (q_pl_exp.p01_code = q_cb_qty.pc) and (q_pl_exp.l_1 = q_cb_qty.l_1) and (q_pl_exp.l_2 = q_cb_qty.l_2) and (q_pl_exp.l_3 = q_cb_qty.l_3) and (q_pl_exp.l_4 = q_cb_qty.l_4) and (q_pl_exp.l_5 = q_cb_qty.l_5) and (q_pl_exp.l_6 = q_cb_qty.l_6)) left join q_cb_work_up_without_coeff on (q_pl_exp.rep_month = q_cb_work_up_without_coeff.rep_month) and (q_pl_exp.p01_code = q_cb_work_up_without_coeff.pc) and (q_pl_exp.l_1 = q_cb_work_up_without_coeff.l_1) and (q_pl_exp.l_2 = q_cb_work_up_without_coeff.l_2) and (q_pl_exp.l_3 = q_cb_work_up_without_coeff.l_3) and (q_pl_exp.l_4 = q_cb_work_up_without_coeff.l_4) and (q_pl_exp.l_5 = q_cb_work_up_without_coeff.l_5) and (q_pl_exp.l_6 = q_cb_work_up_without_coeff.l_6)
group by q_pl_exp.rep_month, q_pl_exp.p01_code, q_pl_exp.l_1, q_pl_exp.l_2, q_pl_exp.l_3, q_pl_exp.l_4, q_pl_exp.l_5, q_pl_exp.l_6, q_pl_exp.up_curr, c6_code.unit, q_cb_work_up_without_coeff.unit_price_planned;

----------------------------------------------------------------------------------------------------
q_cb_up_coeff
select q_cb_res_up_market_coeff.rep_month, q_cb_res_up_market_coeff.pc as up_pr_code, q_cb_res_up_market_coeff.l_1, q_cb_res_up_market_coeff.l_2, q_cb_res_up_market_coeff.l_3, q_cb_res_up_market_coeff.l_4, q_cb_res_up_market_coeff.l_5, q_cb_res_up_market_coeff.l_6, q_cb_res_up_market_coeff.r_1_code as up_rs_l1, q_cb_res_up_market_coeff.r_2_code as up_rs_l2, q_cb_res_up_market_coeff.r_3_code as up_rs_l3, q_cb_res_up_market_coeff.r_4_code as up_rs_l4, q_cb_res_up_market_coeff.g_month, q_cb_res_up_market_coeff.up_cost_coeff, q_cb_curr_escalation_rates.k_usd, q_cb_curr_escalation_rates.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6) as up_cost_coeff_all, q_cb_res_up_market_coeff.up_cost, q_cb_res_up_market_coeff.currency as rs_currency, q_cb_res_up_market_coeff.key_full, q_cb_res_up_market_coeff.an_rs_quantity, q_cb_res_up_market_coeff.key_r_pc_l6
from q_cb_res_up_market_coeff left join q_cb_curr_escalation_rates on q_cb_res_up_market_coeff.key_full_comb = q_cb_curr_escalation_rates.key_full_comb
group by q_cb_res_up_market_coeff.rep_month, q_cb_res_up_market_coeff.pc, q_cb_res_up_market_coeff.l_1, q_cb_res_up_market_coeff.l_2, q_cb_res_up_market_coeff.l_3, q_cb_res_up_market_coeff.l_4, q_cb_res_up_market_coeff.l_5, q_cb_res_up_market_coeff.l_6, q_cb_res_up_market_coeff.r_1_code, q_cb_res_up_market_coeff.r_2_code, q_cb_res_up_market_coeff.r_3_code, q_cb_res_up_market_coeff.r_4_code, q_cb_res_up_market_coeff.g_month, q_cb_res_up_market_coeff.up_cost_coeff, q_cb_curr_escalation_rates.k_usd, q_cb_curr_escalation_rates.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6), q_cb_res_up_market_coeff.up_cost, q_cb_res_up_market_coeff.currency, q_cb_res_up_market_coeff.key_full, q_cb_res_up_market_coeff.an_rs_quantity, q_cb_res_up_market_coeff.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_up_coeff_mod
select q_cb_res_up_market_coeff_mod.rep_month, q_cb_res_up_market_coeff_mod.pc as up_pr_code, q_cb_res_up_market_coeff_mod.l_1, q_cb_res_up_market_coeff_mod.l_2, q_cb_res_up_market_coeff_mod.l_3, q_cb_res_up_market_coeff_mod.l_4, q_cb_res_up_market_coeff_mod.l_5, q_cb_res_up_market_coeff_mod.l_6, q_cb_res_up_market_coeff_mod.r_1_code as up_rs_l1, q_cb_res_up_market_coeff_mod.r_2_code as up_rs_l2, q_cb_res_up_market_coeff_mod.r_3_code as up_rs_l3, q_cb_res_up_market_coeff_mod.r_4_code as up_rs_l4, q_cb_res_up_market_coeff_mod.g_month, q_cb_res_up_market_coeff_mod.up_cost_coeff, q_cb_curr_escalation_rates_mod.k_usd, q_cb_curr_escalation_rates_mod.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6) as up_cost_coeff_all, q_cb_res_up_market_coeff_mod.up_cost, q_cb_res_up_market_coeff_mod.currency as rs_currency, q_cb_res_up_market_coeff_mod.key_full, q_cb_res_up_market_coeff_mod.an_rs_quantity, q_cb_res_up_market_coeff_mod.key_r_pc_l6, q_cb_res_up_market_coeff_mod.g_month as [month]
from q_cb_res_up_market_coeff_mod left join q_cb_curr_escalation_rates_mod on q_cb_res_up_market_coeff_mod.key_full_comb = q_cb_curr_escalation_rates_mod.key_full_comb
group by q_cb_res_up_market_coeff_mod.rep_month, q_cb_res_up_market_coeff_mod.pc, q_cb_res_up_market_coeff_mod.l_1, q_cb_res_up_market_coeff_mod.l_2, q_cb_res_up_market_coeff_mod.l_3, q_cb_res_up_market_coeff_mod.l_4, q_cb_res_up_market_coeff_mod.l_5, q_cb_res_up_market_coeff_mod.l_6, q_cb_res_up_market_coeff_mod.r_1_code, q_cb_res_up_market_coeff_mod.r_2_code, q_cb_res_up_market_coeff_mod.r_3_code, q_cb_res_up_market_coeff_mod.r_4_code, q_cb_res_up_market_coeff_mod.g_month, q_cb_res_up_market_coeff_mod.up_cost_coeff, q_cb_curr_escalation_rates_mod.k_usd, q_cb_curr_escalation_rates_mod.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6), q_cb_res_up_market_coeff_mod.up_cost, q_cb_res_up_market_coeff_mod.currency, q_cb_res_up_market_coeff_mod.key_full, q_cb_res_up_market_coeff_mod.an_rs_quantity, q_cb_res_up_market_coeff_mod.key_r_pc_l6, q_cb_res_up_market_coeff_mod.g_month;

----------------------------------------------------------------------------------------------------
q_cb_up_pre_coeff_activem_indexes
select q_cb_analysis_activem_with_prices.rep_month, q_cb_analysis_activem_with_prices.pc, q_cb_analysis_activem_with_prices.l_1, q_cb_analysis_activem_with_prices.l_2, q_cb_analysis_activem_with_prices.l_3, q_cb_analysis_activem_with_prices.l_4, q_cb_analysis_activem_with_prices.l_5, q_cb_analysis_activem_with_prices.l_6, q_cb_analysis_activem_with_prices.exp_cb_mon, q_cb_analysis_activem_with_prices.rs_l1, q_cb_analysis_activem_with_prices.rs_l2, q_cb_analysis_activem_with_prices.rs_l3, q_cb_analysis_activem_with_prices.rs_l4, t_cb_indexes.bb_ufe, t_cb_indexes.bb_tufe, t_cb_indexes.bb_inf_usd, t_cb_indexes.bb_inf_eur, t_cb_indexes.bb_metal, t_cb_indexes.bb_petrol, t_cb_indexes.bb_cement, t_cb_indexes.bb_electricity, q_cb_analysis_activem_with_prices.currency as rs_currency, q_cb_analysis_activem_with_prices.an_rs_quantity, q_cb_analysis_activem_with_prices.up_cost, q_cb_analysis_activem_with_prices.key_r4_simple, q_cb_analysis_activem_with_prices.key_r4, q_cb_analysis_activem_with_prices.key_r_pc_l6, q_cb_analysis_activem_with_prices.key_full
from q_cb_analysis_activem_with_prices left join t_cb_indexes on (q_cb_analysis_activem_with_prices.rep_month = t_cb_indexes.rep_month) and (q_cb_analysis_activem_with_prices.exp_cb_mon = t_cb_indexes.g_month);

----------------------------------------------------------------------------------------------------
q_cb_up_pre_coeff_activem_indexes_mod
select q_cb_analysis_activem_with_prices_mod.rep_month, q_cb_analysis_activem_with_prices_mod.key_r4, q_cb_analysis_activem_with_prices_mod.key_r_pc_l6, q_cb_analysis_activem_with_prices_mod.key_full, q_cb_analysis_activem_with_prices_mod.key_r4_simple, q_cb_analysis_activem_with_prices_mod.pc, q_cb_analysis_activem_with_prices_mod.exp_cb_mon, q_cb_analysis_activem_with_prices_mod.l_1, q_cb_analysis_activem_with_prices_mod.l_2, q_cb_analysis_activem_with_prices_mod.l_3, q_cb_analysis_activem_with_prices_mod.l_4, q_cb_analysis_activem_with_prices_mod.l_5, q_cb_analysis_activem_with_prices_mod.l_6, q_cb_analysis_activem_with_prices_mod.rs_l1, q_cb_analysis_activem_with_prices_mod.rs_l2, q_cb_analysis_activem_with_prices_mod.rs_l3, q_cb_analysis_activem_with_prices_mod.rs_l4, t_ac_indexes_mod.bb_ufe, t_ac_indexes_mod.bb_tufe, t_ac_indexes_mod.bb_inf_usd, t_ac_indexes_mod.bb_inf_eur, t_ac_indexes_mod.bb_metal, t_ac_indexes_mod.bb_petrol, t_ac_indexes_mod.bb_cement, t_ac_indexes_mod.bb_electricity, q_cb_analysis_activem_with_prices_mod.rs_currency, q_cb_analysis_activem_with_prices_mod.an_rs_quantity, q_cb_analysis_activem_with_prices_mod.up_cost
from q_cb_analysis_activem_with_prices_mod left join t_ac_indexes_mod on (q_cb_analysis_activem_with_prices_mod.exp_cb_mon = t_ac_indexes_mod.g_month) and (q_cb_analysis_activem_with_prices_mod.rep_month = t_ac_indexes_mod.rep_month)
order by q_cb_analysis_activem_with_prices_mod.rep_month, q_cb_analysis_activem_with_prices_mod.pc, q_cb_analysis_activem_with_prices_mod.exp_cb_mon, q_cb_analysis_activem_with_prices_mod.l_1, q_cb_analysis_activem_with_prices_mod.l_2, q_cb_analysis_activem_with_prices_mod.l_3, q_cb_analysis_activem_with_prices_mod.l_4, q_cb_analysis_activem_with_prices_mod.l_5, q_cb_analysis_activem_with_prices_mod.l_6;

----------------------------------------------------------------------------------------------------
q_cb_up_pre_coeff_activem_indexes_to
select q_cb_analysis_activem_with_prices.rep_month, q_cb_analysis_activem_with_prices.pc, q_cb_analysis_activem_with_prices.l_1, q_cb_analysis_activem_with_prices.l_2, q_cb_analysis_activem_with_prices.l_3, q_cb_analysis_activem_with_prices.l_4, q_cb_monthly_curr_rates_inc.rt_eur_try, q_cb_monthly_curr_rates_inc.rt_eur_usd, q_cb_monthly_curr_rates_inc.rt_usd_try, q_cb_monthly_curr_rates_inc.rt_usd_eur, q_cb_analysis_activem_with_prices.l_5, q_cb_analysis_activem_with_prices.l_6, q_cb_analysis_activem_with_prices.exp_cb_mon, q_cb_analysis_activem_with_prices.rs_l1, q_cb_analysis_activem_with_prices.rs_l2, q_cb_analysis_activem_with_prices.rs_l3, q_cb_analysis_activem_with_prices.rs_l4, t_cb_indexes.bb_ufe, t_cb_indexes.bb_tufe, t_cb_indexes.bb_inf_usd, t_cb_indexes.bb_inf_eur, t_cb_indexes.bb_metal, t_cb_indexes.bb_petrol, t_cb_indexes.bb_cement, t_cb_indexes.bb_electricity, q_cb_analysis_activem_with_prices.currency as rs_currency, q_cb_analysis_activem_with_prices.an_rs_quantity, q_cb_analysis_activem_with_prices.up_cost, q_cb_analysis_activem_with_prices.key_r4_simple, q_cb_analysis_activem_with_prices.key_r4, q_cb_analysis_activem_with_prices.key_r_pc_l6, q_cb_analysis_activem_with_prices.key_full
from (q_cb_analysis_activem_with_prices left join t_cb_indexes on (q_cb_analysis_activem_with_prices.exp_cb_mon = t_cb_indexes.g_month) and (q_cb_analysis_activem_with_prices.rep_month = t_cb_indexes.rep_month)) left join q_cb_monthly_curr_rates_inc on (q_cb_analysis_activem_with_prices.exp_cb_mon = q_cb_monthly_curr_rates_inc.exp_cb_mon) and (q_cb_analysis_activem_with_prices.pc = q_cb_monthly_curr_rates_inc.pc) and (q_cb_analysis_activem_with_prices.rep_month = q_cb_monthly_curr_rates_inc.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_up_with_curr_coeff_crosstab
transform sum(q_cb_work_up_with_curr_coeff.up) as sumofup
select q_cb_work_up_with_curr_coeff.rep_month, q_cb_work_up_with_curr_coeff.pc, q_cb_work_up_with_curr_coeff.l_1, q_cb_work_up_with_curr_coeff.l_2, q_cb_work_up_with_curr_coeff.l_3, q_cb_work_up_with_curr_coeff.l_4, q_cb_work_up_with_curr_coeff.l_5, q_cb_work_up_with_curr_coeff.l_6, q_cb_work_up_with_curr_coeff.rs_currency
from q_cb_work_up_with_curr_coeff
group by q_cb_work_up_with_curr_coeff.rep_month, q_cb_work_up_with_curr_coeff.pc, q_cb_work_up_with_curr_coeff.l_1, q_cb_work_up_with_curr_coeff.l_2, q_cb_work_up_with_curr_coeff.l_3, q_cb_work_up_with_curr_coeff.l_4, q_cb_work_up_with_curr_coeff.l_5, q_cb_work_up_with_curr_coeff.l_6, q_cb_work_up_with_curr_coeff.rs_currency
order by q_cb_work_up_with_curr_coeff.rep_month, q_cb_work_up_with_curr_coeff.pc, q_cb_work_up_with_curr_coeff.l_1, q_cb_work_up_with_curr_coeff.l_2, q_cb_work_up_with_curr_coeff.l_3, q_cb_work_up_with_curr_coeff.l_4, q_cb_work_up_with_curr_coeff.l_5, q_cb_work_up_with_curr_coeff.l_6, q_cb_work_up_with_curr_coeff.month
pivot q_cb_work_up_with_curr_coeff.month;

----------------------------------------------------------------------------------------------------
q_cb_up_with_curr_coeff_crosstab_mod
transform sum(q_cb_work_up_with_curr_coeff_mod.up) as sumofup
select q_cb_work_up_with_curr_coeff_mod.rep_month, q_cb_work_up_with_curr_coeff_mod.pc, q_cb_work_up_with_curr_coeff_mod.l_1, q_cb_work_up_with_curr_coeff_mod.l_2, q_cb_work_up_with_curr_coeff_mod.l_3, q_cb_work_up_with_curr_coeff_mod.l_4, q_cb_work_up_with_curr_coeff_mod.l_5, q_cb_work_up_with_curr_coeff_mod.l_6, q_cb_work_up_with_curr_coeff_mod.rs_currency
from q_cb_work_up_with_curr_coeff_mod
group by q_cb_work_up_with_curr_coeff_mod.rep_month, q_cb_work_up_with_curr_coeff_mod.pc, q_cb_work_up_with_curr_coeff_mod.l_1, q_cb_work_up_with_curr_coeff_mod.l_2, q_cb_work_up_with_curr_coeff_mod.l_3, q_cb_work_up_with_curr_coeff_mod.l_4, q_cb_work_up_with_curr_coeff_mod.l_5, q_cb_work_up_with_curr_coeff_mod.l_6, q_cb_work_up_with_curr_coeff_mod.rs_currency
order by q_cb_work_up_with_curr_coeff_mod.rep_month, q_cb_work_up_with_curr_coeff_mod.pc, q_cb_work_up_with_curr_coeff_mod.l_1, q_cb_work_up_with_curr_coeff_mod.l_2, q_cb_work_up_with_curr_coeff_mod.l_3, q_cb_work_up_with_curr_coeff_mod.l_4, q_cb_work_up_with_curr_coeff_mod.l_5, q_cb_work_up_with_curr_coeff_mod.l_6, q_cb_work_up_with_curr_coeff_mod.month
pivot q_cb_work_up_with_curr_coeff_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_up_with_market_coeff_crosstab
transform sum(q_cb_work_up_with_market_coeff.up_with_coeff) as sumofup_with_coeff
select q_cb_work_up_with_market_coeff.rep_month, q_cb_work_up_with_market_coeff.pc, q_cb_work_up_with_market_coeff.l_1, q_cb_work_up_with_market_coeff.l_2, q_cb_work_up_with_market_coeff.l_3, q_cb_work_up_with_market_coeff.l_4, q_cb_work_up_with_market_coeff.l_5, q_cb_work_up_with_market_coeff.l_6, q_cb_work_up_with_market_coeff.currency
from q_cb_work_up_with_market_coeff
group by q_cb_work_up_with_market_coeff.rep_month, q_cb_work_up_with_market_coeff.pc, q_cb_work_up_with_market_coeff.l_1, q_cb_work_up_with_market_coeff.l_2, q_cb_work_up_with_market_coeff.l_3, q_cb_work_up_with_market_coeff.l_4, q_cb_work_up_with_market_coeff.l_5, q_cb_work_up_with_market_coeff.l_6, q_cb_work_up_with_market_coeff.currency
pivot q_cb_work_up_with_market_coeff.g_month;

----------------------------------------------------------------------------------------------------
q_cb_up_with_market_coeff_crosstab_mod
transform sum(q_cb_work_up_with_market_coeff_mod.up_with_coeff) as sumofup_with_coeff
select q_cb_work_up_with_market_coeff_mod.rep_month, q_cb_work_up_with_market_coeff_mod.pc, q_cb_work_up_with_market_coeff_mod.l_1, q_cb_work_up_with_market_coeff_mod.l_2, q_cb_work_up_with_market_coeff_mod.l_3, q_cb_work_up_with_market_coeff_mod.l_4, q_cb_work_up_with_market_coeff_mod.l_5, q_cb_work_up_with_market_coeff_mod.l_6, q_cb_work_up_with_market_coeff_mod.currency
from q_cb_work_up_with_market_coeff_mod
group by q_cb_work_up_with_market_coeff_mod.rep_month, q_cb_work_up_with_market_coeff_mod.pc, q_cb_work_up_with_market_coeff_mod.l_1, q_cb_work_up_with_market_coeff_mod.l_2, q_cb_work_up_with_market_coeff_mod.l_3, q_cb_work_up_with_market_coeff_mod.l_4, q_cb_work_up_with_market_coeff_mod.l_5, q_cb_work_up_with_market_coeff_mod.l_6, q_cb_work_up_with_market_coeff_mod.currency
pivot q_cb_work_up_with_market_coeff_mod.g_month;

----------------------------------------------------------------------------------------------------
q_cb_up_without_coeff_crosstab
transform sum(q_cb_work_up_without_coeff.unit_price_planned) as sumofunit_price_planned
select q_cb_work_up_without_coeff.rep_month, q_cb_work_up_without_coeff.pc, q_cb_work_up_without_coeff.l_1, q_cb_work_up_without_coeff.l_2, q_cb_work_up_without_coeff.l_3, q_cb_work_up_without_coeff.l_4, q_cb_work_up_without_coeff.l_5, q_cb_work_up_without_coeff.l_6, q_cb_work_up_without_coeff.rs_currency
from q_cb_work_up_without_coeff
group by q_cb_work_up_without_coeff.rep_month, q_cb_work_up_without_coeff.pc, q_cb_work_up_without_coeff.l_1, q_cb_work_up_without_coeff.l_2, q_cb_work_up_without_coeff.l_3, q_cb_work_up_without_coeff.l_4, q_cb_work_up_without_coeff.l_5, q_cb_work_up_without_coeff.l_6, q_cb_work_up_without_coeff.rs_currency
pivot q_cb_work_up_without_coeff.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_up_without_coeff_crosstab_mod
transform sum(q_cb_work_up_without_coeff_mod.unit_price_planned) as sumofunit_price_planned
select q_cb_work_up_without_coeff_mod.rep_month, q_cb_work_up_without_coeff_mod.pc, q_cb_work_up_without_coeff_mod.l_1, q_cb_work_up_without_coeff_mod.l_2, q_cb_work_up_without_coeff_mod.l_3, q_cb_work_up_without_coeff_mod.l_4, q_cb_work_up_without_coeff_mod.l_5, q_cb_work_up_without_coeff_mod.l_6, q_cb_work_up_without_coeff_mod.rs_currency
from q_cb_work_up_without_coeff_mod
group by q_cb_work_up_without_coeff_mod.rep_month, q_cb_work_up_without_coeff_mod.pc, q_cb_work_up_without_coeff_mod.l_1, q_cb_work_up_without_coeff_mod.l_2, q_cb_work_up_without_coeff_mod.l_3, q_cb_work_up_without_coeff_mod.l_4, q_cb_work_up_without_coeff_mod.l_5, q_cb_work_up_without_coeff_mod.l_6, q_cb_work_up_without_coeff_mod.rs_currency
pivot q_cb_work_up_without_coeff_mod.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_curr_coeff
select q_cb_analysis_activem_with_prices.rep_month, q_cb_analysis_activem_with_prices.pc, q_cb_analysis_activem_with_prices.l_1, q_cb_analysis_activem_with_prices.l_2, q_cb_analysis_activem_with_prices.l_3, q_cb_analysis_activem_with_prices.l_4, q_cb_analysis_activem_with_prices.l_5, q_cb_analysis_activem_with_prices.l_6, q_cb_analysis_activem_with_prices.exp_cb_mon as [month], sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]) as up, q_cb_curr_escalation_rates.rs_currency
from q_cb_analysis_activem_with_prices left join q_cb_curr_escalation_rates on (q_cb_analysis_activem_with_prices.rep_month = q_cb_curr_escalation_rates.rep_month) and (q_cb_analysis_activem_with_prices.pc = q_cb_curr_escalation_rates.pc) and (q_cb_analysis_activem_with_prices.l_1 = q_cb_curr_escalation_rates.l_1) and (q_cb_analysis_activem_with_prices.l_2 = q_cb_curr_escalation_rates.l_2) and (q_cb_analysis_activem_with_prices.l_3 = q_cb_curr_escalation_rates.l_3) and (q_cb_analysis_activem_with_prices.l_4 = q_cb_curr_escalation_rates.l_4) and (q_cb_analysis_activem_with_prices.l_5 = q_cb_curr_escalation_rates.l_5) and (q_cb_analysis_activem_with_prices.l_6 = q_cb_curr_escalation_rates.l_6) and (q_cb_analysis_activem_with_prices.rs_l1 = q_cb_curr_escalation_rates.rs_l1) and (q_cb_analysis_activem_with_prices.rs_l2 = q_cb_curr_escalation_rates.rs_l2) and (q_cb_analysis_activem_with_prices.rs_l3 = q_cb_curr_escalation_rates.rs_l3) and (q_cb_analysis_activem_with_prices.rs_l4 = q_cb_curr_escalation_rates.rs_l4) and (q_cb_analysis_activem_with_prices.currency = q_cb_curr_escalation_rates.rs_currency) and (q_cb_analysis_activem_with_prices.exp_cb_mon = q_cb_curr_escalation_rates.month)
group by q_cb_analysis_activem_with_prices.rep_month, q_cb_analysis_activem_with_prices.pc, q_cb_analysis_activem_with_prices.l_1, q_cb_analysis_activem_with_prices.l_2, q_cb_analysis_activem_with_prices.l_3, q_cb_analysis_activem_with_prices.l_4, q_cb_analysis_activem_with_prices.l_5, q_cb_analysis_activem_with_prices.l_6, q_cb_analysis_activem_with_prices.exp_cb_mon, q_cb_curr_escalation_rates.rs_currency
order by q_cb_analysis_activem_with_prices.rep_month, q_cb_analysis_activem_with_prices.pc, q_cb_analysis_activem_with_prices.l_1, q_cb_analysis_activem_with_prices.l_2, q_cb_analysis_activem_with_prices.l_3, q_cb_analysis_activem_with_prices.l_4, q_cb_analysis_activem_with_prices.l_5, q_cb_analysis_activem_with_prices.l_6, q_cb_analysis_activem_with_prices.exp_cb_mon, sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]);

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_curr_coeff_diff
select q_cb_work_up_with_curr_coeff_mod.rep_month, q_cb_work_up_with_curr_coeff_mod.pc, q_cb_work_up_with_curr_coeff_mod.l_1, q_cb_work_up_with_curr_coeff_mod.l_2, q_cb_work_up_with_curr_coeff_mod.l_3, q_cb_work_up_with_curr_coeff_mod.l_4, q_cb_work_up_with_curr_coeff_mod.l_5, q_cb_work_up_with_curr_coeff_mod.l_6, q_cb_work_up_with_curr_coeff_mod.rs_currency, q_cb_work_up_with_curr_coeff_mod.month, q_cb_work_up_with_curr_coeff.up as up_orj, q_cb_work_up_with_curr_coeff_mod.up as up_mod, ([up_orj])-([up_mod]) as diff
from q_cb_work_up_with_curr_coeff_mod left join q_cb_work_up_with_curr_coeff on (q_cb_work_up_with_curr_coeff_mod.rs_currency = q_cb_work_up_with_curr_coeff.rs_currency) and (q_cb_work_up_with_curr_coeff_mod.month = q_cb_work_up_with_curr_coeff.month) and (q_cb_work_up_with_curr_coeff_mod.l_6 = q_cb_work_up_with_curr_coeff.l_6) and (q_cb_work_up_with_curr_coeff_mod.l_5 = q_cb_work_up_with_curr_coeff.l_5) and (q_cb_work_up_with_curr_coeff_mod.l_4 = q_cb_work_up_with_curr_coeff.l_4) and (q_cb_work_up_with_curr_coeff_mod.l_3 = q_cb_work_up_with_curr_coeff.l_3) and (q_cb_work_up_with_curr_coeff_mod.l_2 = q_cb_work_up_with_curr_coeff.l_2) and (q_cb_work_up_with_curr_coeff_mod.l_1 = q_cb_work_up_with_curr_coeff.l_1) and (q_cb_work_up_with_curr_coeff_mod.pc = q_cb_work_up_with_curr_coeff.pc) and (q_cb_work_up_with_curr_coeff_mod.rep_month = q_cb_work_up_with_curr_coeff.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_curr_coeff_mod
select q_cb_analysis_activem_with_prices_mod.rep_month, q_cb_analysis_activem_with_prices_mod.pc, q_cb_analysis_activem_with_prices_mod.l_1, q_cb_analysis_activem_with_prices_mod.l_2, q_cb_analysis_activem_with_prices_mod.l_3, q_cb_analysis_activem_with_prices_mod.l_4, q_cb_analysis_activem_with_prices_mod.l_5, q_cb_analysis_activem_with_prices_mod.l_6, q_cb_analysis_activem_with_prices_mod.exp_cb_mon as [month], sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]) as up, q_cb_curr_escalation_rates_mod.rs_currency
from q_cb_analysis_activem_with_prices_mod left join q_cb_curr_escalation_rates_mod on (q_cb_analysis_activem_with_prices_mod.rep_month = q_cb_curr_escalation_rates_mod.rep_month) and (q_cb_analysis_activem_with_prices_mod.pc = q_cb_curr_escalation_rates_mod.pc) and (q_cb_analysis_activem_with_prices_mod.l_1 = q_cb_curr_escalation_rates_mod.l_1) and (q_cb_analysis_activem_with_prices_mod.l_2 = q_cb_curr_escalation_rates_mod.l_2) and (q_cb_analysis_activem_with_prices_mod.l_3 = q_cb_curr_escalation_rates_mod.l_3) and (q_cb_analysis_activem_with_prices_mod.l_4 = q_cb_curr_escalation_rates_mod.l_4) and (q_cb_analysis_activem_with_prices_mod.l_5 = q_cb_curr_escalation_rates_mod.l_5) and (q_cb_analysis_activem_with_prices_mod.l_6 = q_cb_curr_escalation_rates_mod.l_6) and (q_cb_analysis_activem_with_prices_mod.rs_l1 = q_cb_curr_escalation_rates_mod.rs_l1) and (q_cb_analysis_activem_with_prices_mod.rs_l2 = q_cb_curr_escalation_rates_mod.rs_l2) and (q_cb_analysis_activem_with_prices_mod.rs_l3 = q_cb_curr_escalation_rates_mod.rs_l3) and (q_cb_analysis_activem_with_prices_mod.rs_l4 = q_cb_curr_escalation_rates_mod.rs_l4) and (q_cb_analysis_activem_with_prices_mod.rs_currency = q_cb_curr_escalation_rates_mod.rs_currency) and (q_cb_analysis_activem_with_prices_mod.exp_cb_mon = q_cb_curr_escalation_rates_mod.month)
group by q_cb_analysis_activem_with_prices_mod.rep_month, q_cb_analysis_activem_with_prices_mod.pc, q_cb_analysis_activem_with_prices_mod.l_1, q_cb_analysis_activem_with_prices_mod.l_2, q_cb_analysis_activem_with_prices_mod.l_3, q_cb_analysis_activem_with_prices_mod.l_4, q_cb_analysis_activem_with_prices_mod.l_5, q_cb_analysis_activem_with_prices_mod.l_6, q_cb_analysis_activem_with_prices_mod.exp_cb_mon, q_cb_curr_escalation_rates_mod.rs_currency
order by q_cb_analysis_activem_with_prices_mod.rep_month, q_cb_analysis_activem_with_prices_mod.pc, q_cb_analysis_activem_with_prices_mod.l_1, q_cb_analysis_activem_with_prices_mod.l_2, q_cb_analysis_activem_with_prices_mod.l_3, q_cb_analysis_activem_with_prices_mod.l_4, q_cb_analysis_activem_with_prices_mod.l_5, q_cb_analysis_activem_with_prices_mod.l_6, q_cb_analysis_activem_with_prices_mod.exp_cb_mon, sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]);

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_market_coeff
select q_cb_res_up_market_coeff.pc, q_cb_res_up_market_coeff.l_1, q_cb_res_up_market_coeff.l_2, q_cb_res_up_market_coeff.l_3, q_cb_res_up_market_coeff.l_4, q_cb_res_up_market_coeff.l_5, q_cb_res_up_market_coeff.l_6, q_cb_res_up_market_coeff.rep_month, q_cb_res_up_market_coeff.g_month, sum([an_rs_quantity]*[up_cost]*[up_cost_coeff]) as up_with_coeff, q_cb_res_up_market_coeff.currency
from q_cb_res_up_market_coeff
group by q_cb_res_up_market_coeff.pc, q_cb_res_up_market_coeff.l_1, q_cb_res_up_market_coeff.l_2, q_cb_res_up_market_coeff.l_3, q_cb_res_up_market_coeff.l_4, q_cb_res_up_market_coeff.l_5, q_cb_res_up_market_coeff.l_6, q_cb_res_up_market_coeff.rep_month, q_cb_res_up_market_coeff.g_month, q_cb_res_up_market_coeff.currency;

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_market_coeff_diff
select q_cb_work_up_with_market_coeff_mod.rep_month, q_cb_work_up_with_market_coeff_mod.pc, q_cb_work_up_with_market_coeff_mod.l_1, q_cb_work_up_with_market_coeff_mod.l_2, q_cb_work_up_with_market_coeff_mod.l_3, q_cb_work_up_with_market_coeff_mod.l_4, q_cb_work_up_with_market_coeff_mod.l_5, q_cb_work_up_with_market_coeff_mod.l_6, q_cb_work_up_with_market_coeff_mod.currency, q_cb_work_up_with_market_coeff_mod.g_month, q_cb_work_up_with_market_coeff.up_with_coeff as up_orj, q_cb_work_up_with_market_coeff.up_with_coeff as up_mod, ([up_orj])-([up_mod]) as diff
from q_cb_work_up_with_market_coeff_mod left join q_cb_work_up_with_market_coeff on (q_cb_work_up_with_market_coeff_mod.g_month = q_cb_work_up_with_market_coeff.g_month) and (q_cb_work_up_with_market_coeff_mod.currency = q_cb_work_up_with_market_coeff.currency) and (q_cb_work_up_with_market_coeff_mod.l_6 = q_cb_work_up_with_market_coeff.l_6) and (q_cb_work_up_with_market_coeff_mod.l_5 = q_cb_work_up_with_market_coeff.l_5) and (q_cb_work_up_with_market_coeff_mod.l_4 = q_cb_work_up_with_market_coeff.l_4) and (q_cb_work_up_with_market_coeff_mod.l_3 = q_cb_work_up_with_market_coeff.l_3) and (q_cb_work_up_with_market_coeff_mod.l_2 = q_cb_work_up_with_market_coeff.l_2) and (q_cb_work_up_with_market_coeff_mod.l_1 = q_cb_work_up_with_market_coeff.l_1) and (q_cb_work_up_with_market_coeff_mod.pc = q_cb_work_up_with_market_coeff.pc) and (q_cb_work_up_with_market_coeff_mod.rep_month = q_cb_work_up_with_market_coeff.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_market_coeff_mod
select q_cb_res_up_market_coeff_mod.pc, q_cb_res_up_market_coeff_mod.l_1, q_cb_res_up_market_coeff_mod.l_2, q_cb_res_up_market_coeff_mod.l_3, q_cb_res_up_market_coeff_mod.l_4, q_cb_res_up_market_coeff_mod.l_5, q_cb_res_up_market_coeff_mod.l_6, q_cb_res_up_market_coeff_mod.rep_month, q_cb_res_up_market_coeff_mod.g_month, sum([an_rs_quantity]*[up_cost]*[up_cost_coeff]) as up_with_coeff, q_cb_res_up_market_coeff_mod.currency
from q_cb_res_up_market_coeff_mod
group by q_cb_res_up_market_coeff_mod.pc, q_cb_res_up_market_coeff_mod.l_1, q_cb_res_up_market_coeff_mod.l_2, q_cb_res_up_market_coeff_mod.l_3, q_cb_res_up_market_coeff_mod.l_4, q_cb_res_up_market_coeff_mod.l_5, q_cb_res_up_market_coeff_mod.l_6, q_cb_res_up_market_coeff_mod.rep_month, q_cb_res_up_market_coeff_mod.g_month, q_cb_res_up_market_coeff_mod.currency;

----------------------------------------------------------------------------------------------------
q_cb_work_up_without_coeff
select sum(([an_rs_quantity]*[up_cost])) as unit_price_planned, q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes.rs_currency
from q_cb_up_pre_coeff_activem_indexes
group by q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes.rs_currency;

----------------------------------------------------------------------------------------------------
q_cb_work_up_without_coeff_diff
select q_cb_work_up_without_coeff_mod.rep_month, q_cb_work_up_without_coeff_mod.pc, q_cb_work_up_without_coeff_mod.l_1, q_cb_work_up_without_coeff_mod.l_2, q_cb_work_up_without_coeff_mod.l_3, q_cb_work_up_without_coeff_mod.l_4, q_cb_work_up_without_coeff_mod.l_5, q_cb_work_up_without_coeff_mod.l_6, q_cb_work_up_without_coeff_mod.rs_currency, q_cb_work_up_without_coeff_mod.exp_cb_mon, q_cb_work_up_without_coeff.unit_price_planned as up_orj, q_cb_work_up_without_coeff.unit_price_planned as up_mod, ([up_orj])-([up_mod]) as diff
from q_cb_work_up_without_coeff_mod left join q_cb_work_up_without_coeff on (q_cb_work_up_without_coeff_mod.exp_cb_mon = q_cb_work_up_without_coeff.exp_cb_mon) and (q_cb_work_up_without_coeff_mod.rs_currency = q_cb_work_up_without_coeff.rs_currency) and (q_cb_work_up_without_coeff_mod.l_6 = q_cb_work_up_without_coeff.l_6) and (q_cb_work_up_without_coeff_mod.l_5 = q_cb_work_up_without_coeff.l_5) and (q_cb_work_up_without_coeff_mod.l_4 = q_cb_work_up_without_coeff.l_4) and (q_cb_work_up_without_coeff_mod.l_3 = q_cb_work_up_without_coeff.l_3) and (q_cb_work_up_without_coeff_mod.l_2 = q_cb_work_up_without_coeff.l_2) and (q_cb_work_up_without_coeff_mod.l_1 = q_cb_work_up_without_coeff.l_1) and (q_cb_work_up_without_coeff_mod.pc = q_cb_work_up_without_coeff.pc) and (q_cb_work_up_without_coeff_mod.rep_month = q_cb_work_up_without_coeff.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_work_up_without_coeff_mod
select sum(([an_rs_quantity]*[up_cost])) as unit_price_planned, q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes_mod.rs_currency
from q_cb_up_pre_coeff_activem_indexes_mod
group by q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes_mod.rs_currency;

----------------------------------------------------------------------------------------------------
q_date_selected
select top 1 *
from (select top 18 * from [t_rnd_budget_active_dates] order by t_rnd_budget_active_dates.date_active desc )  as t
order by t_rnd_budget_active_dates.date_active;

----------------------------------------------------------------------------------------------------
q_exp_diff_curr
select q_cb_exp.rep_month, q_cb_exp.p01_code, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.up_curr, sum([q_cb_exp].[total_expense]-[q_bb_exp].[total_expense]) as diff
from q_cb_exp left join q_bb_exp on (q_cb_exp.up_curr = q_bb_exp.up_curr) and (q_cb_exp.month = q_bb_exp.exp_base_mon) and (q_cb_exp.l_6 = q_bb_exp.l_6) and (q_cb_exp.l_5 = q_bb_exp.l_5) and (q_cb_exp.l_4 = q_bb_exp.l_4) and (q_cb_exp.l_3 = q_bb_exp.l_3) and (q_cb_exp.l_2 = q_bb_exp.l_2) and (q_cb_exp.l_1 = q_bb_exp.l_1) and (q_cb_exp.p01_code = q_bb_exp.pc) and (q_cb_exp.rep_month = q_bb_exp.rep_month)
where (((q_cb_exp.month)<=dlookup("[last_month]","[q_rep_month_max]")))
group by q_cb_exp.rep_month, q_cb_exp.p01_code, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.up_curr;

----------------------------------------------------------------------------------------------------
q_exp_diff_full
select q_cb_exp.rep_month, q_cb_exp.p01_code, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.up_curr, sum([q_cb_exp].[total_expense]-[q_bb_exp].[total_expense]) as diff
from q_cb_exp left join q_bb_exp on (q_cb_exp.up_curr = q_bb_exp.up_curr) and (q_cb_exp.month = q_bb_exp.exp_base_mon) and (q_cb_exp.l_6 = q_bb_exp.l_6) and (q_cb_exp.l_5 = q_bb_exp.l_5) and (q_cb_exp.l_4 = q_bb_exp.l_4) and (q_cb_exp.l_3 = q_bb_exp.l_3) and (q_cb_exp.l_2 = q_bb_exp.l_2) and (q_cb_exp.l_1 = q_bb_exp.l_1) and (q_cb_exp.p01_code = q_bb_exp.pc) and (q_cb_exp.rep_month = q_bb_exp.rep_month)
group by q_cb_exp.rep_month, q_cb_exp.p01_code, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.up_curr;

----------------------------------------------------------------------------------------------------
q_first_budget_gt
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency as up_curr, sum(t_cb_profit_usd_st.income) as incomegt, sum(t_cb_profit_usd_st.expense) as expensegt, sum(t_cb_profit_usd_st.profit) as profitgt
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency
having t_cb_profit_usd_st.rep_month="2206";

----------------------------------------------------------------------------------------------------
q_first_budget_rt
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency as up_curr, sum(t_cb_profit_usd_st.income) as incomert, sum(t_cb_profit_usd_st.expense) as expensert, sum(t_cb_profit_usd_st.profit) as profitrt
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency, t_cb_profit_usd_st.month
having t_cb_profit_usd_st.rep_month="2206"and t_cb_profit_usd_st.month<=[forms]![comparison_screen]![cmb_allproject_curr_month];

----------------------------------------------------------------------------------------------------
q_first_budget_rt_grouped
select q_first_budget_rt.rep_month, q_first_budget_rt.l_1, q_first_budget_rt.l_2, q_first_budget_rt.l_3, q_first_budget_rt.l_4, q_first_budget_rt.l_5, q_first_budget_rt.l_6, q_first_budget_rt.desc_tr_l3, q_first_budget_rt.desc_tr_l2, q_first_budget_rt.desc_tr_l6, q_first_budget_rt.up_curr, sum(q_first_budget_rt.incomert) as incomert, sum(q_first_budget_rt.expensert) as expensert, sum(q_first_budget_rt.profitrt) as profitrt
from q_first_budget_rt
group by q_first_budget_rt.rep_month, q_first_budget_rt.l_1, q_first_budget_rt.l_2, q_first_budget_rt.l_3, q_first_budget_rt.l_4, q_first_budget_rt.l_5, q_first_budget_rt.l_6, q_first_budget_rt.desc_tr_l3, q_first_budget_rt.desc_tr_l2, q_first_budget_rt.desc_tr_l6, q_first_budget_rt.up_curr;

----------------------------------------------------------------------------------------------------
q_first_budget_rt_grouped_projects
select q_first_budget_rt.rep_month, q_first_budget_rt.pc, q_first_budget_rt.l_1, q_first_budget_rt.l_2, q_first_budget_rt.l_3, q_first_budget_rt.l_4, q_first_budget_rt.l_5, q_first_budget_rt.l_6, q_first_budget_rt.desc_tr_l3, q_first_budget_rt.desc_tr_l2, q_first_budget_rt.desc_tr_l6, q_first_budget_rt.up_curr, sum(q_first_budget_rt.incomert) as incomert, sum(q_first_budget_rt.expensert) as expensert, sum(q_first_budget_rt.profitrt) as profitrt
from q_first_budget_rt
group by q_first_budget_rt.rep_month, q_first_budget_rt.pc, q_first_budget_rt.l_1, q_first_budget_rt.l_2, q_first_budget_rt.l_3, q_first_budget_rt.l_4, q_first_budget_rt.l_5, q_first_budget_rt.l_6, q_first_budget_rt.desc_tr_l3, q_first_budget_rt.desc_tr_l2, q_first_budget_rt.desc_tr_l6, q_first_budget_rt.up_curr;

----------------------------------------------------------------------------------------------------
q_l6_code_selection
select top 1 *
from (select top 2597 * from [c6_code] order by [code_l6] )  as t
order by [code_l6] desc;

----------------------------------------------------------------------------------------------------
q_l6_selected
select top 1 *
from (select top 5 * from [t_rnd_budget_l6] order by t_rnd_budget_l6.l_1 desc,t_rnd_budget_l6.l_2 desc,t_rnd_budget_l6.l_3 desc,t_rnd_budget_l6.l_4 desc,t_rnd_budget_l6.l_5 desc,t_rnd_budget_l6.l_6 desc)  as t
order by t_rnd_budget_l6.l_1, t_rnd_budget_l6.l_2, t_rnd_budget_l6.l_3, t_rnd_budget_l6.l_4, t_rnd_budget_l6.l_5, t_rnd_budget_l6.l_6;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates
select
		*

	from 
		q_monthly_rates_eur_try

	

union select
		*

	from 
		q_monthly_rates_usd_try;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_ap
insert into t_monthly_curr_rates_mod ( [month], constant, rate, budget_curr, rep_month )
select q_monthly_curr_rates.month, q_monthly_curr_rates.constant, q_monthly_curr_rates.rate, q_monthly_curr_rates.budget_curr, q_monthly_curr_rates.rep_month
from q_monthly_curr_rates
where (((q_monthly_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_diff
select q_monthly_curr_rates_mod_crosstab.month, ([q_monthly_curr_rates_mod_crosstab].r_eur_try-mon_curr_rates.r_eur_try) as eur_try, ([q_monthly_curr_rates_mod_crosstab].r_try_eur-mon_curr_rates.r_try_eur) as try_eur, ([q_monthly_curr_rates_mod_crosstab].r_usd_try-mon_curr_rates.r_usd_try) as usd_try, ([q_monthly_curr_rates_mod_crosstab].r_try_usd-mon_curr_rates.r_try_usd) as try_usd, ([q_monthly_curr_rates_mod_crosstab].r_eur_usd-mon_curr_rates.r_eur_usd) as eur_usd, ([q_monthly_curr_rates_mod_crosstab].r_usd_eur-mon_curr_rates.r_usd_eur) as usd_eur, mon_curr_rates.rep_month
from q_monthly_curr_rates_mod_crosstab inner join mon_curr_rates on q_monthly_curr_rates_mod_crosstab.month = mon_curr_rates.month
where (((mon_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_crosstab
transform sum(q_monthly_curr_rates_mod_union.rate) as sumofrate
select q_monthly_curr_rates_mod_union.month
from q_monthly_curr_rates_mod_union
group by q_monthly_curr_rates_mod_union.month
pivot q_monthly_curr_rates_mod_union.constant;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_delete
delete t_monthly_curr_rates_mod.constant, t_monthly_curr_rates_mod.budget_curr, t_monthly_curr_rates_mod.month, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_mod.rep_month, t_monthly_curr_rates_mod.rep_month
from t_monthly_curr_rates_mod;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_eur_eur
select "eur" as budget_curr, q_monthly_curr_rates_mod_try_eur.month, 1 as rate, "r_eur_eur" as constant, q_monthly_curr_rates_mod_try_usd.rep_month
from q_monthly_curr_rates_mod_try_eur left join q_monthly_curr_rates_mod_try_usd on q_monthly_curr_rates_mod_try_eur.month = q_monthly_curr_rates_mod_try_usd.month
where (((q_monthly_curr_rates_mod_try_usd.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_eur_try
select t_monthly_curr_rates_mod.budget_curr, t_monthly_curr_rates_mod.month, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_mod.constant, t_monthly_curr_rates_mod.rep_month
from t_monthly_curr_rates_mod
where (((t_monthly_curr_rates_mod.constant)="r_eur_try") and ((t_monthly_curr_rates_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_eur_try_graph
select t_monthly_curr_rates_st.constant, t_monthly_curr_rates_st.rate, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_st.budget_curr, t_monthly_curr_rates_st.month
from t_monthly_curr_rates_st inner join t_monthly_curr_rates_mod on (t_monthly_curr_rates_st.rep_month = t_monthly_curr_rates_mod.rep_month) and (t_monthly_curr_rates_st.month = t_monthly_curr_rates_mod.month) and (t_monthly_curr_rates_st.constant = t_monthly_curr_rates_mod.constant)
where (((t_monthly_curr_rates_st.constant)="r_eur_try") and ((t_monthly_curr_rates_st.month)>=#1/1/2022#));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_eur_usd
select "usd" as budget_curr, q_monthly_curr_rates_mod_eur_try.month, round([q_monthly_curr_rates_mod_eur_try].[rate]/[q_monthly_curr_rates_mod_usd_try].[rate],6) as rate, "r_eur_usd" as constant, q_monthly_curr_rates_mod_usd_try.rep_month
from q_monthly_curr_rates_mod_eur_try inner join q_monthly_curr_rates_mod_usd_try on q_monthly_curr_rates_mod_eur_try.month = q_monthly_curr_rates_mod_usd_try.month
where (((q_monthly_curr_rates_mod_usd_try.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_try_eur
select "eur" as budget_curr, q_monthly_curr_rates_mod_eur_try.month, round(1/[q_monthly_curr_rates_mod_eur_try].[rate],6) as rate, "r_try_eur" as constant, q_monthly_curr_rates_mod_eur_try.rep_month
from q_monthly_curr_rates_mod_eur_try
where (((q_monthly_curr_rates_mod_eur_try.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_try_try
select "try" as budget_curr, q_monthly_curr_rates_mod_try_eur.month, 1 as rate, "r_try_try" as constant, q_monthly_curr_rates_mod_try_usd.rep_month
from q_monthly_curr_rates_mod_try_eur left join q_monthly_curr_rates_mod_try_usd on q_monthly_curr_rates_mod_try_eur.month = q_monthly_curr_rates_mod_try_usd.month
where (((q_monthly_curr_rates_mod_try_usd.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_try_usd
select "usd" as budget_curr, q_monthly_curr_rates_mod_usd_try.month, round(1/[q_monthly_curr_rates_mod_usd_try].[rate],6) as rate, "r_try_usd" as constant, q_monthly_curr_rates_mod_usd_try.rep_month
from q_monthly_curr_rates_mod_usd_try
where (((q_monthly_curr_rates_mod_usd_try.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_union
select 
		*
	from 
q_monthly_curr_rates_mod_eur_eur
		
union 
select 
		*
	from 
		q_monthly_curr_rates_mod_eur_try

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_eur_usd


union 
select 
		*
	from 
		q_monthly_curr_rates_mod_try_eur

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_try_try

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_try_usd

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_usd_eur

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_usd_try

union select 
		*
	from 
		q_monthly_curr_rates_mod_usd_usd;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_usd_eur
select "eur" as budget_curr, q_monthly_curr_rates_mod_usd_try.month, round([q_monthly_curr_rates_mod_usd_try].[rate]/[q_monthly_curr_rates_mod_eur_try].[rate],6) as rate, "r_usd_eur" as constant, q_monthly_curr_rates_mod_eur_try.rep_month
from q_monthly_curr_rates_mod_usd_try left join q_monthly_curr_rates_mod_eur_try on q_monthly_curr_rates_mod_usd_try.month = q_monthly_curr_rates_mod_eur_try.month
where (((q_monthly_curr_rates_mod_eur_try.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_usd_try
select t_monthly_curr_rates_mod.budget_curr, t_monthly_curr_rates_mod.month, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_mod.constant, t_monthly_curr_rates_mod.rep_month
from t_monthly_curr_rates_mod
where (((t_monthly_curr_rates_mod.constant)="r_usd_try") and ((t_monthly_curr_rates_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_usd_try_graph
select t_monthly_curr_rates_st.constant, t_monthly_curr_rates_st.rate, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_st.budget_curr, t_monthly_curr_rates_st.month
from t_monthly_curr_rates_st inner join t_monthly_curr_rates_mod on (t_monthly_curr_rates_st.rep_month = t_monthly_curr_rates_mod.rep_month) and (t_monthly_curr_rates_st.month = t_monthly_curr_rates_mod.month) and (t_monthly_curr_rates_st.constant = t_monthly_curr_rates_mod.constant)
where (((t_monthly_curr_rates_st.constant)="r_usd_try") and ((t_monthly_curr_rates_st.month)>=#1/1/2022#));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_usd_usd
select "usd" as budget_curr, q_monthly_curr_rates_mod_try_eur.month, 1 as rate, "r_usd_usd" as constant, q_monthly_curr_rates_mod_try_usd.rep_month
from q_monthly_curr_rates_mod_try_eur left join q_monthly_curr_rates_mod_try_usd on q_monthly_curr_rates_mod_try_eur.month = q_monthly_curr_rates_mod_try_usd.month
where (((q_monthly_curr_rates_mod_try_usd.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mt
select q_monthly_curr_rates.constant, q_monthly_curr_rates.budget_curr, q_monthly_curr_rates.month, q_monthly_curr_rates.rate, q_monthly_curr_rates.rep_month into t_monthly_curr_rates_st
from q_monthly_curr_rates
where (((q_monthly_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_rates_eur_try
select mon_curr_rates.month, "r_eur_try" as constant, mon_curr_rates.r_eur_try as rate, "try" as budget_curr, mon_curr_rates.rep_month
from mon_curr_rates
where (((mon_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_rates_upd_mod
update t_monthly_curr_rates_st left join t_monthly_curr_rates_mod on (t_monthly_curr_rates_st.budget_curr = t_monthly_curr_rates_mod.budget_curr) and (t_monthly_curr_rates_st.constant = t_monthly_curr_rates_mod.constant) and (t_monthly_curr_rates_st.month = t_monthly_curr_rates_mod.month) and (t_monthly_curr_rates_st.rep_month = t_monthly_curr_rates_mod.rep_month) set t_monthly_curr_rates_mod.constant = [t_monthly_curr_rates_st].[constant], t_monthly_curr_rates_mod.budget_curr = [t_monthly_curr_rates_st].[budget_curr], t_monthly_curr_rates_mod.[month] = [t_monthly_curr_rates_st].[month], t_monthly_curr_rates_mod.rate = [t_monthly_curr_rates_st].[rate], t_monthly_curr_rates_mod.rep_month = [t_monthly_curr_rates_st].[rep_month]
where (((t_monthly_curr_rates_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_rates_usd_try
select mon_curr_rates.month, "r_usd_try" as constant, mon_curr_rates.r_usd_try as rate, "try" as budget_curr, mon_curr_rates.rep_month
from mon_curr_rates
where (((mon_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_pl_analysis_comp
select t_bb_analysis_add.p01_code, t_bb_analysis_add.rs_l1, t_bb_analysis_add.rs_l2, t_bb_analysis_add.rs_l3, t_bb_analysis_add.rs_l4, t_bb_analysis_add.analysis_date, t_bb_analysis.p01_code
from t_bb_analysis_add left join t_bb_analysis on (t_bb_analysis_add.analysis_date = t_bb_analysis.analysis_date) and (t_bb_analysis_add.rs_l4 = t_bb_analysis.rs_l4) and (t_bb_analysis_add.rs_l3 = t_bb_analysis.rs_l3) and (t_bb_analysis_add.rs_l2 = t_bb_analysis.rs_l2) and (t_bb_analysis_add.rs_l1 = t_bb_analysis.rs_l1) and (t_bb_analysis_add.p01_code = t_bb_analysis.p01_code)
where (((t_bb_analysis.p01_code) is null));

----------------------------------------------------------------------------------------------------
q_pl_coeff_export
select t_pl_analysis.p01_code, t_pl_analysis.rs_l1, t_pl_analysis.rs_l2, t_pl_analysis.rs_l3, t_pl_analysis.rs_l4, r4_code.r_4_desc_tr, r4_code.w_ufe, r4_code.w_tufe, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.w_metal, r4_code.w_petrol, r4_code.w_cement, r4_code.w_electricity
from r4_code left join t_pl_analysis on (r4_code.r_1_code = t_pl_analysis.rs_l1) and (r4_code.r_2_code = t_pl_analysis.rs_l2) and (r4_code.r_3_code = t_pl_analysis.rs_l3) and (r4_code.r_4_code = t_pl_analysis.rs_l4)
group by t_pl_analysis.p01_code, t_pl_analysis.rs_l1, t_pl_analysis.rs_l2, t_pl_analysis.rs_l3, t_pl_analysis.rs_l4, r4_code.r_4_desc_tr, r4_code.w_ufe, r4_code.w_tufe, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.w_metal, r4_code.w_petrol, r4_code.w_cement, r4_code.w_electricity
having (((t_pl_analysis.p01_code) is not null));

----------------------------------------------------------------------------------------------------
q_pl_exp
select q_cb_unit_price.rep_month, q_cb_unit_price.p01_code, q_cb_unit_price.l_1, q_cb_unit_price.l_2, q_cb_unit_price.l_3, q_cb_unit_price.l_4, q_cb_unit_price.l_5, q_cb_unit_price.l_6, q_cb_unit_price.month, sum(([exp_cb_qty]*[unit_price_planned_coeff])) as total_expense, q_cb_unit_price.up_curr, t_cb_qty.key_r_pc_l6
from q_cb_unit_price left join t_cb_qty on (q_cb_unit_price.key_r_pc_l6 = t_cb_qty.key_r_pc_l6) and (q_cb_unit_price.month = t_cb_qty.exp_cb_mon)
group by q_cb_unit_price.rep_month, q_cb_unit_price.p01_code, q_cb_unit_price.l_1, q_cb_unit_price.l_2, q_cb_unit_price.l_3, q_cb_unit_price.l_4, q_cb_unit_price.l_5, q_cb_unit_price.l_6, q_cb_unit_price.month, q_cb_unit_price.up_curr, t_cb_qty.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_pl_exp_mod
select q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.p01_code, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.month, sum(([exp_cb_qty]*[unit_price_planned_coeff])) as total_expense, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.key_r_pc_l6
from q_cb_unit_price_mod left join t_cb_qty on (q_cb_unit_price_mod.g_month = t_cb_qty.exp_cb_mon) and (q_cb_unit_price_mod.key_r_pc_l6 = t_cb_qty.key_r_pc_l6)
group by q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.p01_code, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.month, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_pl_indexes
select t_cb_indexes.rep_month, t_cb_indexes.g_month, t_cb_indexes.bb_metal, t_cb_indexes.bb_electricity, t_cb_indexes.bb_cement, t_cb_indexes.bb_petrol, t_cb_indexes.bb_inf_usd, t_cb_indexes.bb_inf_eur, t_cb_indexes.bb_ufe, t_cb_indexes.bb_tufe
from t_cb_indexes
where (((t_cb_indexes.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_r4_code_pool
select r4_code.r_1_code, r4_code.r_2_code, r4_code.r_3_code, r4_code.r_4_code, r4_code.currency
from r4_code
order by r4_code.r_1_code desc , r4_code.r_2_code desc , r4_code.r_3_code desc , r4_code.r_4_code desc;

----------------------------------------------------------------------------------------------------
q_r4_code_selection
select top 1 *
from (select top 297 * from [q_r4_code_pool] order by r4_code.r_1_code ,r4_code.r_2_code ,r4_code.r_3_code ,r4_code.r_4_code )  as t
order by r4_code.r_1_code desc , r4_code.r_2_code desc , r4_code.r_3_code desc , r4_code.r_4_code desc;

----------------------------------------------------------------------------------------------------
q_r4_filtered
select t_rnd_budget_r4.r_1, t_rnd_budget_r4.r_2, t_rnd_budget_r4.r_3, t_rnd_budget_r4.r_4
from t_rnd_budget_r4
group by t_rnd_budget_r4.r_1, t_rnd_budget_r4.r_2, t_rnd_budget_r4.r_3, t_rnd_budget_r4.r_4
order by t_rnd_budget_r4.r_1, t_rnd_budget_r4.r_2, t_rnd_budget_r4.r_3, t_rnd_budget_r4.r_4;

----------------------------------------------------------------------------------------------------
q_r4_selected_for_up
select top 1 *
from (select top 5 * from [q_r4_filtered] order by q_r4_filtered.r_1 desc,q_r4_filtered.r_2 desc,q_r4_filtered.r_3 desc,q_r4_filtered.r_4 desc)  as t
order by q_r4_filtered.r_1, q_r4_filtered.r_2, q_r4_filtered.r_3, q_r4_filtered.r_4;

----------------------------------------------------------------------------------------------------
q_rep_month_max
select max(t_rep_month.rep_month_date) as last_month
from t_rep_month;

----------------------------------------------------------------------------------------------------
q_rep_month_max_val
select max(t_rep_month.rep_month) as rep_month
from t_rep_month;

----------------------------------------------------------------------------------------------------
q_rep_month_order
select t_rep_month.rep_month, t_rep_month.rep_month_date, dcount("[rep_month]","[t_rep_month]","int([rep_month])<=" & int([rep_month])) as rownum
from t_rep_month
order by t_rep_month.rep_month desc , t_rep_month.rep_month_date desc;

----------------------------------------------------------------------------------------------------
q_second_budget_gt
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency as up_curr, sum(t_cb_profit_usd_st.income) as incomegt, sum(t_cb_profit_usd_st.expense) as expensegt, sum(t_cb_profit_usd_st.profit) as profitgt
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency
having t_cb_profit_usd_st.rep_month="2207";

----------------------------------------------------------------------------------------------------
q_second_budget_rt
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency as up_curr, sum(t_cb_profit_usd_st.income) as incomert, sum(t_cb_profit_usd_st.expense) as expensert, sum(t_cb_profit_usd_st.profit) as profitrt
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.pc, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency, t_cb_profit_usd_st.month
having t_cb_profit_usd_st.rep_month="2207"and t_cb_profit_usd_st.month<=[forms]![comparison_screen]![cmb_allproject_curr_month];

----------------------------------------------------------------------------------------------------
q_second_budget_rt_grouped
select q_second_budget_rt.rep_month, q_second_budget_rt.l_1, q_second_budget_rt.l_2, q_second_budget_rt.l_3, q_second_budget_rt.l_4, q_second_budget_rt.l_5, q_second_budget_rt.l_6, q_second_budget_rt.desc_tr_l3, q_second_budget_rt.desc_tr_l2, q_second_budget_rt.desc_tr_l6, q_second_budget_rt.up_curr, sum(q_second_budget_rt.incomert) as incomert, sum(q_second_budget_rt.expensert) as expensert, sum(q_second_budget_rt.profitrt) as profitrt
from q_second_budget_rt
group by q_second_budget_rt.rep_month, q_second_budget_rt.l_1, q_second_budget_rt.l_2, q_second_budget_rt.l_3, q_second_budget_rt.l_4, q_second_budget_rt.l_5, q_second_budget_rt.l_6, q_second_budget_rt.desc_tr_l3, q_second_budget_rt.desc_tr_l2, q_second_budget_rt.desc_tr_l6, q_second_budget_rt.up_curr;

----------------------------------------------------------------------------------------------------
q_second_budget_rt_grouped_projects
select q_second_budget_rt.rep_month, q_second_budget_rt.pc, q_second_budget_rt.l_1, q_second_budget_rt.l_2, q_second_budget_rt.l_3, q_second_budget_rt.l_4, q_second_budget_rt.l_5, q_second_budget_rt.l_6, q_second_budget_rt.desc_tr_l3, q_second_budget_rt.desc_tr_l2, q_second_budget_rt.desc_tr_l6, q_second_budget_rt.up_curr, sum(q_second_budget_rt.incomert) as incomert, sum(q_second_budget_rt.expensert) as expensert, sum(q_second_budget_rt.profitrt) as profitrt
from q_second_budget_rt
group by q_second_budget_rt.rep_month, q_second_budget_rt.pc, q_second_budget_rt.l_1, q_second_budget_rt.l_2, q_second_budget_rt.l_3, q_second_budget_rt.l_4, q_second_budget_rt.l_5, q_second_budget_rt.l_6, q_second_budget_rt.desc_tr_l3, q_second_budget_rt.desc_tr_l2, q_second_budget_rt.desc_tr_l6, q_second_budget_rt.up_curr;

----------------------------------------------------------------------------------------------------
~sq_c01_login~sq_ccbx_project
select [01_p01_projects_full].p01_s_name
from 01_p01_projects_full;

----------------------------------------------------------------------------------------------------
~sq_c11_main_menu_old~sq_ccbx_pr2
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_c11_main_menu_old~sq_ccbx_pr3
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_c11_main_menu_old~sq_ccbx_pr4
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_c11_main_menu_old~sq_ccbx_project
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_c99_menu assets~sq_ccbx_project
select [obsolete_p01_projects].p01_code, [obsolete_p01_projects].p01_s_name
from obsolete_p01_projects
order by [obsolete_p01_projects].p01_code;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_01
select t_coeff_desc.description
from t_coeff_desc
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_010
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_07] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_06] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_02
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_03
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_04
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_05
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_06
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_07
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_06] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_08
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_07] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_06] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_commodity_09
select t_coeff_desc.description
from t_coeff_desc
where (((t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_07] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_06] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_05] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_04] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_03] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_02] and (t_coeff_desc.description)<>[forms]![analysis_screen]![cbo_commodity_01]))
order by t_coeff_desc.order;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_01
select t_months.g_month
from t_months
where t_months.g_month > cbo_date_start_01;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_010
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_02
select t_months.g_month
from t_months
where t_months.g_month > cbo_date_start_02;

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_03
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_04
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_05
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_06
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_07
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_08
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_end_09
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_01
select t_months.g_month
from t_months
where t_months.g_month<cbo_date_end_01 and t_months.g_month>dlookup("[last_month]","[q_rep_month_max]");

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_010
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_02
select t_months.g_month
from t_months
where t_months.g_month<cbo_date_end_02 and t_months.g_month>dlookup("[last_month]","[q_rep_month_max]");

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_03
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_04
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_05
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_06
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_07
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_08
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_canalysis_screen~sq_ccbo_date_start_09
select t_months.g_month
from t_months
where (((t_months.g_month)>dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccbo_date_by_project
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccbo_project
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccombo578
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccombo587
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccombo590
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_cbaz bütçe~sq_ccombo596
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_date_by_project
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_date_compare_cons
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_date_consolidated
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_date_project_based_all
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccbo_project
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccombo554
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement_test~sq_ccombo555
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement~sq_ccbo_date_by_project
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement~sq_ccbo_date_consolidated
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement~sq_ccbo_date_project_based_all
select t_rep_month.rep_month
from t_rep_month
order by t_rep_month.rep_month desc;

----------------------------------------------------------------------------------------------------
~sq_cmanagement~sq_ccbo_project
select q_budget_project_months.name as r03_s_name, q_budget_project_months.pc as p_code
from q_budget_project_months
group by q_budget_project_months.name, q_budget_project_months.pc;

----------------------------------------------------------------------------------------------------
~sq_cscenario_screen~sq_ccbo_project
select [t_001_projects].[r03_s_name], [t_001_projects].[p_code]
from t_001_projects;

----------------------------------------------------------------------------------------------------
~sq_ctech_office~sq_ccmb_project_name
select t_001_projects.r03_s_name
from q_budget_project_months left join t_001_projects on q_budget_project_months.pc = t_001_projects.p_code;

----------------------------------------------------------------------------------------------------
~sq_dreport1~sq_dc_bb_metal
select distinctrow *
from t_ac_indexes_mod;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_allprojects_compare_detailed
select q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l2, q_cb_sum_projects_report_data.desc_tr_l6, q_cb_sum_projects_report_data.second_data_gt, q_cb_sum_projects_report_data.second_data_rt, q_cb_sum_projects_report_data.first_data_gt, q_cb_sum_projects_report_data.first_data_rt, q_cb_sum_projects_report_data.second_data_rem, q_cb_sum_projects_report_data.first_data_rem, q_cb_sum_projects_report_data.gt_rem, q_cb_sum_projects_report_data.rt_rem, q_cb_sum_projects_report_data.rem_rem, q_cb_sum_projects_report_data.budget_type, t_001_projects.r03_s_name, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as l6_comb
from q_cb_sum_projects_report_data left join t_001_projects on q_cb_sum_projects_report_data.pc = t_001_projects.p_code
group by q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l2, q_cb_sum_projects_report_data.desc_tr_l6, q_cb_sum_projects_report_data.second_data_gt, q_cb_sum_projects_report_data.second_data_rt, q_cb_sum_projects_report_data.first_data_gt, q_cb_sum_projects_report_data.first_data_rt, q_cb_sum_projects_report_data.second_data_rem, q_cb_sum_projects_report_data.first_data_rem, q_cb_sum_projects_report_data.gt_rem, q_cb_sum_projects_report_data.rt_rem, q_cb_sum_projects_report_data.rem_rem, q_cb_sum_projects_report_data.budget_type, t_001_projects.r03_s_name, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6];

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_allprojects_compare_lvl_4
select q_cb_sum_projects_report_data_lvl_4.pc, q_cb_sum_projects_report_data_lvl_4.l_1, q_cb_sum_projects_report_data_lvl_4.l_2, q_cb_sum_projects_report_data_lvl_4.l_3, q_cb_sum_projects_report_data_lvl_4.l_4, q_cb_sum_projects_report_data_lvl_4.l_5, q_cb_sum_projects_report_data_lvl_4.l_6, q_cb_sum_projects_report_data_lvl_4.up_curr, q_cb_sum_projects_report_data_lvl_4.desc_tr_l3, q_cb_sum_projects_report_data_lvl_4.desc_tr_l6, q_cb_sum_projects_report_data_lvl_4.second_data_gt, q_cb_sum_projects_report_data_lvl_4.second_data_rt, q_cb_sum_projects_report_data_lvl_4.first_data_gt, q_cb_sum_projects_report_data_lvl_4.first_data_rt, q_cb_sum_projects_report_data_lvl_4.second_data_rem, q_cb_sum_projects_report_data_lvl_4.first_data_rem, q_cb_sum_projects_report_data_lvl_4.gt_rem, [first_data_rt]-[second_data_rt] as rt_rem, [first_data_rem]-[second_data_rem] as rem_rem, q_cb_sum_projects_report_data_lvl_4.budget_type, t_001_projects.r03_s_name, q_cb_sum_projects_report_data_lvl_4.desc_tr_l4, q_cb_sum_projects_report_data_lvl_4.desc_tr_l5
from q_cb_sum_projects_report_data_lvl_4 left join t_001_projects on q_cb_sum_projects_report_data_lvl_4.pc = t_001_projects.p_code
group by q_cb_sum_projects_report_data_lvl_4.pc, q_cb_sum_projects_report_data_lvl_4.l_1, q_cb_sum_projects_report_data_lvl_4.l_2, q_cb_sum_projects_report_data_lvl_4.l_3, q_cb_sum_projects_report_data_lvl_4.l_4, q_cb_sum_projects_report_data_lvl_4.l_5, q_cb_sum_projects_report_data_lvl_4.l_6, q_cb_sum_projects_report_data_lvl_4.up_curr, q_cb_sum_projects_report_data_lvl_4.desc_tr_l3, q_cb_sum_projects_report_data_lvl_4.desc_tr_l6, q_cb_sum_projects_report_data_lvl_4.second_data_gt, q_cb_sum_projects_report_data_lvl_4.second_data_rt, q_cb_sum_projects_report_data_lvl_4.first_data_gt, q_cb_sum_projects_report_data_lvl_4.first_data_rt, q_cb_sum_projects_report_data_lvl_4.second_data_rem, q_cb_sum_projects_report_data_lvl_4.first_data_rem, q_cb_sum_projects_report_data_lvl_4.gt_rem, [first_data_rt]-[second_data_rt], [first_data_rem]-[second_data_rem], q_cb_sum_projects_report_data_lvl_4.budget_type, t_001_projects.r03_s_name, q_cb_sum_projects_report_data_lvl_4.desc_tr_l4, q_cb_sum_projects_report_data_lvl_4.desc_tr_l5;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_allprojects_compare_lvl_5
select q_cb_sum_projects_report_data_lvl_5.pc, q_cb_sum_projects_report_data_lvl_5.l_1, q_cb_sum_projects_report_data_lvl_5.l_2, q_cb_sum_projects_report_data_lvl_5.l_3, q_cb_sum_projects_report_data_lvl_5.l_4, q_cb_sum_projects_report_data_lvl_5.l_5, q_cb_sum_projects_report_data_lvl_5.l_6, q_cb_sum_projects_report_data_lvl_5.up_curr, q_cb_sum_projects_report_data_lvl_5.desc_tr_l3, q_cb_sum_projects_report_data_lvl_5.desc_tr_l6, q_cb_sum_projects_report_data_lvl_5.second_data_gt, q_cb_sum_projects_report_data_lvl_5.second_data_rt, q_cb_sum_projects_report_data_lvl_5.first_data_gt, q_cb_sum_projects_report_data_lvl_5.first_data_rt, q_cb_sum_projects_report_data_lvl_5.second_data_rem, q_cb_sum_projects_report_data_lvl_5.first_data_rem, q_cb_sum_projects_report_data_lvl_5.gt_rem, [first_data_rt]-[second_data_rt] as rt_rem, [first_data_rem]-[second_data_rem] as rem_rem, q_cb_sum_projects_report_data_lvl_5.budget_type, t_001_projects.r03_s_name, q_cb_sum_projects_report_data_lvl_5.desc_tr_l4, q_cb_sum_projects_report_data_lvl_5.desc_tr_l5
from q_cb_sum_projects_report_data_lvl_5 left join t_001_projects on q_cb_sum_projects_report_data_lvl_5.pc = t_001_projects.p_code
group by q_cb_sum_projects_report_data_lvl_5.pc, q_cb_sum_projects_report_data_lvl_5.l_1, q_cb_sum_projects_report_data_lvl_5.l_2, q_cb_sum_projects_report_data_lvl_5.l_3, q_cb_sum_projects_report_data_lvl_5.l_4, q_cb_sum_projects_report_data_lvl_5.l_5, q_cb_sum_projects_report_data_lvl_5.l_6, q_cb_sum_projects_report_data_lvl_5.up_curr, q_cb_sum_projects_report_data_lvl_5.desc_tr_l3, q_cb_sum_projects_report_data_lvl_5.desc_tr_l6, q_cb_sum_projects_report_data_lvl_5.second_data_gt, q_cb_sum_projects_report_data_lvl_5.second_data_rt, q_cb_sum_projects_report_data_lvl_5.first_data_gt, q_cb_sum_projects_report_data_lvl_5.first_data_rt, q_cb_sum_projects_report_data_lvl_5.second_data_rem, q_cb_sum_projects_report_data_lvl_5.first_data_rem, q_cb_sum_projects_report_data_lvl_5.gt_rem, [first_data_rt]-[second_data_rt], [first_data_rem]-[second_data_rem], q_cb_sum_projects_report_data_lvl_5.budget_type, t_001_projects.r03_s_name, q_cb_sum_projects_report_data_lvl_5.desc_tr_l4, q_cb_sum_projects_report_data_lvl_5.desc_tr_l5;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons
select q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.currency as up_curr, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem
from q_cb_cons_report_data
group by q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.currency, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_compare_detailed
select [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as l6_comb, q_cb_sum_cons_report_data.desc_tr_l6, q_cb_sum_cons_report_data.up_curr, sum(q_cb_sum_cons_report_data.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data.budget_type, sum(q_cb_sum_cons_report_data.gt_rem) as gt_rem, sum(q_cb_sum_cons_report_data.rt_rem) as rt_rem, sum(q_cb_sum_cons_report_data.rem_rem) as rem_rem, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] as l5_comb
from q_cb_sum_cons_report_data
group by [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], q_cb_sum_cons_report_data.desc_tr_l6, q_cb_sum_cons_report_data.up_curr, q_cb_sum_cons_report_data.budget_type, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5]
order by sum(q_cb_sum_cons_report_data.gt_rem) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_compare_lvl_4
select q_cb_sum_cons_report_data_lvl_4.l_1, q_cb_sum_cons_report_data_lvl_4.l_2, q_cb_sum_cons_report_data_lvl_4.l_3, q_cb_sum_cons_report_data_lvl_4.l_4, q_cb_sum_cons_report_data_lvl_4.up_curr, q_cb_sum_cons_report_data_lvl_4.desc_tr_l3, sum(q_cb_sum_cons_report_data_lvl_4.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data_lvl_4.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data_lvl_4.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data_lvl_4.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data_lvl_4.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data_lvl_4.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data_lvl_4.budget_type, sum(q_cb_sum_cons_report_data_lvl_4.gt_rem) as gt_rem, q_cb_sum_cons_report_data_lvl_4.desc_tr_l4
from q_cb_sum_cons_report_data_lvl_4
group by q_cb_sum_cons_report_data_lvl_4.l_1, q_cb_sum_cons_report_data_lvl_4.l_2, q_cb_sum_cons_report_data_lvl_4.l_3, q_cb_sum_cons_report_data_lvl_4.l_4, q_cb_sum_cons_report_data_lvl_4.up_curr, q_cb_sum_cons_report_data_lvl_4.desc_tr_l3, q_cb_sum_cons_report_data_lvl_4.budget_type, q_cb_sum_cons_report_data_lvl_4.desc_tr_l4
order by sum(q_cb_sum_cons_report_data_lvl_4.gt_rem) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_compare_lvl_5
select q_cb_sum_cons_report_data_lvl_5.l_1, q_cb_sum_cons_report_data_lvl_5.l_2, q_cb_sum_cons_report_data_lvl_5.l_3, q_cb_sum_cons_report_data_lvl_5.l_4, q_cb_sum_cons_report_data_lvl_5.up_curr, sum(q_cb_sum_cons_report_data_lvl_5.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data_lvl_5.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data_lvl_5.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data_lvl_5.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data_lvl_5.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data_lvl_5.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data_lvl_5.budget_type, sum(q_cb_sum_cons_report_data_lvl_5.gt_rem) as gt_rem, q_cb_sum_cons_report_data_lvl_5.desc_tr_l4, q_cb_sum_cons_report_data_lvl_5.l_5, q_cb_sum_cons_report_data_lvl_5.desc_tr_l5
from q_cb_sum_cons_report_data_lvl_5
group by q_cb_sum_cons_report_data_lvl_5.l_1, q_cb_sum_cons_report_data_lvl_5.l_2, q_cb_sum_cons_report_data_lvl_5.l_3, q_cb_sum_cons_report_data_lvl_5.l_4, q_cb_sum_cons_report_data_lvl_5.up_curr, q_cb_sum_cons_report_data_lvl_5.budget_type, q_cb_sum_cons_report_data_lvl_5.desc_tr_l4, q_cb_sum_cons_report_data_lvl_5.l_5, q_cb_sum_cons_report_data_lvl_5.desc_tr_l5
order by sum(q_cb_sum_cons_report_data_lvl_5.gt_rem) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_detailed
select [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as l6_comb, q_cb_cons_report_data.currency as up_curr, q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.l_5, q_cb_cons_report_data.l_6, q_cb_cons_report_data.desc_tr_l6, q_cb_cons_report_data.currency, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, [incomegt]-[incomert] as incomerem, [expensegt]-[expensert] as expenserem, [profitgt]-[profitrt] as profitrem
from q_cb_cons_report_data
group by [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.l_5, q_cb_cons_report_data.l_6, q_cb_cons_report_data.desc_tr_l6, q_cb_cons_report_data.currency, q_cb_cons_report_data.desc_tr_l6, [incomegt]-[incomert], [expensegt]-[expensert], [profitgt]-[profitrt];

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_lvl_4
select q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.currency as up_curr, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem, c4_code.desc_tr_l4
from q_cb_cons_report_data left join c4_code on (q_cb_cons_report_data.l_4 = c4_code.c_l4) and (q_cb_cons_report_data.l_3 = c4_code.c_l3) and (q_cb_cons_report_data.l_2 = c4_code.c_l2) and (q_cb_cons_report_data.l_1 = c4_code.c_l1)
group by q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.currency, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, c4_code.desc_tr_l4
order by sum(q_cb_cons_report_data.profitgt) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_sum_cons_lvl_5
select q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.currency as up_curr, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem, q_cb_cons_report_data.l_5, c5_code.desc_tr_l5, c4_code.desc_tr_l4
from (q_cb_cons_report_data left join c5_code on (q_cb_cons_report_data.l_5 = c5_code.c_l5) and (q_cb_cons_report_data.l_4 = c5_code.c_l4) and (q_cb_cons_report_data.l_3 = c5_code.c_l3) and (q_cb_cons_report_data.l_2 = c5_code.c_l2) and (q_cb_cons_report_data.l_1 = c5_code.c_l1)) left join c4_code on (q_cb_cons_report_data.l_1 = c4_code.c_l1) and (q_cb_cons_report_data.l_2 = c4_code.c_l2) and (q_cb_cons_report_data.l_3 = c4_code.c_l3) and (q_cb_cons_report_data.l_4 = c4_code.c_l4)
group by q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.currency, q_cb_cons_report_data.desc_tr_l2, q_cb_cons_report_data.desc_tr_l3, q_cb_cons_report_data.l_5, c5_code.desc_tr_l5, c4_code.desc_tr_l4
order by sum(q_cb_cons_report_data.profitgt) desc;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_summary
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, q_cb_allprojects_report_data.desc_tr_l2, q_cb_allprojects_report_data.desc_tr_l3, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, q_cb_allprojects_report_data.desc_tr_l2, q_cb_allprojects_report_data.desc_tr_l3, q_cb_allprojects_report_data.currency;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_summary_detailed
select [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as l6_comb, q_cb_allprojects_report_data.currency as up_curr, q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.l_6, q_cb_allprojects_report_data.desc_tr_l2, q_cb_allprojects_report_data.desc_tr_l3, t_001_projects.r03_s_name, q_cb_allprojects_report_data.pc, q_cb_allprojects_report_data.desc_tr_l6, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code
group by [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], q_cb_allprojects_report_data.currency, q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.l_6, q_cb_allprojects_report_data.desc_tr_l2, q_cb_allprojects_report_data.desc_tr_l3, t_001_projects.r03_s_name, q_cb_allprojects_report_data.pc, q_cb_allprojects_report_data.desc_tr_l6;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_summary_lvl_4
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, q_cb_allprojects_report_data.desc_tr_l3, c4_code.desc_tr_l4, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from (q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code) left join c4_code on (q_cb_allprojects_report_data.l_1 = c4_code.c_l1) and (q_cb_allprojects_report_data.l_2 = c4_code.c_l2) and (q_cb_allprojects_report_data.l_3 = c4_code.c_l3) and (q_cb_allprojects_report_data.l_4 = c4_code.c_l4)
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, q_cb_allprojects_report_data.desc_tr_l3, c4_code.desc_tr_l4, q_cb_allprojects_report_data.currency;

----------------------------------------------------------------------------------------------------
~sq_rr_cb_summary_lvl_5
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, c4_code.desc_tr_l4, c5_code.desc_tr_l5, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from ((q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code) left join c4_code on (q_cb_allprojects_report_data.l_1 = c4_code.c_l1) and (q_cb_allprojects_report_data.l_2 = c4_code.c_l2) and (q_cb_allprojects_report_data.l_3 = c4_code.c_l3) and (q_cb_allprojects_report_data.l_4 = c4_code.c_l4)) left join c5_code on (q_cb_allprojects_report_data.l_1 = c5_code.c_l1) and (q_cb_allprojects_report_data.l_2 = c5_code.c_l2) and (q_cb_allprojects_report_data.l_3 = c5_code.c_l3) and (q_cb_allprojects_report_data.l_4 = c5_code.c_l4) and (q_cb_allprojects_report_data.l_5 = c5_code.c_l5)
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.pc, t_001_projects.r03_s_name, c4_code.desc_tr_l4, c5_code.desc_tr_l5, q_cb_allprojects_report_data.currency;

----------------------------------------------------------------------------------------------------
~sq_rr_updates
select t_update_data.id, t_update_data.update_ver, t_update_data.update_topic, t_update_data.update_data, t_update_data.update_date
from t_update_data;

----------------------------------------------------------------------------------------------------
~tmpclp51753
select t_bb_indexes.g_month, log([r_ufe]+1) as rr_ufe, log([r_tufe]+1) as rr_tufe, log([r_inf_usd]+1) as rr_inf_usd, log([r_inf_eur]+1) as rr_inf_eur, log([r_metal]+1) as rr_metal, log([r_petrol]+1) as rr_petrol, log([r_cement]+1) as rr_cement, log([r_electricity]+1) as rr_electricity, t_bb_indexes.e_year as expr1
from t_bb_indexes;

----------------------------------------------------------------------------------------------------
~tmpclp51901
select t_months.g_month, iif(year([g_month])>2022,(1+[r_metal])^(month([g_month])/12)*[fr_metal],(1+[r_metal])^(month([g_month])/12))-1 as bb_metal, iif(year([g_month])>2022,(1+[r_electricity])^(month([g_month])/12)*[fr_electricity],(1+[r_electricity])^(month([g_month])/12))-1 as bb_electricity, iif(year([g_month])>2022,(1+[r_cement])^(month([g_month])/12)*[fr_cement],(1+[r_cement])^(month([g_month])/12))-1 as bb_cement, iif(year([g_month])>2022,(1+[r_petrol])^(month([g_month])/12)*[fr_petrol],(1+[r_petrol])^(month([g_month])/12))-1 as bb_petrol, iif(year([g_month])>2022,(1+[r_inf_usd])^(month([g_month])/12)*[fr_inf_usd],(1+[r_inf_usd])^(month([g_month])/12))-1 as bb_inf_usd, iif(year([g_month])>2022,(1+[r_inf_eur])^(month([g_month])/12)*[fr_inf_eur],(1+[r_inf_eur])^(month([g_month])/12))-1 as bb_inf_eur, iif(year([g_month])>2022,(1+[r_ufe])^(month([g_month])/12)*[fr_ufe],(1+[r_ufe])^(month([g_month])/12))-1 as bb_ufe, iif(year([g_month])>2022,(1+[r_tufe])^(month([g_month])/12)*[fr_tufe],(1+[r_tufe])^(month([g_month])/12))-1 as bb_tufe
from (t_months left join t_bb_indexes on t_months.g_year=t_bb_indexes.[g_month]) left join q_bb_indexes_p on t_months.g_year = q_bb_indexes_p.e_year;

----------------------------------------------------------------------------------------------------
q_ac_bb_exp_crosstab
transform sum(t_ac_bb_exp.exp_ac_exp) as sumofexp_ac_exp
select t_ac_bb_exp.rep_month, t_ac_bb_exp.pc, t_ac_bb_exp.l_1, t_ac_bb_exp.l_2, t_ac_bb_exp.l_3, t_ac_bb_exp.l_4, t_ac_bb_exp.l_5, t_ac_bb_exp.l_6, t_ac_bb_exp.up_curr
from t_ac_bb_exp
group by t_ac_bb_exp.rep_month, t_ac_bb_exp.pc, t_ac_bb_exp.l_1, t_ac_bb_exp.l_2, t_ac_bb_exp.l_3, t_ac_bb_exp.l_4, t_ac_bb_exp.l_5, t_ac_bb_exp.l_6, t_ac_bb_exp.up_curr
pivot t_ac_bb_exp.exp_ac_mon;

----------------------------------------------------------------------------------------------------
q_ac_bb_exp_lastm
select max(t_ac_bb_exp.exp_ac_mon) as lastm, t_ac_bb_exp.pc, t_ac_bb_exp.l_1, t_ac_bb_exp.l_2, t_ac_bb_exp.l_3, t_ac_bb_exp.l_4, t_ac_bb_exp.l_5, t_ac_bb_exp.l_6, t_ac_bb_exp.rep_month
from t_ac_bb_exp
group by t_ac_bb_exp.pc, t_ac_bb_exp.l_1, t_ac_bb_exp.l_2, t_ac_bb_exp.l_3, t_ac_bb_exp.l_4, t_ac_bb_exp.l_5, t_ac_bb_exp.l_6, t_ac_bb_exp.rep_month;

----------------------------------------------------------------------------------------------------
q_ac_exp_crosstab
transform sum(t_ac_exp.exp_ac_exp) as sumofexp_ac_exp
select t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6, t_ac_exp.up_curr
from t_ac_exp
group by t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6, t_ac_exp.up_curr
pivot t_ac_exp.exp_ac_mon;

----------------------------------------------------------------------------------------------------
q_ac_indexes_delete_mod
delete t_ac_indexes_mod.rep_month, t_ac_indexes_mod.g_month, t_ac_indexes_mod.bb_metal, t_ac_indexes_mod.bb_electricity, t_ac_indexes_mod.bb_cement, t_ac_indexes_mod.bb_petrol, t_ac_indexes_mod.bb_inf_usd, t_ac_indexes_mod.bb_inf_eur, t_ac_indexes_mod.bb_ufe, t_ac_indexes_mod.bb_tufe
from t_ac_indexes_mod;

----------------------------------------------------------------------------------------------------
q_ac_indexes_graph
select t_cb_indexes.bb_metal, t_ac_indexes_mod.bb_metal, t_cb_indexes.bb_electricity, t_ac_indexes_mod.bb_electricity, t_cb_indexes.bb_cement, t_ac_indexes_mod.bb_cement, t_cb_indexes.bb_petrol, t_ac_indexes_mod.bb_petrol, t_cb_indexes.bb_inf_usd, t_ac_indexes_mod.bb_inf_usd, t_cb_indexes.bb_inf_eur, t_ac_indexes_mod.bb_inf_eur, t_cb_indexes.bb_ufe, t_ac_indexes_mod.bb_ufe, t_cb_indexes.bb_tufe, t_ac_indexes_mod.bb_tufe, t_cb_indexes.g_month
from t_cb_indexes right join t_ac_indexes_mod on (t_cb_indexes.rep_month = t_ac_indexes_mod.rep_month) and (t_cb_indexes.g_month = t_ac_indexes_mod.g_month)
where (((t_cb_indexes.g_month)>#1/1/2022#) and ((t_ac_indexes_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_ac_indexes_mod_ap
insert into t_ac_indexes_mod ( rep_month, g_month, bb_metal, bb_electricity, bb_cement, bb_petrol, bb_inf_usd, bb_inf_eur, bb_ufe, bb_tufe )
select t_cb_indexes.rep_month, t_cb_indexes.g_month, t_cb_indexes.bb_metal, t_cb_indexes.bb_electricity, t_cb_indexes.bb_cement, t_cb_indexes.bb_petrol, t_cb_indexes.bb_inf_usd, t_cb_indexes.bb_inf_eur, t_cb_indexes.bb_ufe, t_cb_indexes.bb_tufe
from t_cb_indexes
where (((t_cb_indexes.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_ac_indexes_reset
update t_ac_indexes_mod left join t_cb_indexes on (t_ac_indexes_mod.rep_month = t_cb_indexes.rep_month) and (t_ac_indexes_mod.g_month = t_cb_indexes.g_month) set t_ac_indexes_mod.g_month = [t_cb_indexes].[g_month], t_ac_indexes_mod.bb_metal = [t_cb_indexes].[bb_metal], t_ac_indexes_mod.bb_electricity = [t_cb_indexes].[bb_electricity], t_ac_indexes_mod.bb_cement = [t_cb_indexes].[bb_cement], t_ac_indexes_mod.bb_petrol = [t_cb_indexes].[bb_petrol], t_ac_indexes_mod.bb_inf_usd = [t_cb_indexes].[bb_inf_usd], t_ac_indexes_mod.bb_inf_eur = [t_cb_indexes].[bb_inf_eur], t_ac_indexes_mod.bb_ufe = [t_cb_indexes].[bb_ufe], t_ac_indexes_mod.bb_tufe = [t_cb_indexes].[bb_tufe], t_ac_indexes_mod.rep_month = [t_cb_indexes].[rep_month]
where (((t_ac_indexes_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_active_rep_month
select max(t_rep_month.rep_month) as active_rep_month
from t_rep_month;

----------------------------------------------------------------------------------------------------
q_bb_active_months_res_qty
select t_bb_analysis.rep_month, t_bb_analysis.p01_code as pc, q_bb_qty_activem_works.exp_base_mon, (1+[r_loss])*[t_bb_analysis].[an_rs_quantity] as an_rs_quantity, t_bb_analysis.key_r4, q_bb_qty_activem_works.key_r_pc_l6, t_bb_analysis.key_full, t_bb_analysis.l_1, t_bb_analysis.l_2, t_bb_analysis.l_3, t_bb_analysis.rs_l1, t_bb_analysis.rs_l2, t_bb_analysis.rs_l3, t_bb_analysis.rs_l4, t_bb_analysis.l_4, t_bb_analysis.l_5, t_bb_analysis.l_6, t_bb_analysis.key_r4_simple, t_bb_analysis.r_loss
from q_bb_qty_activem_works left join t_bb_analysis on q_bb_qty_activem_works.key_r_pc_l6 = t_bb_analysis.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_analysis_activem_with_prices
select q_bb_active_months_res_qty.rep_month, q_bb_active_months_res_qty.pc, q_bb_active_months_res_qty.exp_base_mon, q_bb_active_months_res_qty.an_rs_quantity, q_bb_active_months_res_qty.key_r4, q_bb_active_months_res_qty.key_r_pc_l6, q_bb_active_months_res_qty.key_full, t_cb_res_up.up_cost, q_bb_active_months_res_qty.l_1, q_bb_active_months_res_qty.l_2, q_bb_active_months_res_qty.l_3, q_bb_active_months_res_qty.l_4, q_bb_active_months_res_qty.l_5, q_bb_active_months_res_qty.l_6, q_bb_active_months_res_qty.rs_l1, q_bb_active_months_res_qty.rs_l2, q_bb_active_months_res_qty.rs_l3, q_bb_active_months_res_qty.rs_l4, r4_code.currency, q_bb_active_months_res_qty.key_r4_simple
from (q_bb_active_months_res_qty left join t_cb_res_up on q_bb_active_months_res_qty.key_r4 = t_cb_res_up.key_r4) left join r4_code on q_bb_active_months_res_qty.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_bb_analysis_comp
select t_bb_analysis_add.p01_code, t_bb_analysis_add.rs_l1, t_bb_analysis_add.rs_l2, t_bb_analysis_add.rs_l3, t_bb_analysis_add.rs_l4, t_bb_analysis_add.analysis_date, t_bb_analysis.p01_code
from t_bb_analysis_add left join t_bb_analysis on (t_bb_analysis_add.p01_code = t_bb_analysis.p01_code) and (t_bb_analysis_add.rs_l1 = t_bb_analysis.rs_l1) and (t_bb_analysis_add.rs_l2 = t_bb_analysis.rs_l2) and (t_bb_analysis_add.rs_l3 = t_bb_analysis.rs_l3) and (t_bb_analysis_add.rs_l4 = t_bb_analysis.rs_l4) and (t_bb_analysis_add.analysis_date = t_bb_analysis.analysis_date)
where (((t_bb_analysis.p01_code) is null));

----------------------------------------------------------------------------------------------------
q_bb_coeff_export
select t_bb_analysis.p01_code, t_bb_analysis.rs_l1, t_bb_analysis.rs_l2, t_bb_analysis.rs_l3, t_bb_analysis.rs_l4, r4_code.r_4_desc_tr, r4_code.w_ufe, r4_code.w_tufe, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.w_metal, r4_code.w_petrol, r4_code.w_cement, r4_code.w_electricity
from r4_code left join t_bb_analysis on (r4_code.r_4_code = t_bb_analysis.rs_l4) and (r4_code.r_3_code = t_bb_analysis.rs_l3) and (r4_code.r_2_code = t_bb_analysis.rs_l2) and (r4_code.r_1_code = t_bb_analysis.rs_l1)
group by t_bb_analysis.p01_code, t_bb_analysis.rs_l1, t_bb_analysis.rs_l2, t_bb_analysis.rs_l3, t_bb_analysis.rs_l4, r4_code.r_4_desc_tr, r4_code.w_ufe, r4_code.w_tufe, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.w_metal, r4_code.w_petrol, r4_code.w_cement, r4_code.w_electricity
having (((t_bb_analysis.p01_code) is not null));

----------------------------------------------------------------------------------------------------
q_bb_curr_base_month
select q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month
from t_rep_month right join q_budget_project_months on t_rep_month.rep_month = q_budget_project_months.rep_month
group by q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month;

----------------------------------------------------------------------------------------------------
q_bb_curr_base_val
select q_bb_curr_base_month.rep_month, q_bb_curr_base_month.rep_month_date, t_bb_mon_curr_rates.r_eur_eur, t_bb_mon_curr_rates.r_eur_try, t_bb_mon_curr_rates.r_eur_usd, t_bb_mon_curr_rates.r_try_eur, t_bb_mon_curr_rates.r_try_try, t_bb_mon_curr_rates.r_try_usd, t_bb_mon_curr_rates.r_usd_eur, t_bb_mon_curr_rates.r_usd_try, t_bb_mon_curr_rates.r_usd_usd, q_bb_curr_base_month.pc
from q_bb_curr_base_month left join t_bb_mon_curr_rates on (q_bb_curr_base_month.pc = t_bb_mon_curr_rates.p_code) and (q_bb_curr_base_month.rep_month_date = t_bb_mon_curr_rates.month) and (q_bb_curr_base_month.rep_month = t_bb_mon_curr_rates.rep_month)
group by q_bb_curr_base_month.rep_month, q_bb_curr_base_month.rep_month_date, t_bb_mon_curr_rates.r_eur_eur, t_bb_mon_curr_rates.r_eur_try, t_bb_mon_curr_rates.r_eur_usd, t_bb_mon_curr_rates.r_try_eur, t_bb_mon_curr_rates.r_try_try, t_bb_mon_curr_rates.r_try_usd, t_bb_mon_curr_rates.r_usd_eur, t_bb_mon_curr_rates.r_usd_try, t_bb_mon_curr_rates.r_usd_usd, q_bb_curr_base_month.pc;

----------------------------------------------------------------------------------------------------
q_bb_curr_escalation_rates
select q_bb_active_months_res_qty.rep_month, q_bb_active_months_res_qty.pc, q_bb_active_months_res_qty.l_1, q_bb_active_months_res_qty.l_2, q_bb_active_months_res_qty.l_3, q_bb_active_months_res_qty.l_4, q_bb_active_months_res_qty.l_5, q_bb_active_months_res_qty.l_6, q_bb_active_months_res_qty.exp_base_mon as [month], q_bb_active_months_res_qty.rs_l1, q_bb_active_months_res_qty.rs_l2, q_bb_active_months_res_qty.rs_l3, q_bb_active_months_res_qty.rs_l4, iif(([currency]="try" and [w_inf_usd]<>0),1+round([rt_usd_try]*[w_inf_usd],6),(iif([currency]="eur" and [w_inf_usd]<>0,1+round([rt_usd_eur]*[w_inf_usd],6),1))) as k_usd, iif(([currency]="try" and [w_inf_eur]<>0),1+round([rt_eur_try]*[w_inf_eur],6),(iif([currency]="usd" and [w_inf_eur]<>0,1+round([rt_eur_usd]*[w_inf_eur],6),1))) as k_eur, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.currency as rs_currency, q_bb_active_months_res_qty.key_r4_simple, q_bb_active_months_res_qty.key_full, q_bb_active_months_res_qty.key_r_pc_l6, q_bb_active_months_res_qty.key_r4, [key_full] & "." & [rs_currency] & "." & [month] as key_full_comb
from (q_bb_active_months_res_qty left join q_bb_monthly_curr_rates_inc on (q_bb_active_months_res_qty.exp_base_mon = q_bb_monthly_curr_rates_inc.exp_base_mon) and (q_bb_active_months_res_qty.pc = q_bb_monthly_curr_rates_inc.pc) and (q_bb_active_months_res_qty.rep_month = q_bb_monthly_curr_rates_inc.rep_month)) left join r4_code on q_bb_active_months_res_qty.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_bb_exp
select t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6, q_bb_unit_price.g_month as exp_base_mon, sum(([exp_base_qty]*[unit_price_planned_coeff])) as total_expense, q_bb_unit_price.up_curr, q_bb_unit_price.key_r_pc_l6
from t_bb_qty right join q_bb_unit_price on (t_bb_qty.pc = q_bb_unit_price.p01_code) and (t_bb_qty.l_1 = q_bb_unit_price.l_1) and (t_bb_qty.l_2 = q_bb_unit_price.l_2) and (t_bb_qty.l_3 = q_bb_unit_price.l_3) and (t_bb_qty.l_4 = q_bb_unit_price.l_4) and (t_bb_qty.l_5 = q_bb_unit_price.l_5) and (t_bb_qty.l_6 = q_bb_unit_price.l_6) and (t_bb_qty.exp_base_mon = q_bb_unit_price.g_month) and (t_bb_qty.rep_month = q_bb_unit_price.rep_month)
group by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6, q_bb_unit_price.g_month, q_bb_unit_price.up_curr, q_bb_unit_price.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_dist_eur_with_dummy
transform sum(q_bb_exp_eur_with_dummy.eur_expense) as sumofeur_expense
select q_bb_exp_eur_with_dummy.rep_month, q_bb_exp_eur_with_dummy.pc, q_bb_exp_eur_with_dummy.l_1, q_bb_exp_eur_with_dummy.l_2, q_bb_exp_eur_with_dummy.l_3, q_bb_exp_eur_with_dummy.l_4, q_bb_exp_eur_with_dummy.l_5, q_bb_exp_eur_with_dummy.l_6, q_bb_exp_eur_with_dummy.up_curr_conv
from q_bb_exp_eur_with_dummy
group by q_bb_exp_eur_with_dummy.rep_month, q_bb_exp_eur_with_dummy.pc, q_bb_exp_eur_with_dummy.l_1, q_bb_exp_eur_with_dummy.l_2, q_bb_exp_eur_with_dummy.l_3, q_bb_exp_eur_with_dummy.l_4, q_bb_exp_eur_with_dummy.l_5, q_bb_exp_eur_with_dummy.l_6, q_bb_exp_eur_with_dummy.up_curr_conv
pivot q_bb_exp_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_exp_dist_try_with_dummy
transform sum(q_bb_exp_try_with_dummy.try_expense) as sumoftry_expense
select q_bb_exp_try_with_dummy.rep_month, q_bb_exp_try_with_dummy.pc, q_bb_exp_try_with_dummy.l_1, q_bb_exp_try_with_dummy.l_2, q_bb_exp_try_with_dummy.l_3, q_bb_exp_try_with_dummy.l_4, q_bb_exp_try_with_dummy.l_5, q_bb_exp_try_with_dummy.l_6, q_bb_exp_try_with_dummy.up_curr_conv
from q_bb_exp_try_with_dummy
group by q_bb_exp_try_with_dummy.rep_month, q_bb_exp_try_with_dummy.pc, q_bb_exp_try_with_dummy.l_1, q_bb_exp_try_with_dummy.l_2, q_bb_exp_try_with_dummy.l_3, q_bb_exp_try_with_dummy.l_4, q_bb_exp_try_with_dummy.l_5, q_bb_exp_try_with_dummy.l_6, q_bb_exp_try_with_dummy.up_curr_conv
pivot q_bb_exp_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_exp_dist_usd_with_dummy
transform sum(q_bb_exp_usd_with_dummy.usd_expense) as sumofusd_expense
select q_bb_exp_usd_with_dummy.rep_month, q_bb_exp_usd_with_dummy.pc, q_bb_exp_usd_with_dummy.l_1, q_bb_exp_usd_with_dummy.l_2, q_bb_exp_usd_with_dummy.l_3, q_bb_exp_usd_with_dummy.l_4, q_bb_exp_usd_with_dummy.l_5, q_bb_exp_usd_with_dummy.l_6, q_bb_exp_usd_with_dummy.up_curr_conv
from q_bb_exp_usd_with_dummy
group by q_bb_exp_usd_with_dummy.rep_month, q_bb_exp_usd_with_dummy.pc, q_bb_exp_usd_with_dummy.l_1, q_bb_exp_usd_with_dummy.l_2, q_bb_exp_usd_with_dummy.l_3, q_bb_exp_usd_with_dummy.l_4, q_bb_exp_usd_with_dummy.l_5, q_bb_exp_usd_with_dummy.l_6, q_bb_exp_usd_with_dummy.up_curr_conv
pivot q_bb_exp_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_exp_dist_with_dummy
transform sum(q_bb_exp_with_dummy.total_expense) as sumoftotal_expense
select q_bb_exp_with_dummy.rep_month, q_bb_exp_with_dummy.pc, q_bb_exp_with_dummy.l_1, q_bb_exp_with_dummy.l_2, q_bb_exp_with_dummy.l_3, q_bb_exp_with_dummy.l_4, q_bb_exp_with_dummy.l_5, q_bb_exp_with_dummy.l_6, q_bb_exp_with_dummy.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")) as exc_try, iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_bb_exp_with_dummy
group by q_bb_exp_with_dummy.rep_month, q_bb_exp_with_dummy.pc, q_bb_exp_with_dummy.l_1, q_bb_exp_with_dummy.l_2, q_bb_exp_with_dummy.l_3, q_bb_exp_with_dummy.l_4, q_bb_exp_with_dummy.l_5, q_bb_exp_with_dummy.l_6, q_bb_exp_with_dummy.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")), iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")), iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur"))
pivot q_bb_exp_with_dummy.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_exp_eur
select t_bb_exp_total_st.rep_month, t_bb_exp_total_st.pc, t_bb_exp_total_st.l_1, t_bb_exp_total_st.l_2, t_bb_exp_total_st.l_3, t_bb_exp_total_st.l_4, t_bb_exp_total_st.l_5, t_bb_exp_total_st.l_6, t_bb_exp_total_st.total_expense, t_bb_exp_total_st.up_curr, iif([up_curr]="eur",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_eur],[total_expense]*[r_try_eur])) as eur_expense, "eur" as up_curr_conv, t_bb_exp_total_st.month as [month], t_bb_exp_total_st.key_r_pc_l6
from t_bb_exp_total_st left join t_bb_mon_curr_rates on (t_bb_exp_total_st.month = t_bb_mon_curr_rates.month) and (t_bb_exp_total_st.pc = t_bb_mon_curr_rates.p_code) and (t_bb_exp_total_st.rep_month = t_bb_mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_bb_exp_eur_mt
select q_bb_exp_eur.rep_month, q_bb_exp_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_eur.month, q_bb_exp_eur.l_1, q_bb_exp_eur.l_2, q_bb_exp_eur.l_3, q_bb_exp_eur.l_4, q_bb_exp_eur.l_5, q_bb_exp_eur.l_6, q_bb_exp_eur.eur_expense, q_bb_exp_eur.up_curr_conv, q_bb_exp_eur.key_r_pc_l6 into t_bb_exp_eur_st
from q_bb_exp_eur left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_exp_eur.l_1 = c3_code.c_l1) and (q_bb_exp_eur.l_2 = c3_code.c_l2) and (q_bb_exp_eur.l_3 = c3_code.c_l3)
group by q_bb_exp_eur.rep_month, q_bb_exp_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_eur.month, q_bb_exp_eur.l_1, q_bb_exp_eur.l_2, q_bb_exp_eur.l_3, q_bb_exp_eur.l_4, q_bb_exp_eur.l_5, q_bb_exp_eur.l_6, q_bb_exp_eur.eur_expense, q_bb_exp_eur.up_curr_conv, q_bb_exp_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_eur_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_exp_eur

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_exp_total
select 
		*
	from 
q_bb_exp
		
union all select 
		*
	from 
		t_ac_bb_exp;

----------------------------------------------------------------------------------------------------
q_bb_exp_total_mt
select q_bb_exp_total.rep_month, q_bb_exp_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_total.exp_base_mon as [month], q_bb_exp_total.total_expense, q_bb_exp_total.up_curr, q_bb_exp_total.l_1, q_bb_exp_total.l_2, q_bb_exp_total.l_3, q_bb_exp_total.l_4, q_bb_exp_total.l_5, q_bb_exp_total.l_6, q_bb_exp_total.key_r_pc_l6 into t_bb_exp_total_st
from q_bb_exp_total left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_exp_total.l_1 = c3_code.c_l1) and (q_bb_exp_total.l_2 = c3_code.c_l2) and (q_bb_exp_total.l_3 = c3_code.c_l3)
group by q_bb_exp_total.rep_month, q_bb_exp_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_total.exp_base_mon, q_bb_exp_total.total_expense, q_bb_exp_total.up_curr, q_bb_exp_total.l_1, q_bb_exp_total.l_2, q_bb_exp_total.l_3, q_bb_exp_total.l_4, q_bb_exp_total.l_5, q_bb_exp_total.l_6, q_bb_exp_total.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_try
select t_bb_exp_total_st.rep_month, t_bb_exp_total_st.pc, t_bb_exp_total_st.l_1, t_bb_exp_total_st.l_2, t_bb_exp_total_st.l_3, t_bb_exp_total_st.l_4, t_bb_exp_total_st.l_5, t_bb_exp_total_st.l_6, t_bb_exp_total_st.total_expense, t_bb_exp_total_st.up_curr, iif([up_curr]="try",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_try],[total_expense]*[r_eur_try])) as try_expense, "try" as up_curr_conv, t_bb_exp_total_st.month as [month], t_bb_exp_total_st.key_r_pc_l6
from t_bb_exp_total_st left join t_bb_mon_curr_rates on (t_bb_exp_total_st.month = t_bb_mon_curr_rates.month) and (t_bb_exp_total_st.pc = t_bb_mon_curr_rates.p_code) and (t_bb_exp_total_st.rep_month = t_bb_mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_bb_exp_try_mt
select q_bb_exp_try.rep_month, q_bb_exp_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_try.month, q_bb_exp_try.l_1, q_bb_exp_try.l_2, q_bb_exp_try.l_3, q_bb_exp_try.l_4, q_bb_exp_try.l_5, q_bb_exp_try.l_6, q_bb_exp_try.try_expense, q_bb_exp_try.up_curr_conv, q_bb_exp_try.key_r_pc_l6 into t_bb_exp_try_st
from q_bb_exp_try left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_bb_exp_try.l_3 = c3_code.c_l3) and (q_bb_exp_try.l_2 = c3_code.c_l2) and (q_bb_exp_try.l_1 = c3_code.c_l1)
group by q_bb_exp_try.rep_month, q_bb_exp_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_try.month, q_bb_exp_try.l_1, q_bb_exp_try.l_2, q_bb_exp_try.l_3, q_bb_exp_try.l_4, q_bb_exp_try.l_5, q_bb_exp_try.l_6, q_bb_exp_try.try_expense, q_bb_exp_try.up_curr_conv, q_bb_exp_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_try_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_exp_try

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_exp_usd
select t_bb_exp_total_st.rep_month, t_bb_exp_total_st.pc, t_bb_exp_total_st.l_1, t_bb_exp_total_st.l_2, t_bb_exp_total_st.l_3, t_bb_exp_total_st.l_4, t_bb_exp_total_st.l_5, t_bb_exp_total_st.l_6, t_bb_exp_total_st.total_expense, t_bb_exp_total_st.up_curr, iif([up_curr]="usd",[total_expense],iif([up_curr]="try",[total_expense]*[r_try_usd],[total_expense]*[r_eur_usd])) as usd_expense, "usd" as up_curr_conv, t_bb_exp_total_st.month as [month], t_bb_exp_total_st.key_r_pc_l6
from t_bb_exp_total_st left join t_bb_mon_curr_rates on (t_bb_exp_total_st.month = t_bb_mon_curr_rates.month) and (t_bb_exp_total_st.pc = t_bb_mon_curr_rates.p_code) and (t_bb_exp_total_st.rep_month = t_bb_mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_bb_exp_usd_mt
select q_bb_exp_usd.rep_month, q_bb_exp_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_usd.month, q_bb_exp_usd.l_1, q_bb_exp_usd.l_2, q_bb_exp_usd.l_3, q_bb_exp_usd.l_4, q_bb_exp_usd.l_5, q_bb_exp_usd.l_6, q_bb_exp_usd.usd_expense, q_bb_exp_usd.up_curr_conv, q_bb_exp_usd.key_r_pc_l6 into t_bb_exp_usd_st
from q_bb_exp_usd left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_bb_exp_usd.l_3 = c3_code.c_l3) and (q_bb_exp_usd.l_2 = c3_code.c_l2) and (q_bb_exp_usd.l_1 = c3_code.c_l1)
group by q_bb_exp_usd.rep_month, q_bb_exp_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_exp_usd.month, q_bb_exp_usd.l_1, q_bb_exp_usd.l_2, q_bb_exp_usd.l_3, q_bb_exp_usd.l_4, q_bb_exp_usd.l_5, q_bb_exp_usd.l_6, q_bb_exp_usd.usd_expense, q_bb_exp_usd.up_curr_conv, q_bb_exp_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_exp_usd_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_exp_usd

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_exp_with_dummy
select 
		*
	from 
		q_bb_exp_total

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_inc_calculation
select t_bb_inc_qty.rep_month, t_bb_inc_qty.pc, t_bb_inc_qty.l_1, t_bb_inc_qty.l_2, t_bb_inc_qty.l_3, t_bb_inc_qty.l_4, t_bb_inc_qty.l_5, t_bb_inc_qty.l_6, t_bb_inc_qty.inc_base_mon, iif([inc_rate] is null,1,1+[inc_rate]) as inc_rate_1, iif([inc_rate_pcode] is null,1,1+[inc_rate_pcode]) as inc_rate_2, t_bb_inc_wbs.up, t_bb_inc_wbs.currency, [up]*[inc_rate_1]*[inc_rate_2] as up_total, t_bb_inc_qty.inc_base_qty, [up_total]*[inc_base_qty] as inc_total, t_bb_inc_qty.key_r_pc_l6
from ((t_bb_inc_qty left join t_bb_inc_esc_rates_l6 on (t_bb_inc_qty.rep_month = t_bb_inc_esc_rates_l6.rep_month) and (t_bb_inc_qty.pc = t_bb_inc_esc_rates_l6.p01_code) and (t_bb_inc_qty.l_1 = t_bb_inc_esc_rates_l6.c_l1) and (t_bb_inc_qty.l_2 = t_bb_inc_esc_rates_l6.c_l2) and (t_bb_inc_qty.l_3 = t_bb_inc_esc_rates_l6.c_l3) and (t_bb_inc_qty.l_4 = t_bb_inc_esc_rates_l6.c_l4) and (t_bb_inc_qty.l_5 = t_bb_inc_esc_rates_l6.c_l5) and (t_bb_inc_qty.l_6 = t_bb_inc_esc_rates_l6.c_l6) and (t_bb_inc_qty.inc_base_mon = t_bb_inc_esc_rates_l6.month)) left join t_bb_inc_esc_rates_pcode on (t_bb_inc_qty.rep_month = t_bb_inc_esc_rates_pcode.rep_month) and (t_bb_inc_qty.pc = t_bb_inc_esc_rates_pcode.p01_code) and (t_bb_inc_qty.inc_base_mon = t_bb_inc_esc_rates_pcode.month)) left join t_bb_inc_wbs on t_bb_inc_qty.key_r_pc_l6 = t_bb_inc_wbs.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_dist_eur_with_dummy
transform sum(q_bb_inc_eur_with_dummy.eur_income) as eur_income
select q_bb_inc_eur_with_dummy.rep_month, q_bb_inc_eur_with_dummy.pc, q_bb_inc_eur_with_dummy.l_1, q_bb_inc_eur_with_dummy.l_2, q_bb_inc_eur_with_dummy.l_3, q_bb_inc_eur_with_dummy.l_4, q_bb_inc_eur_with_dummy.l_5, q_bb_inc_eur_with_dummy.l_6, q_bb_inc_eur_with_dummy.up_curr_conv
from q_bb_inc_eur_with_dummy
group by q_bb_inc_eur_with_dummy.rep_month, q_bb_inc_eur_with_dummy.pc, q_bb_inc_eur_with_dummy.l_1, q_bb_inc_eur_with_dummy.l_2, q_bb_inc_eur_with_dummy.l_3, q_bb_inc_eur_with_dummy.l_4, q_bb_inc_eur_with_dummy.l_5, q_bb_inc_eur_with_dummy.l_6, q_bb_inc_eur_with_dummy.up_curr_conv
pivot q_bb_inc_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_inc_dist_try_with_dummy
transform sum(q_bb_inc_try_with_dummy.try_income) as try_income
select q_bb_inc_try_with_dummy.rep_month, q_bb_inc_try_with_dummy.pc, q_bb_inc_try_with_dummy.l_1, q_bb_inc_try_with_dummy.l_2, q_bb_inc_try_with_dummy.l_3, q_bb_inc_try_with_dummy.l_4, q_bb_inc_try_with_dummy.l_5, q_bb_inc_try_with_dummy.l_6, q_bb_inc_try_with_dummy.up_curr_conv
from q_bb_inc_try_with_dummy
group by q_bb_inc_try_with_dummy.rep_month, q_bb_inc_try_with_dummy.pc, q_bb_inc_try_with_dummy.l_1, q_bb_inc_try_with_dummy.l_2, q_bb_inc_try_with_dummy.l_3, q_bb_inc_try_with_dummy.l_4, q_bb_inc_try_with_dummy.l_5, q_bb_inc_try_with_dummy.l_6, q_bb_inc_try_with_dummy.up_curr_conv
pivot q_bb_inc_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_inc_dist_usd_with_dummy
transform sum(q_bb_inc_usd_with_dummy.usd_income) as usd_income
select q_bb_inc_usd_with_dummy.rep_month, q_bb_inc_usd_with_dummy.pc, q_bb_inc_usd_with_dummy.l_1, q_bb_inc_usd_with_dummy.l_2, q_bb_inc_usd_with_dummy.l_3, q_bb_inc_usd_with_dummy.l_4, q_bb_inc_usd_with_dummy.l_5, q_bb_inc_usd_with_dummy.l_6, q_bb_inc_usd_with_dummy.up_curr_conv
from q_bb_inc_usd_with_dummy
group by q_bb_inc_usd_with_dummy.rep_month, q_bb_inc_usd_with_dummy.pc, q_bb_inc_usd_with_dummy.l_1, q_bb_inc_usd_with_dummy.l_2, q_bb_inc_usd_with_dummy.l_3, q_bb_inc_usd_with_dummy.l_4, q_bb_inc_usd_with_dummy.l_5, q_bb_inc_usd_with_dummy.l_6, q_bb_inc_usd_with_dummy.up_curr_conv
pivot q_bb_inc_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_inc_dist_with_dummy
transform sum(q_bb_inc_with_dummy.inc_total) as total_income
select q_bb_inc_with_dummy.rep_month, q_bb_inc_with_dummy.pc, q_bb_inc_with_dummy.l_1, q_bb_inc_with_dummy.l_2, q_bb_inc_with_dummy.l_3, q_bb_inc_with_dummy.l_4, q_bb_inc_with_dummy.l_5, q_bb_inc_with_dummy.l_6, q_bb_inc_with_dummy.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")) as exc_try, iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_bb_inc_with_dummy
group by q_bb_inc_with_dummy.rep_month, q_bb_inc_with_dummy.pc, q_bb_inc_with_dummy.l_1, q_bb_inc_with_dummy.l_2, q_bb_inc_with_dummy.l_3, q_bb_inc_with_dummy.l_4, q_bb_inc_with_dummy.l_5, q_bb_inc_with_dummy.l_6, q_bb_inc_with_dummy.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")), iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")), iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur"))
pivot q_bb_inc_with_dummy.inc_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_inc_eur
select t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6, t_bb_inc_total_st.inc_total, t_bb_inc_total_st.currency, iif([currency]="eur",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_eur],[inc_total]*[r_try_eur])) as eur_income, "eur" as up_curr_conv, t_bb_inc_total_st.inc_base_mon as [month], t_bb_inc_total_st.key_r_pc_l6
from t_bb_inc_total_st left join mon_curr_rates on (t_bb_inc_total_st.rep_month = mon_curr_rates.rep_month) and (t_bb_inc_total_st.inc_base_mon = mon_curr_rates.month)
order by t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_inc_eur_mt
select q_bb_inc_eur.rep_month, q_bb_inc_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_eur.month, q_bb_inc_eur.eur_income, q_bb_inc_eur.up_curr_conv, q_bb_inc_eur.l_1, q_bb_inc_eur.l_2, q_bb_inc_eur.l_3, q_bb_inc_eur.l_4, q_bb_inc_eur.l_5, q_bb_inc_eur.l_6, c6_code.desc_tr_l6, q_bb_inc_eur.key_r_pc_l6 into t_bb_inc_eur_st
from (q_bb_inc_eur left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_bb_inc_eur.l_3 = c3_code.c_l3) and (q_bb_inc_eur.l_2 = c3_code.c_l2) and (q_bb_inc_eur.l_1 = c3_code.c_l1)) left join c6_code on (q_bb_inc_eur.l_6 = c6_code.c_l6) and (q_bb_inc_eur.l_5 = c6_code.c_l5) and (q_bb_inc_eur.l_4 = c6_code.c_l4) and (q_bb_inc_eur.l_3 = c6_code.c_l3) and (q_bb_inc_eur.l_2 = c6_code.c_l2) and (q_bb_inc_eur.l_1 = c6_code.c_l1)
group by q_bb_inc_eur.rep_month, q_bb_inc_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_eur.month, q_bb_inc_eur.eur_income, q_bb_inc_eur.up_curr_conv, q_bb_inc_eur.l_1, q_bb_inc_eur.l_2, q_bb_inc_eur.l_3, q_bb_inc_eur.l_4, q_bb_inc_eur.l_5, q_bb_inc_eur.l_6, c6_code.desc_tr_l6, q_bb_inc_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_eur_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_income,
up_curr_conv,
key_r_pc_l6


from 
q_bb_inc_eur

union all select 
*
from 
q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_inc_qty
select *
from t_bb_inc_qty;

----------------------------------------------------------------------------------------------------
q_bb_inc_qty_crosstab
transform sum(q_bb_inc_qty.inc_base_qty) as inc_base_qty
select q_bb_inc_qty.rep_month, q_bb_inc_qty.pc, q_bb_inc_qty.l_1, q_bb_inc_qty.l_2, q_bb_inc_qty.l_3, q_bb_inc_qty.l_4, q_bb_inc_qty.l_5, q_bb_inc_qty.l_6
from q_bb_inc_qty
group by q_bb_inc_qty.rep_month, q_bb_inc_qty.pc, q_bb_inc_qty.l_1, q_bb_inc_qty.l_2, q_bb_inc_qty.l_3, q_bb_inc_qty.l_4, q_bb_inc_qty.l_5, q_bb_inc_qty.l_6
order by q_bb_inc_qty.rep_month, q_bb_inc_qty.pc, q_bb_inc_qty.l_1, q_bb_inc_qty.l_2, q_bb_inc_qty.l_3, q_bb_inc_qty.l_4, q_bb_inc_qty.l_5, q_bb_inc_qty.l_6
pivot q_bb_inc_qty.inc_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_inc_total
select q_bb_inc_calculation.rep_month, q_bb_inc_calculation.pc, q_bb_inc_calculation.l_1, q_bb_inc_calculation.l_2, q_bb_inc_calculation.l_3, q_bb_inc_calculation.l_4, q_bb_inc_calculation.l_5, q_bb_inc_calculation.l_6, q_bb_inc_calculation.inc_base_mon, sum(q_bb_inc_calculation.inc_total) as inc_total, q_bb_inc_calculation.currency, q_bb_inc_calculation.key_r_pc_l6
from q_bb_inc_calculation
group by q_bb_inc_calculation.rep_month, q_bb_inc_calculation.pc, q_bb_inc_calculation.l_1, q_bb_inc_calculation.l_2, q_bb_inc_calculation.l_3, q_bb_inc_calculation.l_4, q_bb_inc_calculation.l_5, q_bb_inc_calculation.l_6, q_bb_inc_calculation.inc_base_mon, q_bb_inc_calculation.currency, q_bb_inc_calculation.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_total_mt
select q_bb_inc_total.rep_month, q_bb_inc_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_total.inc_base_mon, q_bb_inc_total.inc_total, q_bb_inc_total.currency, q_bb_inc_total.l_1, q_bb_inc_total.l_2, q_bb_inc_total.l_3, q_bb_inc_total.l_4, q_bb_inc_total.l_5, q_bb_inc_total.l_6, c6_code.desc_tr_l6, [rep_month] & "." & [pc] & "." & [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as key_r_pc_l6 into t_bb_inc_total_st
from (q_bb_inc_total left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_inc_total.l_1 = c3_code.c_l1) and (q_bb_inc_total.l_2 = c3_code.c_l2) and (q_bb_inc_total.l_3 = c3_code.c_l3)) left join c6_code on (q_bb_inc_total.l_1 = c6_code.c_l1) and (q_bb_inc_total.l_2 = c6_code.c_l2) and (q_bb_inc_total.l_3 = c6_code.c_l3) and (q_bb_inc_total.l_4 = c6_code.c_l4) and (q_bb_inc_total.l_5 = c6_code.c_l5) and (q_bb_inc_total.l_6 = c6_code.c_l6)
group by q_bb_inc_total.rep_month, q_bb_inc_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_total.inc_base_mon, q_bb_inc_total.inc_total, q_bb_inc_total.currency, q_bb_inc_total.l_1, q_bb_inc_total.l_2, q_bb_inc_total.l_3, q_bb_inc_total.l_4, q_bb_inc_total.l_5, q_bb_inc_total.l_6, c6_code.desc_tr_l6, [rep_month] & "." & [pc] & "." & [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6];

----------------------------------------------------------------------------------------------------
q_bb_inc_try
select t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6, t_bb_inc_total_st.inc_total, t_bb_inc_total_st.currency, iif([currency]="try",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_try],[inc_total]*[r_try_try])) as try_income, "try" as up_curr_conv, t_bb_inc_total_st.inc_base_mon as [month], t_bb_inc_total_st.key_r_pc_l6
from t_bb_inc_total_st left join mon_curr_rates on (t_bb_inc_total_st.rep_month = mon_curr_rates.rep_month) and (t_bb_inc_total_st.inc_base_mon = mon_curr_rates.month)
order by t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_inc_try_mt
select q_bb_inc_try.rep_month, q_bb_inc_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_try.month, q_bb_inc_try.try_income, q_bb_inc_try.up_curr_conv, q_bb_inc_try.l_1, q_bb_inc_try.l_2, q_bb_inc_try.l_3, q_bb_inc_try.l_4, q_bb_inc_try.l_5, q_bb_inc_try.l_6, c6_code.desc_tr_l6, q_bb_inc_try.key_r_pc_l6 into t_bb_inc_try_st
from (q_bb_inc_try left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_inc_try.l_1 = c3_code.c_l1) and (q_bb_inc_try.l_2 = c3_code.c_l2) and (q_bb_inc_try.l_3 = c3_code.c_l3)) left join c6_code on (q_bb_inc_try.l_1 = c6_code.c_l1) and (q_bb_inc_try.l_2 = c6_code.c_l2) and (q_bb_inc_try.l_3 = c6_code.c_l3) and (q_bb_inc_try.l_4 = c6_code.c_l4) and (q_bb_inc_try.l_5 = c6_code.c_l5) and (q_bb_inc_try.l_6 = c6_code.c_l6)
group by q_bb_inc_try.rep_month, q_bb_inc_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_try.month, q_bb_inc_try.try_income, q_bb_inc_try.up_curr_conv, q_bb_inc_try.l_1, q_bb_inc_try.l_2, q_bb_inc_try.l_3, q_bb_inc_try.l_4, q_bb_inc_try.l_5, q_bb_inc_try.l_6, c6_code.desc_tr_l6, q_bb_inc_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_try_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_inc_try

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_inc_usd
select t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6, t_bb_inc_total_st.inc_total, t_bb_inc_total_st.currency, iif([currency]="usd",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_usd],[inc_total]*[r_usd_usd])) as usd_income, "usd" as up_curr_conv, t_bb_inc_total_st.inc_base_mon as [month], t_bb_inc_total_st.key_r_pc_l6
from t_bb_inc_total_st left join mon_curr_rates on (t_bb_inc_total_st.rep_month = mon_curr_rates.rep_month) and (t_bb_inc_total_st.inc_base_mon = mon_curr_rates.month)
order by t_bb_inc_total_st.rep_month, t_bb_inc_total_st.pc, t_bb_inc_total_st.l_1, t_bb_inc_total_st.l_2, t_bb_inc_total_st.l_3, t_bb_inc_total_st.l_4, t_bb_inc_total_st.l_5, t_bb_inc_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_inc_usd_mt
select q_bb_inc_usd.rep_month, q_bb_inc_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_usd.month, q_bb_inc_usd.usd_income, q_bb_inc_usd.up_curr_conv, q_bb_inc_usd.l_1, q_bb_inc_usd.l_2, q_bb_inc_usd.l_3, q_bb_inc_usd.l_4, q_bb_inc_usd.l_5, q_bb_inc_usd.l_6, c6_code.desc_tr_l6, q_bb_inc_usd.key_r_pc_l6 into t_bb_inc_usd_st
from (q_bb_inc_usd left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_bb_inc_usd.l_1 = c3_code.c_l1) and (q_bb_inc_usd.l_2 = c3_code.c_l2) and (q_bb_inc_usd.l_3 = c3_code.c_l3)) left join c6_code on (q_bb_inc_usd.l_1 = c6_code.c_l1) and (q_bb_inc_usd.l_2 = c6_code.c_l2) and (q_bb_inc_usd.l_3 = c6_code.c_l3) and (q_bb_inc_usd.l_4 = c6_code.c_l4) and (q_bb_inc_usd.l_5 = c6_code.c_l5) and (q_bb_inc_usd.l_6 = c6_code.c_l6)
group by q_bb_inc_usd.rep_month, q_bb_inc_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_inc_usd.month, q_bb_inc_usd.usd_income, q_bb_inc_usd.up_curr_conv, q_bb_inc_usd.l_1, q_bb_inc_usd.l_2, q_bb_inc_usd.l_3, q_bb_inc_usd.l_4, q_bb_inc_usd.l_5, q_bb_inc_usd.l_6, c6_code.desc_tr_l6, q_bb_inc_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_inc_usd_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_bb_inc_usd

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_inc_with_dummy
select 
		*
	from 
		q_bb_inc_total

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_monthly_curr_rates_activem
select q_bb_qty_activem_works_monthly.rep_month, t_bb_mon_curr_rates.r_eur_try, t_bb_mon_curr_rates.r_eur_usd, t_bb_mon_curr_rates.r_usd_eur, t_bb_mon_curr_rates.r_usd_try, q_bb_qty_activem_works_monthly.exp_base_mon
from q_bb_qty_activem_works_monthly left join t_bb_mon_curr_rates on (q_bb_qty_activem_works_monthly.pc = t_bb_mon_curr_rates.p_code) and (q_bb_qty_activem_works_monthly.rep_month = t_bb_mon_curr_rates.rep_month) and (q_bb_qty_activem_works_monthly.exp_base_mon = t_bb_mon_curr_rates.month)
group by q_bb_qty_activem_works_monthly.rep_month, t_bb_mon_curr_rates.r_eur_try, t_bb_mon_curr_rates.r_eur_usd, t_bb_mon_curr_rates.r_usd_eur, t_bb_mon_curr_rates.r_usd_try, q_bb_qty_activem_works_monthly.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_monthly_curr_rates_inc
select q_bb_qty_activem_works_monthly.rep_month, q_bb_qty_activem_works_monthly.pc, q_bb_qty_activem_works_monthly.exp_base_mon, [q_bb_monthly_curr_rates_activem].[r_eur_try]/[q_bb_curr_base_val].[r_eur_try]-1 as rt_eur_try, [q_bb_monthly_curr_rates_activem].[r_eur_usd]/[q_bb_curr_base_val].[r_eur_usd]-1 as rt_eur_usd, [q_bb_monthly_curr_rates_activem].[r_usd_try]/[q_bb_curr_base_val].[r_usd_try]-1 as rt_usd_try, [q_bb_monthly_curr_rates_activem].[r_usd_eur]/[q_bb_curr_base_val].[r_usd_eur]-1 as rt_usd_eur
from (q_bb_qty_activem_works_monthly left join q_bb_monthly_curr_rates_activem on (q_bb_qty_activem_works_monthly.exp_base_mon = q_bb_monthly_curr_rates_activem.exp_base_mon) and (q_bb_qty_activem_works_monthly.rep_month = q_bb_monthly_curr_rates_activem.rep_month)) left join q_bb_curr_base_val on (q_bb_qty_activem_works_monthly.pc = q_bb_curr_base_val.pc) and (q_bb_qty_activem_works_monthly.rep_month = q_bb_curr_base_val.rep_month)
group by q_bb_qty_activem_works_monthly.rep_month, q_bb_qty_activem_works_monthly.pc, q_bb_qty_activem_works_monthly.exp_base_mon, [q_bb_monthly_curr_rates_activem].[r_eur_try]/[q_bb_curr_base_val].[r_eur_try]-1, [q_bb_monthly_curr_rates_activem].[r_eur_usd]/[q_bb_curr_base_val].[r_eur_usd]-1, [q_bb_monthly_curr_rates_activem].[r_usd_try]/[q_bb_curr_base_val].[r_usd_try]-1, [q_bb_monthly_curr_rates_activem].[r_usd_eur]/[q_bb_curr_base_val].[r_usd_eur]-1;

----------------------------------------------------------------------------------------------------
q_bb_pr_wbs
select t_bb_inc_total_st.rep_month
	,t_bb_inc_total_st.pc
	,t_bb_inc_total_st.l_1
	,t_bb_inc_total_st.l_2
	,t_bb_inc_total_st.l_3
	,t_bb_inc_total_st.l_4
	,t_bb_inc_total_st.l_5
	,t_bb_inc_total_st.l_6
	,t_bb_inc_total_st.currency
	,t_bb_inc_total_st.inc_base_mon as [month] 
	,t_bb_inc_total_st.key_r_pc_l6
from t_bb_inc_total_st 
group by t_bb_inc_total_st.rep_month
	,t_bb_inc_total_st.pc
	,t_bb_inc_total_st.l_1
	,t_bb_inc_total_st.l_2
	,t_bb_inc_total_st.l_3
	,t_bb_inc_total_st.l_4
	,t_bb_inc_total_st.l_5
	,t_bb_inc_total_st.l_6
	,t_bb_inc_total_st.currency
	,t_bb_inc_total_st.inc_base_mon 
	,t_bb_inc_total_st.key_r_pc_l6
having (((sum(t_bb_inc_total_st.[inc_total]))<>0)) 
union select t_bb_exp_total_st.rep_month
	,t_bb_exp_total_st.pc
	,t_bb_exp_total_st.l_1
	,t_bb_exp_total_st.l_2
	,t_bb_exp_total_st.l_3
	,t_bb_exp_total_st.l_4
	,t_bb_exp_total_st.l_5
	,t_bb_exp_total_st.l_6
	,t_bb_exp_total_st.up_curr
	,t_bb_exp_total_st.month as [month] 
	,t_bb_exp_total_st.key_r_pc_l6
from t_bb_exp_total_st 
group by t_bb_exp_total_st.rep_month
	,t_bb_exp_total_st.pc
	,t_bb_exp_total_st.l_1
	,t_bb_exp_total_st.l_2
	,t_bb_exp_total_st.l_3
	,t_bb_exp_total_st.l_4
	,t_bb_exp_total_st.l_5
	,t_bb_exp_total_st.l_6
	,t_bb_exp_total_st.up_curr
	,t_bb_exp_total_st.month 
	,t_bb_exp_total_st.key_r_pc_l6	
having (((sum(t_bb_exp_total_st.[total_expense]))<>0));

----------------------------------------------------------------------------------------------------
q_bb_profit
select q_bb_pr_wbs.rep_month, q_bb_pr_wbs.pc, q_bb_pr_wbs.l_1, q_bb_pr_wbs.l_2, q_bb_pr_wbs.l_3, q_bb_pr_wbs.l_4, q_bb_pr_wbs.l_5, q_bb_pr_wbs.l_6, q_bb_pr_wbs.currency, q_bb_pr_wbs.month, iif([inc_total] is null,0,[inc_total]) as income, iif([total_expense] is null,0,[total_expense]) as expense, [income]-[expense] as profit, q_bb_pr_wbs.key_r_pc_l6
from (q_bb_pr_wbs left join t_bb_inc_total_st on (q_bb_pr_wbs.currency = t_bb_inc_total_st.currency) and (q_bb_pr_wbs.month = t_bb_inc_total_st.inc_base_mon) and (q_bb_pr_wbs.key_r_pc_l6 = t_bb_inc_total_st.key_r_pc_l6)) left join t_bb_exp_total_st on (q_bb_pr_wbs.currency = t_bb_exp_total_st.up_curr) and (q_bb_pr_wbs.month = t_bb_exp_total_st.month) and (q_bb_pr_wbs.key_r_pc_l6 = t_bb_exp_total_st.key_r_pc_l6)
order by q_bb_pr_wbs.rep_month, q_bb_pr_wbs.pc, q_bb_pr_wbs.l_1, q_bb_pr_wbs.l_2, q_bb_pr_wbs.l_3, q_bb_pr_wbs.l_4, q_bb_pr_wbs.l_5, q_bb_pr_wbs.l_6, q_bb_pr_wbs.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_dist_eur_with_dummy
transform sum(q_bb_profit_eur_with_dummy.profit) as profit
select q_bb_profit_eur_with_dummy.rep_month, q_bb_profit_eur_with_dummy.pc, q_bb_profit_eur_with_dummy.l_1, q_bb_profit_eur_with_dummy.l_2, q_bb_profit_eur_with_dummy.l_3, q_bb_profit_eur_with_dummy.l_4, q_bb_profit_eur_with_dummy.l_5, q_bb_profit_eur_with_dummy.l_6, q_bb_profit_eur_with_dummy.curr
from q_bb_profit_eur_with_dummy
group by q_bb_profit_eur_with_dummy.rep_month, q_bb_profit_eur_with_dummy.pc, q_bb_profit_eur_with_dummy.l_1, q_bb_profit_eur_with_dummy.l_2, q_bb_profit_eur_with_dummy.l_3, q_bb_profit_eur_with_dummy.l_4, q_bb_profit_eur_with_dummy.l_5, q_bb_profit_eur_with_dummy.l_6, q_bb_profit_eur_with_dummy.curr
order by q_bb_profit_eur_with_dummy.rep_month, q_bb_profit_eur_with_dummy.pc, q_bb_profit_eur_with_dummy.l_1, q_bb_profit_eur_with_dummy.l_2, q_bb_profit_eur_with_dummy.l_3, q_bb_profit_eur_with_dummy.l_4, q_bb_profit_eur_with_dummy.l_5, q_bb_profit_eur_with_dummy.l_6
pivot q_bb_profit_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_dist_try_with_dummy
transform sum(q_bb_profit_try_with_dummy.profit) as profit
select q_bb_profit_try_with_dummy.rep_month, q_bb_profit_try_with_dummy.pc, q_bb_profit_try_with_dummy.l_1, q_bb_profit_try_with_dummy.l_2, q_bb_profit_try_with_dummy.l_3, q_bb_profit_try_with_dummy.l_4, q_bb_profit_try_with_dummy.l_5, q_bb_profit_try_with_dummy.l_6, q_bb_profit_try_with_dummy.curr
from q_bb_profit_try_with_dummy
group by q_bb_profit_try_with_dummy.rep_month, q_bb_profit_try_with_dummy.pc, q_bb_profit_try_with_dummy.l_1, q_bb_profit_try_with_dummy.l_2, q_bb_profit_try_with_dummy.l_3, q_bb_profit_try_with_dummy.l_4, q_bb_profit_try_with_dummy.l_5, q_bb_profit_try_with_dummy.l_6, q_bb_profit_try_with_dummy.curr
order by q_bb_profit_try_with_dummy.rep_month, q_bb_profit_try_with_dummy.pc, q_bb_profit_try_with_dummy.l_1, q_bb_profit_try_with_dummy.l_2, q_bb_profit_try_with_dummy.l_3, q_bb_profit_try_with_dummy.l_4, q_bb_profit_try_with_dummy.l_5, q_bb_profit_try_with_dummy.l_6
pivot q_bb_profit_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_dist_usd_with_dummy
transform sum(q_bb_profit_usd_with_dummy.profit) as profit
select q_bb_profit_usd_with_dummy.rep_month, q_bb_profit_usd_with_dummy.pc, q_bb_profit_usd_with_dummy.l_1, q_bb_profit_usd_with_dummy.l_2, q_bb_profit_usd_with_dummy.l_3, q_bb_profit_usd_with_dummy.l_4, q_bb_profit_usd_with_dummy.l_5, q_bb_profit_usd_with_dummy.l_6, q_bb_profit_usd_with_dummy.curr
from q_bb_profit_usd_with_dummy
group by q_bb_profit_usd_with_dummy.rep_month, q_bb_profit_usd_with_dummy.pc, q_bb_profit_usd_with_dummy.l_1, q_bb_profit_usd_with_dummy.l_2, q_bb_profit_usd_with_dummy.l_3, q_bb_profit_usd_with_dummy.l_4, q_bb_profit_usd_with_dummy.l_5, q_bb_profit_usd_with_dummy.l_6, q_bb_profit_usd_with_dummy.curr
order by q_bb_profit_usd_with_dummy.rep_month, q_bb_profit_usd_with_dummy.pc, q_bb_profit_usd_with_dummy.l_1, q_bb_profit_usd_with_dummy.l_2, q_bb_profit_usd_with_dummy.l_3, q_bb_profit_usd_with_dummy.l_4, q_bb_profit_usd_with_dummy.l_5, q_bb_profit_usd_with_dummy.l_6
pivot q_bb_profit_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_dist_with_dummy
transform sum(q_bb_profit_with_dummy.profit) as sumofprofit
select q_bb_profit_with_dummy.rep_month, q_bb_profit_with_dummy.pc, q_bb_profit_with_dummy.l_1, q_bb_profit_with_dummy.l_2, q_bb_profit_with_dummy.l_3, q_bb_profit_with_dummy.l_4, q_bb_profit_with_dummy.l_5, q_bb_profit_with_dummy.l_6, q_bb_profit_with_dummy.curr
from q_bb_profit_with_dummy
group by q_bb_profit_with_dummy.rep_month, q_bb_profit_with_dummy.pc, q_bb_profit_with_dummy.l_1, q_bb_profit_with_dummy.l_2, q_bb_profit_with_dummy.l_3, q_bb_profit_with_dummy.l_4, q_bb_profit_with_dummy.l_5, q_bb_profit_with_dummy.l_6, q_bb_profit_with_dummy.curr
order by q_bb_profit_with_dummy.rep_month, q_bb_profit_with_dummy.pc, q_bb_profit_with_dummy.l_1, q_bb_profit_with_dummy.l_2, q_bb_profit_with_dummy.l_3, q_bb_profit_with_dummy.l_4, q_bb_profit_with_dummy.l_5, q_bb_profit_with_dummy.l_6, q_bb_profit_with_dummy.month
pivot q_bb_profit_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_bb_profit_eur
select t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6, t_bb_profit_total_st.month, "eur" as [currency], iif([t_bb_profit_total_st].[currency]="usd",[t_bb_profit_total_st].[income]*[r_usd_eur],iif([t_bb_profit_total_st].[currency]="try",[t_bb_profit_total_st].[income]*[r_try_eur],[t_bb_profit_total_st].[income])) as income, iif([t_bb_profit_total_st].[currency]="usd",[t_bb_profit_total_st].[expense]*[r_usd_eur],iif([t_bb_profit_total_st].[currency]="try",[t_bb_profit_total_st].[expense]*[r_try_eur],[t_bb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_bb_profit_total_st.key_r_pc_l6
from t_bb_profit_total_st left join mon_curr_rates on (t_bb_profit_total_st.month = mon_curr_rates.month) and (t_bb_profit_total_st.rep_month = mon_curr_rates.rep_month)
order by t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_profit_eur_mt
select q_bb_profit_eur.rep_month, q_bb_profit_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_eur.month, q_bb_profit_eur.expense, q_bb_profit_eur.income, q_bb_profit_eur.currency, q_bb_profit_eur.l_1, q_bb_profit_eur.l_2, q_bb_profit_eur.l_3, q_bb_profit_eur.l_4, q_bb_profit_eur.l_5, q_bb_profit_eur.l_6, q_bb_profit_eur.profit, c6_code.desc_tr_l6, q_bb_profit_eur.key_r_pc_l6 into t_bb_profit_eur_st
from ((q_bb_profit_eur left join c3_code on (q_bb_profit_eur.l_3 = c3_code.c_l3) and (q_bb_profit_eur.l_2 = c3_code.c_l2) and (q_bb_profit_eur.l_1 = c3_code.c_l1)) left join c2_code on (q_bb_profit_eur.l_2 = c2_code.c_l2) and (q_bb_profit_eur.l_1 = c2_code.c_l1)) left join c6_code on (q_bb_profit_eur.l_6 = c6_code.c_l6) and (q_bb_profit_eur.l_5 = c6_code.c_l5) and (q_bb_profit_eur.l_4 = c6_code.c_l4) and (q_bb_profit_eur.l_3 = c6_code.c_l3) and (q_bb_profit_eur.l_2 = c6_code.c_l2) and (q_bb_profit_eur.l_1 = c6_code.c_l1)
group by q_bb_profit_eur.rep_month, q_bb_profit_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_eur.month, q_bb_profit_eur.expense, q_bb_profit_eur.income, q_bb_profit_eur.currency, q_bb_profit_eur.l_1, q_bb_profit_eur.l_2, q_bb_profit_eur.l_3, q_bb_profit_eur.l_4, q_bb_profit_eur.l_5, q_bb_profit_eur.l_6, q_bb_profit_eur.profit, c6_code.desc_tr_l6, q_bb_profit_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_profit_eur_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_bb_profit_eur

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_profit_total_mt
select q_bb_profit.rep_month, q_bb_profit.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit.month, q_bb_profit.expense, q_bb_profit.income, q_bb_profit.currency, q_bb_profit.l_1, q_bb_profit.l_2, q_bb_profit.l_3, q_bb_profit.l_4, q_bb_profit.l_5, q_bb_profit.l_6, q_bb_profit.profit, c6_code.desc_tr_l6, q_bb_profit.key_r_pc_l6 into t_bb_profit_total_st
from ((q_bb_profit left join c3_code on (q_bb_profit.l_3 = c3_code.c_l3) and (q_bb_profit.l_2 = c3_code.c_l2) and (q_bb_profit.l_1 = c3_code.c_l1)) left join c2_code on (q_bb_profit.l_2 = c2_code.c_l2) and (q_bb_profit.l_1 = c2_code.c_l1)) left join c6_code on (q_bb_profit.l_6 = c6_code.c_l6) and (q_bb_profit.l_5 = c6_code.c_l5) and (q_bb_profit.l_4 = c6_code.c_l4) and (q_bb_profit.l_3 = c6_code.c_l3) and (q_bb_profit.l_2 = c6_code.c_l2) and (q_bb_profit.l_1 = c6_code.c_l1)
group by q_bb_profit.rep_month, q_bb_profit.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit.month, q_bb_profit.expense, q_bb_profit.income, q_bb_profit.currency, q_bb_profit.l_1, q_bb_profit.l_2, q_bb_profit.l_3, q_bb_profit.l_4, q_bb_profit.l_5, q_bb_profit.l_6, q_bb_profit.profit, c6_code.desc_tr_l6, q_bb_profit.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_profit_try
select t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6, t_bb_profit_total_st.month, "try" as [currency], iif([t_bb_profit_total_st].[currency]="usd",[t_bb_profit_total_st].[income]*[r_usd_try],iif([t_bb_profit_total_st].[currency]="eur",[t_bb_profit_total_st].[income]*[r_eur_try],[t_bb_profit_total_st].[income])) as income, iif([t_bb_profit_total_st].[currency]="usd",[t_bb_profit_total_st].[expense]*[r_usd_try],iif([t_bb_profit_total_st].[currency]="eur",[t_bb_profit_total_st].[expense]*[r_eur_try],[t_bb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_bb_profit_total_st.key_r_pc_l6
from t_bb_profit_total_st left join mon_curr_rates on (t_bb_profit_total_st.month = mon_curr_rates.month) and (t_bb_profit_total_st.rep_month = mon_curr_rates.rep_month)
order by t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_profit_try_mt
select q_bb_profit_try.rep_month, q_bb_profit_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_try.month, q_bb_profit_try.expense, q_bb_profit_try.income, q_bb_profit_try.currency, q_bb_profit_try.l_1, q_bb_profit_try.l_2, q_bb_profit_try.l_3, q_bb_profit_try.l_4, q_bb_profit_try.l_5, q_bb_profit_try.l_6, q_bb_profit_try.profit, c6_code.desc_tr_l6, q_bb_profit_try.key_r_pc_l6 into t_bb_profit_try_st
from ((q_bb_profit_try left join c3_code on (q_bb_profit_try.l_3 = c3_code.c_l3) and (q_bb_profit_try.l_2 = c3_code.c_l2) and (q_bb_profit_try.l_1 = c3_code.c_l1)) left join c2_code on (q_bb_profit_try.l_2 = c2_code.c_l2) and (q_bb_profit_try.l_1 = c2_code.c_l1)) left join c6_code on (q_bb_profit_try.l_6 = c6_code.c_l6) and (q_bb_profit_try.l_5 = c6_code.c_l5) and (q_bb_profit_try.l_4 = c6_code.c_l4) and (q_bb_profit_try.l_3 = c6_code.c_l3) and (q_bb_profit_try.l_2 = c6_code.c_l2) and (q_bb_profit_try.l_1 = c6_code.c_l1)
group by q_bb_profit_try.rep_month, q_bb_profit_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_try.month, q_bb_profit_try.expense, q_bb_profit_try.income, q_bb_profit_try.currency, q_bb_profit_try.l_1, q_bb_profit_try.l_2, q_bb_profit_try.l_3, q_bb_profit_try.l_4, q_bb_profit_try.l_5, q_bb_profit_try.l_6, q_bb_profit_try.profit, c6_code.desc_tr_l6, q_bb_profit_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_profit_try_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_bb_profit_try

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_profit_usd
select t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6, t_bb_profit_total_st.month, "usd" as [currency], iif([t_bb_profit_total_st].[currency]="eur",[t_bb_profit_total_st].[income]*[r_eur_usd],iif([t_bb_profit_total_st].[currency]="try",[t_bb_profit_total_st].[income]*[r_try_usd],[t_bb_profit_total_st].[income])) as income, iif([t_bb_profit_total_st].[currency]="eur",[t_bb_profit_total_st].[expense]*[r_eur_usd],iif([t_bb_profit_total_st].[currency]="try",[t_bb_profit_total_st].[expense]*[r_try_usd],[t_bb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_bb_profit_total_st.key_r_pc_l6
from t_bb_profit_total_st left join mon_curr_rates on (t_bb_profit_total_st.month = mon_curr_rates.month) and (t_bb_profit_total_st.rep_month = mon_curr_rates.rep_month)
order by t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_bb_profit_total_st.l_1, t_bb_profit_total_st.l_2, t_bb_profit_total_st.l_3, t_bb_profit_total_st.l_4, t_bb_profit_total_st.l_5, t_bb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_bb_profit_usd_mt
select q_bb_profit_usd.rep_month, q_bb_profit_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_usd.month, q_bb_profit_usd.expense, q_bb_profit_usd.income, q_bb_profit_usd.currency, q_bb_profit_usd.l_1, q_bb_profit_usd.l_2, q_bb_profit_usd.l_3, q_bb_profit_usd.l_4, q_bb_profit_usd.l_5, q_bb_profit_usd.l_6, q_bb_profit_usd.profit, c6_code.desc_tr_l6, q_bb_profit_usd.key_r_pc_l6 into t_bb_profit_usd_st
from ((q_bb_profit_usd left join c3_code on (q_bb_profit_usd.l_3 = c3_code.c_l3) and (q_bb_profit_usd.l_2 = c3_code.c_l2) and (q_bb_profit_usd.l_1 = c3_code.c_l1)) left join c2_code on (q_bb_profit_usd.l_2 = c2_code.c_l2) and (q_bb_profit_usd.l_1 = c2_code.c_l1)) left join c6_code on (q_bb_profit_usd.l_6 = c6_code.c_l6) and (q_bb_profit_usd.l_5 = c6_code.c_l5) and (q_bb_profit_usd.l_4 = c6_code.c_l4) and (q_bb_profit_usd.l_3 = c6_code.c_l3) and (q_bb_profit_usd.l_2 = c6_code.c_l2) and (q_bb_profit_usd.l_1 = c6_code.c_l1)
group by q_bb_profit_usd.rep_month, q_bb_profit_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_bb_profit_usd.month, q_bb_profit_usd.expense, q_bb_profit_usd.income, q_bb_profit_usd.currency, q_bb_profit_usd.l_1, q_bb_profit_usd.l_2, q_bb_profit_usd.l_3, q_bb_profit_usd.l_4, q_bb_profit_usd.l_5, q_bb_profit_usd.l_6, q_bb_profit_usd.profit, c6_code.desc_tr_l6, q_bb_profit_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_profit_usd_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_bb_profit_usd

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_profit_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency as curr,
month,
profit

from 
q_bb_profit

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr as curr,
g_month as month,
total_expense as profit

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_bb_project_months
select t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_001_projects.r03_s_name as name
from t_bb_profit_total_st left join t_001_projects on t_bb_profit_total_st.pc = t_001_projects.p_code
group by t_bb_profit_total_st.rep_month, t_bb_profit_total_st.pc, t_001_projects.r03_s_name
order by t_bb_profit_total_st.rep_month desc;

----------------------------------------------------------------------------------------------------
q_bb_qty_activem_works
select t_bb_qty.key_r_pc_l6, t_bb_qty.exp_base_mon
from t_bb_qty left join t_rep_month on t_bb_qty.rep_month = t_rep_month.rep_month
where (((t_bb_qty.exp_base_mon)>t_rep_month.rep_month_date) and ((t_bb_qty.exp_base_qty)<>0))
order by t_bb_qty.key_r_pc_l6, t_bb_qty.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_qty_activem_works_monthly
select t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.exp_base_mon
from t_bb_qty left join t_rep_month on t_bb_qty.rep_month = t_rep_month.rep_month
where (((t_bb_qty.exp_base_mon)>t_rep_month.rep_month_date) and ((t_bb_qty.exp_base_qty)<>0))
group by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.exp_base_mon
order by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_qty_crosstab
transform sum(t_bb_qty.exp_base_qty) as sumofexp_base_qty
select t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6
from t_bb_qty
group by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6
order by t_bb_qty.rep_month, t_bb_qty.pc, t_bb_qty.l_1, t_bb_qty.l_2, t_bb_qty.l_3, t_bb_qty.l_4, t_bb_qty.l_5, t_bb_qty.l_6
pivot t_bb_qty.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_qty_dummy_full
select t_rep_month.rep_month, q_budget_project_months.pc as p_code, t_bb_exp_dummy_part.l_1, t_bb_exp_dummy_part.l_2, t_bb_exp_dummy_part.l_3, t_bb_exp_dummy_part.l_4, t_bb_exp_dummy_part.l_5, t_bb_exp_dummy_part.l_6, t_months.g_month, t_bb_exp_dummy_part.total_expense, t_bb_exp_dummy_part.up_curr, [q_budget_project_months].[rep_month]+'.'+[pc]+'.'+[l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6] as key_r_pc_l6
from t_months, t_bb_exp_dummy_part, t_rep_month inner join q_budget_project_months on t_rep_month.rep_month = q_budget_project_months.rep_month
group by t_rep_month.rep_month, q_budget_project_months.pc, t_bb_exp_dummy_part.l_1, t_bb_exp_dummy_part.l_2, t_bb_exp_dummy_part.l_3, t_bb_exp_dummy_part.l_4, t_bb_exp_dummy_part.l_5, t_bb_exp_dummy_part.l_6, t_months.g_month, t_bb_exp_dummy_part.total_expense, t_bb_exp_dummy_part.up_curr, [q_budget_project_months].[rep_month]+'.'+[pc]+'.'+[l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6];

----------------------------------------------------------------------------------------------------
q_bb_res_up_market_coeff
select q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.rs_l1 as r_1_code, q_bb_up_pre_coeff_activem_indexes.rs_l2 as r_2_code, q_bb_up_pre_coeff_activem_indexes.rs_l3 as r_3_code, q_bb_up_pre_coeff_activem_indexes.rs_l4 as r_4_code, (1+[w_ufe]*[r_ufe])*(1+[w_tufe]*[r_tufe])*(1+[w_inf_usd]*[r_inf_usd])*(1+[w_inf_eur]*[r_inf_eur])*(1+[w_metal]*[r_metal])*(1+[w_petrol]*[r_petrol])*(1+[w_cement]*[r_cement])*(1+[w_electricity]*[r_electricity]) as up_cost_coeff, q_bb_up_pre_coeff_activem_indexes.exp_base_mon as g_month, q_bb_up_pre_coeff_activem_indexes.up_cost, q_bb_up_pre_coeff_activem_indexes.an_rs_quantity, r4_code.currency, q_bb_up_pre_coeff_activem_indexes.key_r4_simple, q_bb_up_pre_coeff_activem_indexes.key_r4, q_bb_up_pre_coeff_activem_indexes.key_r_pc_l6, q_bb_up_pre_coeff_activem_indexes.key_full, [key_full] & "." & [q_bb_up_pre_coeff_activem_indexes].[rs_currency] & "." & [q_bb_up_pre_coeff_activem_indexes].[exp_base_mon] as key_full_comb
from q_bb_up_pre_coeff_activem_indexes left join r4_code on q_bb_up_pre_coeff_activem_indexes.key_r4_simple = r4_code.key_r4_simple
group by q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.rs_l1, q_bb_up_pre_coeff_activem_indexes.rs_l2, q_bb_up_pre_coeff_activem_indexes.rs_l3, q_bb_up_pre_coeff_activem_indexes.rs_l4, (1+[w_ufe]*[r_ufe])*(1+[w_tufe]*[r_tufe])*(1+[w_inf_usd]*[r_inf_usd])*(1+[w_inf_eur]*[r_inf_eur])*(1+[w_metal]*[r_metal])*(1+[w_petrol]*[r_petrol])*(1+[w_cement]*[r_cement])*(1+[w_electricity]*[r_electricity]), q_bb_up_pre_coeff_activem_indexes.exp_base_mon, q_bb_up_pre_coeff_activem_indexes.up_cost, q_bb_up_pre_coeff_activem_indexes.an_rs_quantity, r4_code.currency, q_bb_up_pre_coeff_activem_indexes.key_r4_simple, q_bb_up_pre_coeff_activem_indexes.key_r4, q_bb_up_pre_coeff_activem_indexes.key_r_pc_l6, q_bb_up_pre_coeff_activem_indexes.key_full, [key_full] & "." & [q_bb_up_pre_coeff_activem_indexes].[rs_currency] & "." & [q_bb_up_pre_coeff_activem_indexes].[exp_base_mon]
order by q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.rs_l1, q_bb_up_pre_coeff_activem_indexes.rs_l2, q_bb_up_pre_coeff_activem_indexes.rs_l3, q_bb_up_pre_coeff_activem_indexes.rs_l4, q_bb_up_pre_coeff_activem_indexes.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_unit_price
select q_bb_up_coeff.rep_month, q_bb_up_coeff.up_pr_code as p01_code, q_bb_up_coeff.l_1, q_bb_up_coeff.l_2, q_bb_up_coeff.l_3, q_bb_up_coeff.l_4, q_bb_up_coeff.l_5, q_bb_up_coeff.l_6, q_bb_up_coeff.g_month as [month], q_bb_up_coeff.g_month, q_bb_up_coeff.rs_currency as up_curr, sum([up_cost]*[an_rs_quantity]*[up_cost_coeff_all]) as unit_price_planned_coeff, q_bb_up_coeff.key_r_pc_l6
from q_bb_up_coeff
group by q_bb_up_coeff.rep_month, q_bb_up_coeff.up_pr_code, q_bb_up_coeff.l_1, q_bb_up_coeff.l_2, q_bb_up_coeff.l_3, q_bb_up_coeff.l_4, q_bb_up_coeff.l_5, q_bb_up_coeff.l_6, q_bb_up_coeff.g_month, q_bb_up_coeff.rs_currency, q_bb_up_coeff.key_r_pc_l6, q_bb_up_coeff.g_month
order by q_bb_up_coeff.rep_month, q_bb_up_coeff.up_pr_code, q_bb_up_coeff.l_1, q_bb_up_coeff.l_2, q_bb_up_coeff.l_3, q_bb_up_coeff.l_4, q_bb_up_coeff.l_5, q_bb_up_coeff.l_6, q_bb_up_coeff.g_month, q_bb_up_coeff.g_month;

----------------------------------------------------------------------------------------------------
q_bb_unit_price_crosstab
transform sum(q_bb_unit_price.unit_price_planned_coeff) as sumofunit_price_planned_coeff
select q_bb_unit_price.rep_month, q_bb_unit_price.l_1, q_bb_unit_price.l_2, q_bb_unit_price.l_3, q_bb_unit_price.l_4, q_bb_unit_price.l_5, q_bb_unit_price.l_6, q_bb_unit_price.up_curr, q_bb_unit_price.p01_code
from q_bb_unit_price
group by q_bb_unit_price.rep_month, q_bb_unit_price.l_1, q_bb_unit_price.l_2, q_bb_unit_price.l_3, q_bb_unit_price.l_4, q_bb_unit_price.l_5, q_bb_unit_price.l_6, q_bb_unit_price.up_curr, q_bb_unit_price.p01_code
pivot q_bb_unit_price.month;

----------------------------------------------------------------------------------------------------
q_bb_unit_price_pre
select q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc as p01_code, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.exp_base_mon as [month], q_bb_up_pre_coeff_activem_indexes.exp_base_mon as g_month, q_bb_up_pre_coeff_activem_indexes.rs_currency as up_curr, q_bb_up_pre_coeff_activem_indexes.key_r_pc_l6, iif([up_curr]="try",[up_cost]*[w_inf_usd]*(1+[rt_usd_try])*(1+[r_inf_usd]),iif([currency]="eur",[up_cost]*[w_inf_usd]*(1+[rt_usd_eur])*(1+[r_inf_usd]),[up_cost]*[w_inf_usd]*(1+[r_inf_usd]))) as cost_exc_inf_usd, iif([up_curr]="try",[up_cost]*[w_inf_eur]*(1+[rt_eur_try])*(1+[r_inf_eur]),iif([currency]="usd",[up_cost]*[w_inf_eur]*(1+[rt_eur_usd])*(1+[r_inf_eur]),[up_cost]*[w_inf_eur]*(1+[r_inf_eur]))) as cost_exc_inf_eur, [up_cost]*([w_ufe]*(1+[r_ufe])+[w_tufe]*(1+[r_tufe])+[w_metal]*(1+[r_metal])+[w_petrol]*(1+[r_petrol])+[w_cement]*(1+[r_cement])+[w_electricity]*(1+[r_electricity])) as cost_market, [cost_exc_inf_usd]+[cost_exc_inf_eur]+[cost_market] as up_cost_total, t_bb_analysis.an_rs_quantity
from (q_bb_up_pre_coeff_activem_indexes left join r4_code on q_bb_up_pre_coeff_activem_indexes.key_r4_simple = r4_code.key_r4_simple) left join t_bb_analysis on q_bb_up_pre_coeff_activem_indexes.key_full = t_bb_analysis.key_full;

----------------------------------------------------------------------------------------------------
q_bb_up_check
select q_bb_exp.rep_month, q_bb_exp.pc, q_bb_exp.l_1, q_bb_exp.l_2, q_bb_exp.l_3, q_bb_exp.l_4, q_bb_exp.l_5, q_bb_exp.l_6, q_bb_exp.up_curr, sum(q_bb_exp.total_expense) as [total expense], sum(q_bb_qty.exp_base_qty) as quantity, c6_code.unit, q_bb_work_up_without_coeff.unit_price_planned as up_without_coeff, [total expense]/[quantity] as up_average_with_coeff, [up_average_with_coeff]/[up_without_coeff] as up_average_coeff
from ((q_bb_exp left join q_bb_qty on (q_bb_exp.rep_month = q_bb_qty.rep_month) and (q_bb_exp.pc = q_bb_qty.pc) and (q_bb_exp.l_1 = q_bb_qty.l_1) and (q_bb_exp.l_2 = q_bb_qty.l_2) and (q_bb_exp.l_3 = q_bb_qty.l_3) and (q_bb_exp.l_4 = q_bb_qty.l_4) and (q_bb_exp.l_5 = q_bb_qty.l_5) and (q_bb_exp.l_6 = q_bb_qty.l_6)) left join q_bb_work_up_without_coeff on (q_bb_exp.rep_month = q_bb_work_up_without_coeff.rep_month) and (q_bb_exp.pc = q_bb_work_up_without_coeff.pc) and (q_bb_exp.l_1 = q_bb_work_up_without_coeff.l_1) and (q_bb_exp.l_2 = q_bb_work_up_without_coeff.l_2) and (q_bb_exp.l_3 = q_bb_work_up_without_coeff.l_3) and (q_bb_exp.l_4 = q_bb_work_up_without_coeff.l_4) and (q_bb_exp.l_5 = q_bb_work_up_without_coeff.l_5) and (q_bb_exp.l_6 = q_bb_work_up_without_coeff.l_6)) left join c6_code on (q_bb_exp.l_1 = c6_code.[c_l1]) and (q_bb_exp.l_2 = c6_code.[c_l2]) and (q_bb_exp.l_3 = c6_code.[c_l3]) and (q_bb_exp.l_4 = c6_code.[c_l4]) and (q_bb_exp.l_5 = c6_code.[c_l5]) and (q_bb_exp.l_6 = c6_code.[c_l6])
group by q_bb_exp.rep_month, q_bb_exp.pc, q_bb_exp.l_1, q_bb_exp.l_2, q_bb_exp.l_3, q_bb_exp.l_4, q_bb_exp.l_5, q_bb_exp.l_6, q_bb_exp.up_curr, c6_code.unit, q_bb_work_up_without_coeff.unit_price_planned;

----------------------------------------------------------------------------------------------------
q_bb_up_coeff
select q_bb_res_up_market_coeff.rep_month, q_bb_res_up_market_coeff.pc as up_pr_code, q_bb_res_up_market_coeff.l_1, q_bb_res_up_market_coeff.l_2, q_bb_res_up_market_coeff.l_3, q_bb_res_up_market_coeff.l_4, q_bb_res_up_market_coeff.l_5, q_bb_res_up_market_coeff.l_6, q_bb_res_up_market_coeff.r_1_code as up_rs_l1, q_bb_res_up_market_coeff.r_2_code as up_rs_l2, q_bb_res_up_market_coeff.r_3_code as up_rs_l3, q_bb_res_up_market_coeff.r_4_code as up_rs_l4, q_bb_res_up_market_coeff.g_month, q_bb_res_up_market_coeff.up_cost_coeff, q_bb_curr_escalation_rates.k_usd, q_bb_curr_escalation_rates.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6) as up_cost_coeff_all, q_bb_res_up_market_coeff.up_cost, q_bb_res_up_market_coeff.currency as rs_currency, q_bb_res_up_market_coeff.key_full, q_bb_res_up_market_coeff.an_rs_quantity, q_bb_res_up_market_coeff.key_r_pc_l6
from q_bb_res_up_market_coeff left join q_bb_curr_escalation_rates on q_bb_res_up_market_coeff.key_full_comb = q_bb_curr_escalation_rates.key_full_comb
group by q_bb_res_up_market_coeff.rep_month, q_bb_res_up_market_coeff.pc, q_bb_res_up_market_coeff.l_1, q_bb_res_up_market_coeff.l_2, q_bb_res_up_market_coeff.l_3, q_bb_res_up_market_coeff.l_4, q_bb_res_up_market_coeff.l_5, q_bb_res_up_market_coeff.l_6, q_bb_res_up_market_coeff.r_1_code, q_bb_res_up_market_coeff.r_2_code, q_bb_res_up_market_coeff.r_3_code, q_bb_res_up_market_coeff.r_4_code, q_bb_res_up_market_coeff.g_month, q_bb_res_up_market_coeff.up_cost_coeff, q_bb_curr_escalation_rates.k_usd, q_bb_curr_escalation_rates.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6), q_bb_res_up_market_coeff.up_cost, q_bb_res_up_market_coeff.currency, q_bb_res_up_market_coeff.key_full, q_bb_res_up_market_coeff.an_rs_quantity, q_bb_res_up_market_coeff.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_bb_up_comp
select t_bb_res_up_add.rep_month, t_bb_res_up_add.up_pr_code, t_bb_res_up_add.up_rs_l1, t_bb_res_up_add.up_rs_l2, t_bb_res_up_add.up_rs_l3, t_bb_res_up_add.up_rs_l4, t_bb_res_up_add.up_date, t_bb_res_up_add.up_cost, t_bb_res_up_add.up_curr
from t_bb_res_up_add left join t_bb_res_up on (t_bb_res_up_add.up_curr = t_bb_res_up.up_curr) and (t_bb_res_up_add.up_cost = t_bb_res_up.up_cost) and (t_bb_res_up_add.up_date = t_bb_res_up.up_date) and (t_bb_res_up_add.up_rs_l4 = t_bb_res_up.up_rs_l4) and (t_bb_res_up_add.up_rs_l3 = t_bb_res_up.up_rs_l3) and (t_bb_res_up_add.up_rs_l2 = t_bb_res_up.up_rs_l2) and (t_bb_res_up_add.up_rs_l1 = t_bb_res_up.up_rs_l1) and (t_bb_res_up_add.up_pr_code = t_bb_res_up.up_pr_code) and (t_bb_res_up_add.rep_month = t_bb_res_up.rep_month)
where (((t_bb_res_up.up_pr_code) is null))
order by t_bb_res_up_add.rep_month, t_bb_res_up_add.up_pr_code, t_bb_res_up_add.up_rs_l1, t_bb_res_up_add.up_rs_l2, t_bb_res_up_add.up_rs_l3, t_bb_res_up_add.up_rs_l4, t_bb_res_up_add.up_date, t_bb_res_up_add.up_cost, t_bb_res_up_add.up_curr;

----------------------------------------------------------------------------------------------------
q_bb_up_pre_coeff_activem_indexes
select q_bb_analysis_activem_with_prices.rep_month, q_bb_analysis_activem_with_prices.pc, q_bb_analysis_activem_with_prices.l_1, q_bb_analysis_activem_with_prices.l_2, q_bb_analysis_activem_with_prices.l_3, q_bb_analysis_activem_with_prices.l_4, q_bb_analysis_activem_with_prices.l_5, q_bb_analysis_activem_with_prices.l_6, q_bb_analysis_activem_with_prices.exp_base_mon, q_bb_analysis_activem_with_prices.rs_l1, q_bb_analysis_activem_with_prices.rs_l2, q_bb_analysis_activem_with_prices.rs_l3, q_bb_analysis_activem_with_prices.rs_l4, t_bb_indexes.r_ufe, t_bb_indexes.r_tufe, t_bb_indexes.r_inf_usd, t_bb_indexes.r_inf_eur, t_bb_indexes.r_metal, t_bb_indexes.r_petrol, t_bb_indexes.r_cement, t_bb_indexes.r_electricity, q_bb_analysis_activem_with_prices.currency as rs_currency, q_bb_analysis_activem_with_prices.an_rs_quantity, q_bb_analysis_activem_with_prices.up_cost, q_bb_analysis_activem_with_prices.key_r4_simple, q_bb_analysis_activem_with_prices.key_r4, q_bb_analysis_activem_with_prices.key_r_pc_l6, q_bb_analysis_activem_with_prices.key_full
from q_bb_analysis_activem_with_prices left join t_bb_indexes on (q_bb_analysis_activem_with_prices.exp_base_mon = t_bb_indexes.g_month) and (q_bb_analysis_activem_with_prices.rep_month = t_bb_indexes.rep_month) and (q_bb_analysis_activem_with_prices.pc = t_bb_indexes.p_code);

----------------------------------------------------------------------------------------------------
q_bb_up_with_curr_coeff_crosstab
transform sum(q_bb_work_up_with_curr_coeff.up) as sumofup
select q_bb_work_up_with_curr_coeff.rep_month, q_bb_work_up_with_curr_coeff.pc, q_bb_work_up_with_curr_coeff.l_1, q_bb_work_up_with_curr_coeff.l_2, q_bb_work_up_with_curr_coeff.l_3, q_bb_work_up_with_curr_coeff.l_4, q_bb_work_up_with_curr_coeff.l_5, q_bb_work_up_with_curr_coeff.l_6, q_bb_work_up_with_curr_coeff.rs_currency
from q_bb_work_up_with_curr_coeff
group by q_bb_work_up_with_curr_coeff.rep_month, q_bb_work_up_with_curr_coeff.pc, q_bb_work_up_with_curr_coeff.l_1, q_bb_work_up_with_curr_coeff.l_2, q_bb_work_up_with_curr_coeff.l_3, q_bb_work_up_with_curr_coeff.l_4, q_bb_work_up_with_curr_coeff.l_5, q_bb_work_up_with_curr_coeff.l_6, q_bb_work_up_with_curr_coeff.rs_currency
order by q_bb_work_up_with_curr_coeff.rep_month, q_bb_work_up_with_curr_coeff.pc, q_bb_work_up_with_curr_coeff.l_1, q_bb_work_up_with_curr_coeff.l_2, q_bb_work_up_with_curr_coeff.l_3, q_bb_work_up_with_curr_coeff.l_4, q_bb_work_up_with_curr_coeff.l_5, q_bb_work_up_with_curr_coeff.l_6, q_bb_work_up_with_curr_coeff.month
pivot q_bb_work_up_with_curr_coeff.month;

----------------------------------------------------------------------------------------------------
q_bb_up_with_market_coeff_crosstab
transform sum(q_bb_work_up_with_market_coeff.up_with_coeff) as sumofup_with_coeff
select q_bb_work_up_with_market_coeff.rep_month, q_bb_work_up_with_market_coeff.pc, q_bb_work_up_with_market_coeff.l_1, q_bb_work_up_with_market_coeff.l_2, q_bb_work_up_with_market_coeff.l_3, q_bb_work_up_with_market_coeff.l_4, q_bb_work_up_with_market_coeff.l_5, q_bb_work_up_with_market_coeff.l_6, q_bb_work_up_with_market_coeff.currency
from q_bb_work_up_with_market_coeff
group by q_bb_work_up_with_market_coeff.rep_month, q_bb_work_up_with_market_coeff.pc, q_bb_work_up_with_market_coeff.l_1, q_bb_work_up_with_market_coeff.l_2, q_bb_work_up_with_market_coeff.l_3, q_bb_work_up_with_market_coeff.l_4, q_bb_work_up_with_market_coeff.l_5, q_bb_work_up_with_market_coeff.l_6, q_bb_work_up_with_market_coeff.currency
pivot q_bb_work_up_with_market_coeff.g_month;

----------------------------------------------------------------------------------------------------
q_bb_up_without_coeff_crosstab
transform sum(q_bb_work_up_without_coeff.unit_price_planned) as sumofunit_price_planned
select q_bb_work_up_without_coeff.rep_month, q_bb_work_up_without_coeff.pc, q_bb_work_up_without_coeff.l_1, q_bb_work_up_without_coeff.l_2, q_bb_work_up_without_coeff.l_3, q_bb_work_up_without_coeff.l_4, q_bb_work_up_without_coeff.l_5, q_bb_work_up_without_coeff.l_6, q_bb_work_up_without_coeff.rs_currency
from q_bb_work_up_without_coeff
group by q_bb_work_up_without_coeff.rep_month, q_bb_work_up_without_coeff.pc, q_bb_work_up_without_coeff.l_1, q_bb_work_up_without_coeff.l_2, q_bb_work_up_without_coeff.l_3, q_bb_work_up_without_coeff.l_4, q_bb_work_up_without_coeff.l_5, q_bb_work_up_without_coeff.l_6, q_bb_work_up_without_coeff.rs_currency
pivot q_bb_work_up_without_coeff.exp_base_mon;

----------------------------------------------------------------------------------------------------
q_bb_work_up_with_curr_coeff
select q_bb_analysis_activem_with_prices.rep_month, q_bb_analysis_activem_with_prices.pc, q_bb_analysis_activem_with_prices.l_1, q_bb_analysis_activem_with_prices.l_2, q_bb_analysis_activem_with_prices.l_3, q_bb_analysis_activem_with_prices.l_4, q_bb_analysis_activem_with_prices.l_5, q_bb_analysis_activem_with_prices.l_6, q_bb_analysis_activem_with_prices.exp_base_mon as [month], sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]) as up, q_bb_curr_escalation_rates.rs_currency
from q_bb_analysis_activem_with_prices left join q_bb_curr_escalation_rates on (q_bb_analysis_activem_with_prices.exp_base_mon = q_bb_curr_escalation_rates.month) and (q_bb_analysis_activem_with_prices.currency = q_bb_curr_escalation_rates.rs_currency) and (q_bb_analysis_activem_with_prices.rs_l4 = q_bb_curr_escalation_rates.rs_l4) and (q_bb_analysis_activem_with_prices.rs_l3 = q_bb_curr_escalation_rates.rs_l3) and (q_bb_analysis_activem_with_prices.rs_l2 = q_bb_curr_escalation_rates.rs_l2) and (q_bb_analysis_activem_with_prices.rs_l1 = q_bb_curr_escalation_rates.rs_l1) and (q_bb_analysis_activem_with_prices.l_6 = q_bb_curr_escalation_rates.l_6) and (q_bb_analysis_activem_with_prices.l_5 = q_bb_curr_escalation_rates.l_5) and (q_bb_analysis_activem_with_prices.l_4 = q_bb_curr_escalation_rates.l_4) and (q_bb_analysis_activem_with_prices.l_3 = q_bb_curr_escalation_rates.l_3) and (q_bb_analysis_activem_with_prices.l_2 = q_bb_curr_escalation_rates.l_2) and (q_bb_analysis_activem_with_prices.l_1 = q_bb_curr_escalation_rates.l_1) and (q_bb_analysis_activem_with_prices.pc = q_bb_curr_escalation_rates.pc) and (q_bb_analysis_activem_with_prices.rep_month = q_bb_curr_escalation_rates.rep_month)
group by q_bb_analysis_activem_with_prices.rep_month, q_bb_analysis_activem_with_prices.pc, q_bb_analysis_activem_with_prices.l_1, q_bb_analysis_activem_with_prices.l_2, q_bb_analysis_activem_with_prices.l_3, q_bb_analysis_activem_with_prices.l_4, q_bb_analysis_activem_with_prices.l_5, q_bb_analysis_activem_with_prices.l_6, q_bb_analysis_activem_with_prices.exp_base_mon, q_bb_curr_escalation_rates.rs_currency
order by q_bb_analysis_activem_with_prices.rep_month, q_bb_analysis_activem_with_prices.pc, q_bb_analysis_activem_with_prices.l_1, q_bb_analysis_activem_with_prices.l_2, q_bb_analysis_activem_with_prices.l_3, q_bb_analysis_activem_with_prices.l_4, q_bb_analysis_activem_with_prices.l_5, q_bb_analysis_activem_with_prices.l_6, q_bb_analysis_activem_with_prices.exp_base_mon, sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]);

----------------------------------------------------------------------------------------------------
q_bb_work_up_with_market_coeff
select q_bb_res_up_market_coeff.pc, q_bb_res_up_market_coeff.l_1, q_bb_res_up_market_coeff.l_2, q_bb_res_up_market_coeff.l_3, q_bb_res_up_market_coeff.l_4, q_bb_res_up_market_coeff.l_5, q_bb_res_up_market_coeff.l_6, q_bb_res_up_market_coeff.rep_month, q_bb_res_up_market_coeff.g_month, sum([an_rs_quantity]*[up_cost]*[up_cost_coeff]) as up_with_coeff, q_bb_res_up_market_coeff.currency
from q_bb_res_up_market_coeff
group by q_bb_res_up_market_coeff.pc, q_bb_res_up_market_coeff.l_1, q_bb_res_up_market_coeff.l_2, q_bb_res_up_market_coeff.l_3, q_bb_res_up_market_coeff.l_4, q_bb_res_up_market_coeff.l_5, q_bb_res_up_market_coeff.l_6, q_bb_res_up_market_coeff.rep_month, q_bb_res_up_market_coeff.g_month, q_bb_res_up_market_coeff.currency;

----------------------------------------------------------------------------------------------------
q_bb_work_up_without_coeff
select sum(([an_rs_quantity]*[up_cost])) as unit_price_planned, q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.exp_base_mon, q_bb_up_pre_coeff_activem_indexes.rs_currency
from q_bb_up_pre_coeff_activem_indexes
group by q_bb_up_pre_coeff_activem_indexes.rep_month, q_bb_up_pre_coeff_activem_indexes.pc, q_bb_up_pre_coeff_activem_indexes.l_1, q_bb_up_pre_coeff_activem_indexes.l_2, q_bb_up_pre_coeff_activem_indexes.l_3, q_bb_up_pre_coeff_activem_indexes.l_4, q_bb_up_pre_coeff_activem_indexes.l_5, q_bb_up_pre_coeff_activem_indexes.l_6, q_bb_up_pre_coeff_activem_indexes.exp_base_mon, q_bb_up_pre_coeff_activem_indexes.rs_currency;

----------------------------------------------------------------------------------------------------
q_budget_allprojects_detailed_report
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.pc, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5] as l5_comb, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6] as l_comb, q_cb_allprojects_report_data.desc_tr_l6, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem, t_001_projects.r03_s_name
from q_cb_allprojects_report_data left join t_001_projects on q_cb_allprojects_report_data.pc = t_001_projects.p_code
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.pc, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5], [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6], q_cb_allprojects_report_data.desc_tr_l6, q_cb_allprojects_report_data.currency, t_001_projects.r03_s_name
having (((q_cb_allprojects_report_data.rep_month)=reports!r_cb_summary_lvl_5!text200) and ((q_cb_allprojects_report_data.pc)=reports!r_cb_summary_lvl_5!text193) and ((q_cb_allprojects_report_data.l_1+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5])='d.01.01.15.81'));

----------------------------------------------------------------------------------------------------
q_budget_allprojects_report
select q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.pc, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.desc_tr_l5, q_cb_allprojects_report_data.currency, sum(q_cb_allprojects_report_data.incomegt) as incomegt, sum(q_cb_allprojects_report_data.expensegt) as expensegt, sum(q_cb_allprojects_report_data.profitgt) as profitgt, sum(q_cb_allprojects_report_data.incomert) as incomert, sum(q_cb_allprojects_report_data.expensert) as expensert, sum(q_cb_allprojects_report_data.profitrt) as profitrt, sum(q_cb_allprojects_report_data.incomerem) as incomerem, sum(q_cb_allprojects_report_data.expenserem) as expenserem, sum(q_cb_allprojects_report_data.profitrem) as profitrem
from q_cb_allprojects_report_data
group by q_cb_allprojects_report_data.rep_month, q_cb_allprojects_report_data.pc, q_cb_allprojects_report_data.l_1, q_cb_allprojects_report_data.l_2, q_cb_allprojects_report_data.l_3, q_cb_allprojects_report_data.l_4, q_cb_allprojects_report_data.l_5, q_cb_allprojects_report_data.desc_tr_l5, q_cb_allprojects_report_data.currency
having (((q_cb_allprojects_report_data.rep_month)=reports!r_cb_summary_lvl_5!text200) and ((q_cb_allprojects_report_data.pc)=reports!r_cb_summary_lvl_5!text193) and ((q_cb_allprojects_report_data.l_1)=reports!r_cb_summary_lvl_5!text61) and ((q_cb_allprojects_report_data.l_2)=reports!r_cb_summary_lvl_5!text110) and ((q_cb_allprojects_report_data.l_3)=reports!r_cb_summary_lvl_5!text111) and ((q_cb_allprojects_report_data.l_4)=reports!r_cb_summary_lvl_5!text194));

----------------------------------------------------------------------------------------------------
q_budget_comp_report
select q_cb_sum_projects_data.pc, q_cb_sum_projects_data.l_1, q_cb_sum_projects_data.l_2, q_cb_sum_projects_data.l_3, q_cb_sum_projects_data.desc_tr_l2, q_cb_sum_projects_data.desc_tr_l3, q_cb_sum_projects_data.up_curr, sum(q_cb_sum_projects_data.incomegt_first) as incomegt_first, sum(q_cb_sum_projects_data.expensegt_first) as expensegt_first, sum(q_cb_sum_projects_data.profitgt_first) as profitgt_first, sum(q_cb_sum_projects_data.incomegt_second) as incomegt_second, sum(q_cb_sum_projects_data.expensegt_second) as expensegt_second, sum(q_cb_sum_projects_data.profitgt_second) as profitgt_second, sum(q_cb_sum_projects_data.incomediffgt) as incomediffgt, sum(q_cb_sum_projects_data.expensediff_gt) as expensediff_gt, sum(q_cb_sum_projects_data.profitdiff_gt) as profitdiff_gt, sum(q_cb_sum_projects_data.incomert_first) as incomert_first, sum(q_cb_sum_projects_data.expensert_first) as expensert_first, sum(q_cb_sum_projects_data.profitrt_first) as profitrt_first, sum(q_cb_sum_projects_data.incomert_second) as incomert_second, sum(q_cb_sum_projects_data.expensert_second) as expensert_second, sum(q_cb_sum_projects_data.profitrt_second) as profitrt_second, sum(q_cb_sum_projects_data.incomediffrt) as incomediffrt, sum(q_cb_sum_projects_data.expensediff_rt) as expensediff_rt, sum(q_cb_sum_projects_data.profitdiff_rt) as profitdiff_rt, sum(q_cb_sum_projects_data.incomerem_first) as incomerem_first, sum(q_cb_sum_projects_data.expenserem_first) as expenserem_first, sum(q_cb_sum_projects_data.profitrem_first) as profitrem_first, sum(q_cb_sum_projects_data.incomerem_second) as incomerem_second, sum(q_cb_sum_projects_data.expenserem_second) as expenserem_second, sum(q_cb_sum_projects_data.profitrem_second) as profitrem_second, sum(q_cb_sum_projects_data.incomerem_diff) as incomerem_diff, sum(q_cb_sum_projects_data.expenserem_diff) as expenserem_diff, sum(q_cb_sum_projects_data.profitrem_diff) as profitrem_diff
from q_cb_sum_projects_data
group by q_cb_sum_projects_data.pc, q_cb_sum_projects_data.l_1, q_cb_sum_projects_data.l_2, q_cb_sum_projects_data.l_3, q_cb_sum_projects_data.desc_tr_l2, q_cb_sum_projects_data.desc_tr_l3, q_cb_sum_projects_data.up_curr;

----------------------------------------------------------------------------------------------------
q_budget_comp_report_detailed
select [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6] as l6_comb, q_cb_sum_projects_data.pc, q_cb_sum_projects_data.desc_tr_l6, q_cb_sum_projects_data.up_curr, sum(q_cb_sum_projects_data.incomegt_first) as incomegt_first, sum(q_cb_sum_projects_data.expensegt_first) as expensegt_first, sum(q_cb_sum_projects_data.profitgt_first) as profitgt_first, sum(q_cb_sum_projects_data.incomegt_second) as incomegt_second, sum(q_cb_sum_projects_data.expensegt_second) as expensegt_second, sum(q_cb_sum_projects_data.profitgt_second) as profitgt_second, sum(q_cb_sum_projects_data.incomediffgt) as incomediffgt, sum(q_cb_sum_projects_data.expensediff_gt) as expensediff_gt, sum(q_cb_sum_projects_data.profitdiff_gt) as profitdiff_gt, sum(q_cb_sum_projects_data.incomert_first) as incomert_first, sum(q_cb_sum_projects_data.expensert_first) as expensert_first, sum(q_cb_sum_projects_data.profitrt_first) as profitrt_first, sum(q_cb_sum_projects_data.incomert_second) as incomert_second, sum(q_cb_sum_projects_data.expensert_second) as expensert_second, sum(q_cb_sum_projects_data.profitrt_second) as profitrt_second, sum(q_cb_sum_projects_data.incomediffrt) as incomediffrt, sum(q_cb_sum_projects_data.expensediff_rt) as expensediff_rt, sum(q_cb_sum_projects_data.profitdiff_rt) as profitdiff_rt, sum(q_cb_sum_projects_data.incomerem_first) as incomerem_first, sum(q_cb_sum_projects_data.expenserem_first) as expenserem_first, sum(q_cb_sum_projects_data.profitrem_first) as profitrem_first, sum(q_cb_sum_projects_data.incomerem_second) as incomerem_second, sum(q_cb_sum_projects_data.expenserem_second) as expenserem_second, sum(q_cb_sum_projects_data.profitrem_second) as profitrem_second, sum(q_cb_sum_projects_data.incomerem_diff) as incomerem_diff, sum(q_cb_sum_projects_data.expenserem_diff) as expenserem_diff, sum(q_cb_sum_projects_data.profitrem_diff) as profitrem_diff
from q_cb_sum_projects_data
group by [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6], q_cb_sum_projects_data.pc, q_cb_sum_projects_data.desc_tr_l6, q_cb_sum_projects_data.up_curr, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]
having (((q_cb_sum_projects_data.pc)=reports!r_cb_sum_allprojects_compare_detailed!text175) and ((q_cb_sum_projects_data.l_1+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5])='d.01.02.21.12'));

----------------------------------------------------------------------------------------------------
q_budget_cons_detailed_report
select q_cb_cons_report_data.rep_month, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6] as l_comb, q_cb_cons_report_data.desc_tr_l6, q_cb_cons_report_data.currency, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5] as l5_comb
from q_cb_cons_report_data
group by q_cb_cons_report_data.rep_month, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]+'.'+[l_6], q_cb_cons_report_data.desc_tr_l6, q_cb_cons_report_data.currency, [l_1]+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5]
having (((q_cb_cons_report_data.rep_month)=forms!management!cbo_date_consolidated) and ((q_cb_cons_report_data.l_1+'.'+[l_2]+'.'+[l_3]+'.'+[l_4]+'.'+[l_5])='d.01.01.12.21'));

----------------------------------------------------------------------------------------------------
q_budget_cons_report
select q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.l_5, q_cb_cons_report_data.desc_tr_l5, q_cb_cons_report_data.currency, sum(q_cb_cons_report_data.incomegt) as incomegt, sum(q_cb_cons_report_data.expensegt) as expensegt, sum(q_cb_cons_report_data.profitgt) as profitgt, sum(q_cb_cons_report_data.incomert) as incomert, sum(q_cb_cons_report_data.expensert) as expensert, sum(q_cb_cons_report_data.profitrt) as profitrt, sum(q_cb_cons_report_data.incomerem) as incomerem, sum(q_cb_cons_report_data.expenserem) as expenserem, sum(q_cb_cons_report_data.profitrem) as profitrem
from q_cb_cons_report_data
group by q_cb_cons_report_data.rep_month, q_cb_cons_report_data.l_1, q_cb_cons_report_data.l_2, q_cb_cons_report_data.l_3, q_cb_cons_report_data.l_4, q_cb_cons_report_data.l_5, q_cb_cons_report_data.desc_tr_l5, q_cb_cons_report_data.currency
having (((q_cb_cons_report_data.rep_month)=forms!management!cbo_date_consolidated) and ((q_cb_cons_report_data.l_1)=reports!r_cb_sum_cons_lvl_5!text61) and ((q_cb_cons_report_data.l_2)=reports!r_cb_sum_cons_lvl_5!text110) and ((q_cb_cons_report_data.l_3)=reports!r_cb_sum_cons_lvl_5!text111) and ((q_cb_cons_report_data.l_4)=reports!r_cb_sum_cons_lvl_5!text180));

----------------------------------------------------------------------------------------------------
q_budget_project_months
select 
rep_month,
pc,
name,
'güncel' as budget_type
from q_cb_project_months

union select
rep_month,
pc,
name,
'baz' as budget_type
from q_bb_project_months;

----------------------------------------------------------------------------------------------------
q_budget_wbs_union
select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_first_budget_gt

union

select 
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_second_budget_gt

union

select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_first_budget_rt

union select 
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_second_budget_rt;

----------------------------------------------------------------------------------------------------
q_budget_wbs_union_projects
select 
pc,
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_first_budget_gt

union

select 
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_second_budget_gt

union

select 
pc,
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_first_budget_rt

union select 
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6

	from 
		q_second_budget_rt;

----------------------------------------------------------------------------------------------------
q_cb_active_months_res_qty
select t_cb_analysis.rep_month, t_cb_analysis.p01_code as pc, q_cb_qty_activem_works.exp_cb_mon, t_cb_analysis.key_r4, q_cb_qty_activem_works.key_r_pc_l6, t_cb_analysis.key_full, t_cb_analysis.l_1, t_cb_analysis.l_2, t_cb_analysis.l_3, t_cb_analysis.rs_l1, t_cb_analysis.rs_l2, t_cb_analysis.rs_l3, t_cb_analysis.rs_l4, t_cb_analysis.l_4, t_cb_analysis.l_5, t_cb_analysis.l_6, t_cb_analysis.key_r4_simple, (1+[r_loss])*([t_cb_analysis].an_rs_quantity) as an_rs_quantity, t_cb_analysis.r_loss
from q_cb_qty_activem_works left join t_cb_analysis on q_cb_qty_activem_works.key_r_pc_l6 = t_cb_analysis.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_active_months_res_qty_mod
select t_pl_analysis.rep_month, t_pl_analysis.p01_code as pc, q_cb_qty_activem_works_mod.exp_cb_mon, t_pl_analysis.key_r4, q_cb_qty_activem_works_mod.key_r_pc_l6, t_pl_analysis.key_full, t_pl_analysis.l_1, t_pl_analysis.l_2, t_pl_analysis.l_3, t_pl_analysis.rs_l1, t_pl_analysis.rs_l2, t_pl_analysis.rs_l3, t_pl_analysis.rs_l4, t_pl_analysis.l_4, t_pl_analysis.l_5, t_pl_analysis.l_6, t_pl_analysis.key_r4_simple, (1+[r_loss])*([t_pl_analysis].[an_rs_quantity]) as an_rs_quantity, t_pl_analysis.r_loss
from q_cb_qty_activem_works_mod left join t_pl_analysis on q_cb_qty_activem_works_mod.key_r_pc_l6 = t_pl_analysis.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_allprojects_report_currmonth_data
select t_cb_profit_try_st.rep_month, t_cb_profit_try_st.pc, t_cb_profit_try_st.l_1, t_cb_profit_try_st.l_2, t_cb_profit_try_st.l_3, t_cb_profit_try_st.l_4, t_cb_profit_try_st.l_5, t_cb_profit_try_st.l_6, t_cb_profit_try_st.desc_tr_l2, t_cb_profit_try_st.desc_tr_l3, t_cb_profit_try_st.desc_tr_l6, sum(t_cb_profit_try_st.income) as income, sum(t_cb_profit_try_st.expense) as expense, sum(t_cb_profit_try_st.profit) as profit, t_cb_profit_try_st.currency
from t_cb_profit_try_st
group by t_cb_profit_try_st.rep_month, t_cb_profit_try_st.pc, t_cb_profit_try_st.l_1, t_cb_profit_try_st.l_2, t_cb_profit_try_st.l_3, t_cb_profit_try_st.l_4, t_cb_profit_try_st.l_5, t_cb_profit_try_st.l_6, t_cb_profit_try_st.desc_tr_l2, t_cb_profit_try_st.desc_tr_l3, t_cb_profit_try_st.desc_tr_l6, t_cb_profit_try_st.currency, t_cb_profit_try_st.month
having (((t_cb_profit_try_st.pc)="mbe") and ((t_cb_profit_try_st.month)<=#7/1/2022#));

----------------------------------------------------------------------------------------------------
q_cb_allprojects_report_data
select q_cb_summary_report_union.rep_month, q_cb_summary_report_union.pc, q_cb_summary_report_union.l_1, q_cb_summary_report_union.l_2, q_cb_summary_report_union.l_3, q_cb_summary_report_union.l_4, q_cb_summary_report_union.l_5, q_cb_summary_report_union.l_6, q_cb_summary_report_union.currency, c2_code.desc_tr_l2, c3_code.desc_tr_l3, sum(iif([q_cb_allprojects_report_endproject_data].[income] is null,"0",[q_cb_allprojects_report_endproject_data].[income])) as incomegt, sum(iif([q_cb_allprojects_report_endproject_data].[expense] is null,"0",[q_cb_allprojects_report_endproject_data].[expense])) as expensegt, [incomegt]-[expensegt] as profitgt, sum(iif([q_cb_summary_report_currmonth_data_group].[income] is null,"0",[q_cb_summary_report_currmonth_data_group].[income])) as incomert, sum(iif([q_cb_summary_report_currmonth_data_group].[expense] is null,"0",[q_cb_summary_report_currmonth_data_group].[expense])) as expensert, sum(iif([q_cb_summary_report_currmonth_data_group].[profit] is null,"0",[q_cb_summary_report_currmonth_data_group].[profit])) as profitrt, [incomegt]-[incomert] as incomerem, [expensegt]-[expensert] as expenserem, [profitgt]-[profitrt] as profitrem, c6_code.desc_tr_l6, c5_code.desc_tr_l5, c4_code.desc_tr_l4
from ((((((q_cb_summary_report_union left join q_cb_allprojects_report_endproject_data on (q_cb_summary_report_union.currency = q_cb_allprojects_report_endproject_data.currency) and (q_cb_summary_report_union.l_6 = q_cb_allprojects_report_endproject_data.l_6) and (q_cb_summary_report_union.l_5 = q_cb_allprojects_report_endproject_data.l_5) and (q_cb_summary_report_union.l_4 = q_cb_allprojects_report_endproject_data.l_4) and (q_cb_summary_report_union.l_3 = q_cb_allprojects_report_endproject_data.l_3) and (q_cb_summary_report_union.l_2 = q_cb_allprojects_report_endproject_data.l_2) and (q_cb_summary_report_union.l_1 = q_cb_allprojects_report_endproject_data.l_1) and (q_cb_summary_report_union.pc = q_cb_allprojects_report_endproject_data.pc) and (q_cb_summary_report_union.rep_month = q_cb_allprojects_report_endproject_data.rep_month)) left join c6_code on (q_cb_summary_report_union.l_6 = c6_code.c_l6) and (q_cb_summary_report_union.l_5 = c6_code.c_l5) and (q_cb_summary_report_union.l_4 = c6_code.c_l4) and (q_cb_summary_report_union.l_3 = c6_code.c_l3) and (q_cb_summary_report_union.l_2 = c6_code.c_l2) and (q_cb_summary_report_union.l_1 = c6_code.c_l1)) left join c3_code on (q_cb_summary_report_union.l_3 = c3_code.c_l3) and (q_cb_summary_report_union.l_2 = c3_code.c_l2) and (q_cb_summary_report_union.l_1 = c3_code.c_l1)) left join c2_code on (q_cb_summary_report_union.l_2 = c2_code.c_l2) and (q_cb_summary_report_union.l_1 = c2_code.c_l1)) left join q_cb_summary_report_currmonth_data_group on (q_cb_summary_report_union.currency = q_cb_summary_report_currmonth_data_group.currency) and (q_cb_summary_report_union.l_6 = q_cb_summary_report_currmonth_data_group.l_6) and (q_cb_summary_report_union.l_5 = q_cb_summary_report_currmonth_data_group.l_5) and (q_cb_summary_report_union.l_4 = q_cb_summary_report_currmonth_data_group.l_4) and (q_cb_summary_report_union.l_3 = q_cb_summary_report_currmonth_data_group.l_3) and (q_cb_summary_report_union.l_2 = q_cb_summary_report_currmonth_data_group.l_2) and (q_cb_summary_report_union.l_1 = q_cb_summary_report_currmonth_data_group.l_1) and (q_cb_summary_report_union.pc = q_cb_summary_report_currmonth_data_group.pc) and (q_cb_summary_report_union.rep_month = q_cb_summary_report_currmonth_data_group.rep_month)) left join c5_code on (q_cb_summary_report_union.l_5 = c5_code.c_l5) and (q_cb_summary_report_union.l_4 = c5_code.c_l4) and (q_cb_summary_report_union.l_3 = c5_code.c_l3) and (q_cb_summary_report_union.l_2 = c5_code.c_l2) and (q_cb_summary_report_union.l_1 = c5_code.c_l1)) left join c4_code on (q_cb_summary_report_union.l_4 = c4_code.c_l4) and (q_cb_summary_report_union.l_3 = c4_code.c_l3) and (q_cb_summary_report_union.l_2 = c4_code.c_l2) and (q_cb_summary_report_union.l_1 = c4_code.c_l1)
group by q_cb_summary_report_union.rep_month, q_cb_summary_report_union.pc, q_cb_summary_report_union.l_1, q_cb_summary_report_union.l_2, q_cb_summary_report_union.l_3, q_cb_summary_report_union.l_4, q_cb_summary_report_union.l_5, q_cb_summary_report_union.l_6, q_cb_summary_report_union.currency, c2_code.desc_tr_l2, c3_code.desc_tr_l3, c6_code.desc_tr_l6, c5_code.desc_tr_l5, c4_code.desc_tr_l4;

----------------------------------------------------------------------------------------------------
q_cb_allprojects_report_endproject_data
select t_cb_profit_try_st.rep_month, t_cb_profit_try_st.pc, t_cb_profit_try_st.l_1, t_cb_profit_try_st.l_2, t_cb_profit_try_st.l_3, t_cb_profit_try_st.l_4, t_cb_profit_try_st.l_5, t_cb_profit_try_st.l_6, t_cb_profit_try_st.desc_tr_l2, t_cb_profit_try_st.desc_tr_l3, t_cb_profit_try_st.desc_tr_l6, sum(t_cb_profit_try_st.income) as income, sum(t_cb_profit_try_st.expense) as expense, sum(t_cb_profit_try_st.profit) as profit, t_cb_profit_try_st.currency
from t_cb_profit_try_st
group by t_cb_profit_try_st.rep_month, t_cb_profit_try_st.pc, t_cb_profit_try_st.l_1, t_cb_profit_try_st.l_2, t_cb_profit_try_st.l_3, t_cb_profit_try_st.l_4, t_cb_profit_try_st.l_5, t_cb_profit_try_st.l_6, t_cb_profit_try_st.desc_tr_l2, t_cb_profit_try_st.desc_tr_l3, t_cb_profit_try_st.desc_tr_l6, t_cb_profit_try_st.currency
having (((t_cb_profit_try_st.pc)="mbe"));

----------------------------------------------------------------------------------------------------
q_cb_analysis_activem_with_prices
select q_cb_active_months_res_qty.rep_month, q_cb_active_months_res_qty.pc, q_cb_active_months_res_qty.exp_cb_mon, q_cb_active_months_res_qty.an_rs_quantity, q_cb_active_months_res_qty.key_r4, q_cb_active_months_res_qty.key_r_pc_l6, q_cb_active_months_res_qty.key_full, t_cb_res_up.up_cost, q_cb_active_months_res_qty.l_1, q_cb_active_months_res_qty.l_2, q_cb_active_months_res_qty.l_3, q_cb_active_months_res_qty.l_4, q_cb_active_months_res_qty.l_5, q_cb_active_months_res_qty.l_6, q_cb_active_months_res_qty.rs_l1, q_cb_active_months_res_qty.rs_l2, q_cb_active_months_res_qty.rs_l3, q_cb_active_months_res_qty.rs_l4, r4_code.currency, q_cb_active_months_res_qty.key_r4_simple
from (q_cb_active_months_res_qty left join t_cb_res_up on q_cb_active_months_res_qty.key_r4 = t_cb_res_up.key_r4) left join r4_code on q_cb_active_months_res_qty.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_cb_analysis_activem_with_prices_mod
select q_cb_active_months_res_qty_mod.rep_month, q_cb_active_months_res_qty_mod.pc, q_cb_active_months_res_qty_mod.exp_cb_mon, q_cb_active_months_res_qty_mod.an_rs_quantity, q_cb_active_months_res_qty_mod.key_r4, q_cb_active_months_res_qty_mod.key_r_pc_l6, q_cb_active_months_res_qty_mod.key_full, t_pl_res_up.up_cost, q_cb_active_months_res_qty_mod.l_1, q_cb_active_months_res_qty_mod.l_2, q_cb_active_months_res_qty_mod.l_3, q_cb_active_months_res_qty_mod.l_4, q_cb_active_months_res_qty_mod.l_5, q_cb_active_months_res_qty_mod.l_6, q_cb_active_months_res_qty_mod.rs_l1, q_cb_active_months_res_qty_mod.rs_l2, q_cb_active_months_res_qty_mod.rs_l3, q_cb_active_months_res_qty_mod.rs_l4, r4_code.currency, q_cb_active_months_res_qty_mod.key_r4_simple
from (q_cb_active_months_res_qty_mod left join t_pl_res_up on q_cb_active_months_res_qty_mod.key_r4 = t_pl_res_up.key_r4) left join r4_code on q_cb_active_months_res_qty_mod.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_cb_cons_report_currmonth_data
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, sum(t_cb_profit_usd_st.income) as income, sum(t_cb_profit_usd_st.expense) as expense, sum(t_cb_profit_usd_st.profit) as profit, t_cb_profit_usd_st.currency
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency, t_cb_profit_usd_st.month
having (((t_cb_profit_usd_st.month)<=#7/1/2022#));

----------------------------------------------------------------------------------------------------
q_cb_cons_report_currmonth_data_group
select q_cb_cons_report_currmonth_data.rep_month, q_cb_cons_report_currmonth_data.l_1, q_cb_cons_report_currmonth_data.l_2, q_cb_cons_report_currmonth_data.l_3, q_cb_cons_report_currmonth_data.l_4, q_cb_cons_report_currmonth_data.l_5, q_cb_cons_report_currmonth_data.l_6, q_cb_cons_report_currmonth_data.desc_tr_l2, q_cb_cons_report_currmonth_data.desc_tr_l3, q_cb_cons_report_currmonth_data.desc_tr_l6, sum(q_cb_cons_report_currmonth_data.income) as income, sum(q_cb_cons_report_currmonth_data.expense) as expense, sum(q_cb_cons_report_currmonth_data.profit) as profit, q_cb_cons_report_currmonth_data.currency
from q_cb_cons_report_currmonth_data
group by q_cb_cons_report_currmonth_data.rep_month, q_cb_cons_report_currmonth_data.l_1, q_cb_cons_report_currmonth_data.l_2, q_cb_cons_report_currmonth_data.l_3, q_cb_cons_report_currmonth_data.l_4, q_cb_cons_report_currmonth_data.l_5, q_cb_cons_report_currmonth_data.l_6, q_cb_cons_report_currmonth_data.desc_tr_l2, q_cb_cons_report_currmonth_data.desc_tr_l3, q_cb_cons_report_currmonth_data.desc_tr_l6, q_cb_cons_report_currmonth_data.currency;

----------------------------------------------------------------------------------------------------
q_cb_cons_report_data
select q_cb_cons_report_union.rep_month, q_cb_cons_report_union.l_1, q_cb_cons_report_union.l_2, q_cb_cons_report_union.l_3, q_cb_cons_report_union.l_4, q_cb_cons_report_union.l_5, q_cb_cons_report_union.l_6, q_cb_cons_report_union.currency, sum(iif([q_cb_cons_report_endproject_data].[income] is null,"0",[q_cb_cons_report_endproject_data].[income])) as incomegt, sum(iif([q_cb_cons_report_endproject_data].[expense] is null,"0",[q_cb_cons_report_endproject_data].[expense])) as expensegt, [incomegt]-[expensegt] as profitgt, sum(iif([q_cb_cons_report_currmonth_data_group].[income] is null,"0",[q_cb_cons_report_currmonth_data_group].[income])) as incomert, sum(iif([q_cb_cons_report_currmonth_data_group].[expense] is null,"0",[q_cb_cons_report_currmonth_data_group].[expense])) as expensert, [incomert]-[expensert] as profitrt, c6_code.desc_tr_l6, c2_code.desc_tr_l2, c3_code.desc_tr_l3, [incomegt]-[incomert] as incomerem, [expensegt]-[expensert] as expenserem, [profitgt]-[profitrt] as profitrem, c5_code.desc_tr_l5, c4_code.desc_tr_l4
from ((((((q_cb_cons_report_union left join q_cb_cons_report_currmonth_data_group on (q_cb_cons_report_union.rep_month = q_cb_cons_report_currmonth_data_group.rep_month) and (q_cb_cons_report_union.l_1 = q_cb_cons_report_currmonth_data_group.l_1) and (q_cb_cons_report_union.l_2 = q_cb_cons_report_currmonth_data_group.l_2) and (q_cb_cons_report_union.l_3 = q_cb_cons_report_currmonth_data_group.l_3) and (q_cb_cons_report_union.l_4 = q_cb_cons_report_currmonth_data_group.l_4) and (q_cb_cons_report_union.l_5 = q_cb_cons_report_currmonth_data_group.l_5) and (q_cb_cons_report_union.l_6 = q_cb_cons_report_currmonth_data_group.l_6) and (q_cb_cons_report_union.currency = q_cb_cons_report_currmonth_data_group.currency)) left join q_cb_cons_report_endproject_data on (q_cb_cons_report_union.rep_month = q_cb_cons_report_endproject_data.rep_month) and (q_cb_cons_report_union.l_1 = q_cb_cons_report_endproject_data.l_1) and (q_cb_cons_report_union.l_2 = q_cb_cons_report_endproject_data.l_2) and (q_cb_cons_report_union.l_3 = q_cb_cons_report_endproject_data.l_3) and (q_cb_cons_report_union.l_4 = q_cb_cons_report_endproject_data.l_4) and (q_cb_cons_report_union.l_5 = q_cb_cons_report_endproject_data.l_5) and (q_cb_cons_report_union.l_6 = q_cb_cons_report_endproject_data.l_6) and (q_cb_cons_report_union.currency = q_cb_cons_report_endproject_data.currency)) left join c6_code on (q_cb_cons_report_union.l_1 = c6_code.c_l1) and (q_cb_cons_report_union.l_2 = c6_code.c_l2) and (q_cb_cons_report_union.l_3 = c6_code.c_l3) and (q_cb_cons_report_union.l_4 = c6_code.c_l4) and (q_cb_cons_report_union.l_5 = c6_code.c_l5) and (q_cb_cons_report_union.l_6 = c6_code.c_l6)) left join c2_code on (q_cb_cons_report_union.l_1 = c2_code.c_l1) and (q_cb_cons_report_union.l_2 = c2_code.c_l2)) left join c3_code on (q_cb_cons_report_union.l_1 = c3_code.c_l1) and (q_cb_cons_report_union.l_2 = c3_code.c_l2) and (q_cb_cons_report_union.l_3 = c3_code.c_l3)) left join c5_code on (q_cb_cons_report_union.l_5 = c5_code.c_l5) and (q_cb_cons_report_union.l_4 = c5_code.c_l4) and (q_cb_cons_report_union.l_3 = c5_code.c_l3) and (q_cb_cons_report_union.l_2 = c5_code.c_l2) and (q_cb_cons_report_union.l_1 = c5_code.c_l1)) left join c4_code on (q_cb_cons_report_union.l_4 = c4_code.c_l4) and (q_cb_cons_report_union.l_3 = c4_code.c_l3) and (q_cb_cons_report_union.l_2 = c4_code.c_l2) and (q_cb_cons_report_union.l_1 = c4_code.c_l1)
group by q_cb_cons_report_union.rep_month, q_cb_cons_report_union.l_1, q_cb_cons_report_union.l_2, q_cb_cons_report_union.l_3, q_cb_cons_report_union.l_4, q_cb_cons_report_union.l_5, q_cb_cons_report_union.l_6, q_cb_cons_report_union.currency, c6_code.desc_tr_l6, c2_code.desc_tr_l2, c3_code.desc_tr_l3, c5_code.desc_tr_l5, c4_code.desc_tr_l4;

----------------------------------------------------------------------------------------------------
q_cb_cons_report_endproject_data
select t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, sum(t_cb_profit_usd_st.income) as income, sum(t_cb_profit_usd_st.expense) as expense, sum(t_cb_profit_usd_st.profit) as profit, t_cb_profit_usd_st.currency
from t_cb_profit_usd_st
group by t_cb_profit_usd_st.rep_month, t_cb_profit_usd_st.l_1, t_cb_profit_usd_st.l_2, t_cb_profit_usd_st.l_3, t_cb_profit_usd_st.l_4, t_cb_profit_usd_st.l_5, t_cb_profit_usd_st.l_6, t_cb_profit_usd_st.desc_tr_l2, t_cb_profit_usd_st.desc_tr_l3, t_cb_profit_usd_st.desc_tr_l6, t_cb_profit_usd_st.currency;

----------------------------------------------------------------------------------------------------
q_cb_cons_report_union
select 
		rep_month,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency
	from 
		q_cb_cons_report_currmonth_data

union select 
		rep_month,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency

	from 
		q_cb_cons_report_endproject_data;

----------------------------------------------------------------------------------------------------
q_cb_curr_base_month
select q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month
from t_rep_month right join q_budget_project_months on t_rep_month.rep_month = q_budget_project_months.rep_month
group by q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month;

----------------------------------------------------------------------------------------------------
q_cb_curr_base_month_mod
select q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month
from t_rep_month right join q_budget_project_months on t_rep_month.rep_month = q_budget_project_months.rep_month
group by q_budget_project_months.pc, t_rep_month.rep_month_date, q_budget_project_months.rep_month;

----------------------------------------------------------------------------------------------------
q_cb_curr_base_val
select q_cb_curr_base_month.rep_month, q_cb_curr_base_month.rep_month_date, mon_curr_rates.r_eur_eur, mon_curr_rates.r_eur_try, mon_curr_rates.r_eur_usd, mon_curr_rates.r_try_eur, mon_curr_rates.r_try_try, mon_curr_rates.r_try_usd, mon_curr_rates.r_usd_eur, mon_curr_rates.r_usd_try, mon_curr_rates.r_usd_usd
from q_cb_curr_base_month left join mon_curr_rates on (q_cb_curr_base_month.rep_month = mon_curr_rates.rep_month) and (q_cb_curr_base_month.rep_month_date = mon_curr_rates.month)
group by q_cb_curr_base_month.rep_month, q_cb_curr_base_month.rep_month_date, mon_curr_rates.r_eur_eur, mon_curr_rates.r_eur_try, mon_curr_rates.r_eur_usd, mon_curr_rates.r_try_eur, mon_curr_rates.r_try_try, mon_curr_rates.r_try_usd, mon_curr_rates.r_usd_eur, mon_curr_rates.r_usd_try, mon_curr_rates.r_usd_usd;

----------------------------------------------------------------------------------------------------
q_cb_curr_base_val_mod
select q_cb_curr_base_month.rep_month_date, q_monthly_curr_rates_mod_crosstab.r_eur_eur, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_try_eur, q_monthly_curr_rates_mod_crosstab.r_try_try, q_monthly_curr_rates_mod_crosstab.r_try_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur, q_monthly_curr_rates_mod_crosstab.r_usd_try, q_monthly_curr_rates_mod_crosstab.r_usd_usd, q_cb_curr_base_month.rep_month
from q_cb_curr_base_month left join q_monthly_curr_rates_mod_crosstab on q_cb_curr_base_month.rep_month_date = q_monthly_curr_rates_mod_crosstab.month
group by q_cb_curr_base_month.rep_month_date, q_monthly_curr_rates_mod_crosstab.r_eur_eur, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_try_eur, q_monthly_curr_rates_mod_crosstab.r_try_try, q_monthly_curr_rates_mod_crosstab.r_try_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur, q_monthly_curr_rates_mod_crosstab.r_usd_try, q_monthly_curr_rates_mod_crosstab.r_usd_usd, q_cb_curr_base_month.rep_month;

----------------------------------------------------------------------------------------------------
q_cb_curr_escalation_rates
select q_cb_active_months_res_qty.rep_month, q_cb_active_months_res_qty.pc, q_cb_active_months_res_qty.l_1, q_cb_active_months_res_qty.l_2, q_cb_active_months_res_qty.l_3, q_cb_active_months_res_qty.l_4, q_cb_active_months_res_qty.l_5, q_cb_active_months_res_qty.l_6, q_cb_active_months_res_qty.exp_cb_mon as [month], q_cb_active_months_res_qty.rs_l1, q_cb_active_months_res_qty.rs_l2, q_cb_active_months_res_qty.rs_l3, q_cb_active_months_res_qty.rs_l4, iif(([currency]="try" and [w_inf_usd]<>0),1+round([rt_usd_try]*[w_inf_usd],6),(iif([currency]="eur" and [w_inf_usd]<>0,1+round([rt_usd_eur]*[w_inf_usd],6),1))) as k_usd, iif(([currency]="try" and [w_inf_eur]<>0),1+round([rt_eur_try]*[w_inf_eur],6),(iif([currency]="usd" and [w_inf_eur]<>0,1+round([rt_eur_usd]*[w_inf_eur],6),1))) as k_eur, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.currency as rs_currency, q_cb_active_months_res_qty.key_r4_simple, q_cb_active_months_res_qty.key_full, q_cb_active_months_res_qty.key_r_pc_l6, q_cb_active_months_res_qty.key_r4, [key_full] & "." & [rs_currency] & "." & [month] as key_full_comb
from (q_cb_active_months_res_qty left join q_cb_monthly_curr_rates_inc on (q_cb_active_months_res_qty.rep_month = q_cb_monthly_curr_rates_inc.rep_month) and (q_cb_active_months_res_qty.pc = q_cb_monthly_curr_rates_inc.pc) and (q_cb_active_months_res_qty.exp_cb_mon = q_cb_monthly_curr_rates_inc.exp_cb_mon)) left join r4_code on q_cb_active_months_res_qty.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_cb_curr_escalation_rates_mod
select q_cb_active_months_res_qty_mod.rep_month, q_cb_active_months_res_qty_mod.pc, q_cb_active_months_res_qty_mod.l_1, q_cb_active_months_res_qty_mod.l_2, q_cb_active_months_res_qty_mod.l_3, q_cb_active_months_res_qty_mod.l_4, q_cb_active_months_res_qty_mod.l_5, q_cb_active_months_res_qty_mod.l_6, q_cb_active_months_res_qty_mod.exp_cb_mon as [month], q_cb_active_months_res_qty_mod.rs_l1, q_cb_active_months_res_qty_mod.rs_l2, q_cb_active_months_res_qty_mod.rs_l3, q_cb_active_months_res_qty_mod.rs_l4, iif(([currency]="try" and [w_inf_usd]<>0),1+round([rt_usd_try]*[w_inf_usd],6),(iif([currency]="eur" and [w_inf_usd]<>0,1+round([rt_usd_eur]*[w_inf_usd],6),1))) as k_usd, iif(([currency]="try" and [w_inf_eur]<>0),1+round([rt_eur_try]*[w_inf_eur],6),(iif([currency]="usd" and [w_inf_eur]<>0,1+round([rt_eur_usd]*[w_inf_eur],6),1))) as k_eur, r4_code.w_inf_usd, r4_code.w_inf_eur, r4_code.currency as rs_currency, q_cb_active_months_res_qty_mod.key_r4_simple, q_cb_active_months_res_qty_mod.key_full, q_cb_active_months_res_qty_mod.key_r_pc_l6, q_cb_active_months_res_qty_mod.key_r4, [key_full] & "." & [currency] & "." & [month] as key_full_comb
from (q_cb_active_months_res_qty_mod left join q_cb_monthly_curr_rates_inc_mod on (q_cb_active_months_res_qty_mod.exp_cb_mon = q_cb_monthly_curr_rates_inc_mod.exp_cb_mon) and (q_cb_active_months_res_qty_mod.pc = q_cb_monthly_curr_rates_inc_mod.pc) and (q_cb_active_months_res_qty_mod.rep_month = q_cb_monthly_curr_rates_inc_mod.rep_month)) left join r4_code on q_cb_active_months_res_qty_mod.key_r4_simple = r4_code.key_r4_simple;

----------------------------------------------------------------------------------------------------
q_cb_exp
select 
		*
	from 
q_pl_exp
		
where total_expense <>0

union all select 
		*
	from 
		t_ac_exp

where exp_ac_exp <>0;

----------------------------------------------------------------------------------------------------
q_cb_exp_diff
select q_cb_exp_mod.rep_month, q_cb_exp_mod.p01_code, q_cb_exp_mod.l_1, q_cb_exp_mod.l_2, q_cb_exp_mod.l_3, q_cb_exp_mod.l_4, q_cb_exp_mod.l_5, q_cb_exp_mod.l_6, q_cb_exp_mod.month, q_cb_exp_mod.up_curr, q_cb_exp.total_expense as exp_orj, q_cb_exp_mod.total_expense as exp_mod, ([exp_orj])-([exp_mod]) as diff
from q_cb_exp_mod left join q_cb_exp on (q_cb_exp_mod.up_curr = q_cb_exp.up_curr) and (q_cb_exp_mod.month = q_cb_exp.month) and (q_cb_exp_mod.l_6 = q_cb_exp.l_6) and (q_cb_exp_mod.l_5 = q_cb_exp.l_5) and (q_cb_exp_mod.l_4 = q_cb_exp.l_4) and (q_cb_exp_mod.l_3 = q_cb_exp.l_3) and (q_cb_exp_mod.l_2 = q_cb_exp.l_2) and (q_cb_exp_mod.l_1 = q_cb_exp.l_1) and (q_cb_exp_mod.p01_code = q_cb_exp.p01_code) and (q_cb_exp_mod.rep_month = q_cb_exp.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_eur_with_dummy
transform sum(q_cb_exp_eur_with_dummy.eur_expense) as sumofeur_expense
select q_cb_exp_eur_with_dummy.rep_month, q_cb_exp_eur_with_dummy.pc, q_cb_exp_eur_with_dummy.l_1, q_cb_exp_eur_with_dummy.l_2, q_cb_exp_eur_with_dummy.l_3, q_cb_exp_eur_with_dummy.l_4, q_cb_exp_eur_with_dummy.l_5, q_cb_exp_eur_with_dummy.l_6, q_cb_exp_eur_with_dummy.up_curr_conv
from q_cb_exp_eur_with_dummy
group by q_cb_exp_eur_with_dummy.rep_month, q_cb_exp_eur_with_dummy.pc, q_cb_exp_eur_with_dummy.l_1, q_cb_exp_eur_with_dummy.l_2, q_cb_exp_eur_with_dummy.l_3, q_cb_exp_eur_with_dummy.l_4, q_cb_exp_eur_with_dummy.l_5, q_cb_exp_eur_with_dummy.l_6, q_cb_exp_eur_with_dummy.up_curr_conv
pivot q_cb_exp_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_eur_with_dummy_mod
transform sum(q_cb_exp_eur_with_dummy_mod.eur_expense) as sumofeur_expense
select q_cb_exp_eur_with_dummy_mod.rep_month as expr1, q_cb_exp_eur_with_dummy_mod.p01_code as expr2, q_cb_exp_eur_with_dummy_mod.l_1 as expr3, q_cb_exp_eur_with_dummy_mod.l_2 as expr4, q_cb_exp_eur_with_dummy_mod.l_3 as expr5, q_cb_exp_eur_with_dummy_mod.l_4 as expr6, q_cb_exp_eur_with_dummy_mod.l_5 as expr7, q_cb_exp_eur_with_dummy_mod.l_6 as expr8, q_cb_exp_eur_with_dummy_mod.up_curr_conv as expr9
from q_cb_exp_eur_with_dummy_mod
where (((q_cb_exp_eur_with_dummy_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
group by q_cb_exp_eur_with_dummy_mod.rep_month, q_cb_exp_eur_with_dummy_mod.p01_code, q_cb_exp_eur_with_dummy_mod.l_1, q_cb_exp_eur_with_dummy_mod.l_2, q_cb_exp_eur_with_dummy_mod.l_3, q_cb_exp_eur_with_dummy_mod.l_4, q_cb_exp_eur_with_dummy_mod.l_5, q_cb_exp_eur_with_dummy_mod.l_6, q_cb_exp_eur_with_dummy_mod.up_curr_conv
order by q_cb_exp_eur_with_dummy_mod.rep_month, q_cb_exp_eur_with_dummy_mod.p01_code, q_cb_exp_eur_with_dummy_mod.l_1, q_cb_exp_eur_with_dummy_mod.l_2, q_cb_exp_eur_with_dummy_mod.l_3, q_cb_exp_eur_with_dummy_mod.l_4, q_cb_exp_eur_with_dummy_mod.l_5, q_cb_exp_eur_with_dummy_mod.l_6, q_cb_exp_eur_with_dummy_mod.month
pivot q_cb_exp_eur_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_try_with_dummy
transform sum(q_cb_exp_try_with_dummy.try_expense) as sumoftry_expense
select q_cb_exp_try_with_dummy.rep_month, q_cb_exp_try_with_dummy.pc, q_cb_exp_try_with_dummy.l_1, q_cb_exp_try_with_dummy.l_2, q_cb_exp_try_with_dummy.l_3, q_cb_exp_try_with_dummy.l_4, q_cb_exp_try_with_dummy.l_5, q_cb_exp_try_with_dummy.l_6, q_cb_exp_try_with_dummy.up_curr_conv
from q_cb_exp_try_with_dummy
group by q_cb_exp_try_with_dummy.rep_month, q_cb_exp_try_with_dummy.pc, q_cb_exp_try_with_dummy.l_1, q_cb_exp_try_with_dummy.l_2, q_cb_exp_try_with_dummy.l_3, q_cb_exp_try_with_dummy.l_4, q_cb_exp_try_with_dummy.l_5, q_cb_exp_try_with_dummy.l_6, q_cb_exp_try_with_dummy.up_curr_conv
pivot q_cb_exp_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_try_with_dummy_mod
transform sum(q_cb_exp_try_with_dummy_mod.try_expense) as sumoftry_expense
select q_cb_exp_try_with_dummy_mod.rep_month as expr1, q_cb_exp_try_with_dummy_mod.p01_code as expr2, q_cb_exp_try_with_dummy_mod.l_1 as expr3, q_cb_exp_try_with_dummy_mod.l_2 as expr4, q_cb_exp_try_with_dummy_mod.l_3 as expr5, q_cb_exp_try_with_dummy_mod.l_4 as expr6, q_cb_exp_try_with_dummy_mod.l_5 as expr7, q_cb_exp_try_with_dummy_mod.l_6 as expr8, q_cb_exp_try_with_dummy_mod.up_curr_conv as expr9
from q_cb_exp_try_with_dummy_mod
where (((q_cb_exp_try_with_dummy_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
group by q_cb_exp_try_with_dummy_mod.rep_month, q_cb_exp_try_with_dummy_mod.p01_code, q_cb_exp_try_with_dummy_mod.l_1, q_cb_exp_try_with_dummy_mod.l_2, q_cb_exp_try_with_dummy_mod.l_3, q_cb_exp_try_with_dummy_mod.l_4, q_cb_exp_try_with_dummy_mod.l_5, q_cb_exp_try_with_dummy_mod.l_6, q_cb_exp_try_with_dummy_mod.up_curr_conv
pivot q_cb_exp_try_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_usd_with_dummy
transform sum(q_cb_exp_usd_with_dummy.usd_expense) as sumofusd_expense
select q_cb_exp_usd_with_dummy.rep_month, q_cb_exp_usd_with_dummy.pc, q_cb_exp_usd_with_dummy.l_1, q_cb_exp_usd_with_dummy.l_2, q_cb_exp_usd_with_dummy.l_3, q_cb_exp_usd_with_dummy.l_4, q_cb_exp_usd_with_dummy.l_5, q_cb_exp_usd_with_dummy.l_6, q_cb_exp_usd_with_dummy.up_curr_conv
from q_cb_exp_usd_with_dummy
group by q_cb_exp_usd_with_dummy.rep_month, q_cb_exp_usd_with_dummy.pc, q_cb_exp_usd_with_dummy.l_1, q_cb_exp_usd_with_dummy.l_2, q_cb_exp_usd_with_dummy.l_3, q_cb_exp_usd_with_dummy.l_4, q_cb_exp_usd_with_dummy.l_5, q_cb_exp_usd_with_dummy.l_6, q_cb_exp_usd_with_dummy.up_curr_conv
pivot q_cb_exp_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_usd_with_dummy_mod
transform sum(q_cb_exp_usd_with_dummy_mod.usd_expense) as sumofusd_expense
select q_cb_exp_usd_with_dummy_mod.rep_month, q_cb_exp_usd_with_dummy_mod.p01_code as pc, q_cb_exp_usd_with_dummy_mod.l_1, q_cb_exp_usd_with_dummy_mod.l_2, q_cb_exp_usd_with_dummy_mod.l_3, q_cb_exp_usd_with_dummy_mod.l_4, q_cb_exp_usd_with_dummy_mod.l_5, q_cb_exp_usd_with_dummy_mod.l_6, q_cb_exp_usd_with_dummy_mod.up_curr_conv
from q_cb_exp_usd_with_dummy_mod
where (((q_cb_exp_usd_with_dummy_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
group by q_cb_exp_usd_with_dummy_mod.rep_month, q_cb_exp_usd_with_dummy_mod.p01_code, q_cb_exp_usd_with_dummy_mod.l_1, q_cb_exp_usd_with_dummy_mod.l_2, q_cb_exp_usd_with_dummy_mod.l_3, q_cb_exp_usd_with_dummy_mod.l_4, q_cb_exp_usd_with_dummy_mod.l_5, q_cb_exp_usd_with_dummy_mod.l_6, q_cb_exp_usd_with_dummy_mod.up_curr_conv
pivot q_cb_exp_usd_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_with_dummy
transform sum(q_cb_exp_with_dummy.total_expense) as sumoftotal_expense
select q_cb_exp_with_dummy.rep_month, q_cb_exp_with_dummy.p01_code, q_cb_exp_with_dummy.l_1, q_cb_exp_with_dummy.l_2, q_cb_exp_with_dummy.l_3, q_cb_exp_with_dummy.l_4, q_cb_exp_with_dummy.l_5, q_cb_exp_with_dummy.l_6, q_cb_exp_with_dummy.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")) as exc_try, iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_exp_with_dummy
group by q_cb_exp_with_dummy.rep_month, q_cb_exp_with_dummy.p01_code, q_cb_exp_with_dummy.l_1, q_cb_exp_with_dummy.l_2, q_cb_exp_with_dummy.l_3, q_cb_exp_with_dummy.l_4, q_cb_exp_with_dummy.l_5, q_cb_exp_with_dummy.l_6, q_cb_exp_with_dummy.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")), iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")), iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_exp_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_dist_with_dummy_mod
transform sum(q_cb_exp_with_dummy_mod.total_expense) as sumoftotal_expense
select q_cb_exp_with_dummy_mod.rep_month as expr1, q_cb_exp_with_dummy_mod.p01_code as expr2, q_cb_exp_with_dummy_mod.l_1 as expr3, q_cb_exp_with_dummy_mod.l_2 as expr4, q_cb_exp_with_dummy_mod.l_3 as expr5, q_cb_exp_with_dummy_mod.l_4 as expr6, q_cb_exp_with_dummy_mod.l_5 as expr7, q_cb_exp_with_dummy_mod.l_6 as expr8, q_cb_exp_with_dummy_mod.up_curr as expr9, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")) as exc_try, iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_exp_with_dummy_mod
where ((([q_cb_exp_with_dummy_mod].[rep_month])=dlookup("[rep_month]","[q_rep_month_max_val]")))
group by q_cb_exp_with_dummy_mod.rep_month, q_cb_exp_with_dummy_mod.p01_code, q_cb_exp_with_dummy_mod.l_1, q_cb_exp_with_dummy_mod.l_2, q_cb_exp_with_dummy_mod.l_3, q_cb_exp_with_dummy_mod.l_4, q_cb_exp_with_dummy_mod.l_5, q_cb_exp_with_dummy_mod.l_6, q_cb_exp_with_dummy_mod.up_curr, iif([up_curr]="eur","r_eur_try",iif([up_curr]="usd","r_usd_try","r_try_try")), iif([up_curr]="eur","r_eur_usd",iif([up_curr]="usd","r_usd_usd","r_try_usd")), iif([up_curr]="eur","r_eur_eur",iif([up_curr]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_exp_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_eur
select t_q_cb_exp.rep_month, t_q_cb_exp.pc, t_q_cb_exp.l_1, t_q_cb_exp.l_2, t_q_cb_exp.l_3, t_q_cb_exp.l_4, t_q_cb_exp.l_5, t_q_cb_exp.l_6, t_q_cb_exp.month, t_q_cb_exp.total_expense, t_q_cb_exp.up_curr, iif([up_curr]="eur",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_eur],[total_expense]*[r_try_eur])) as eur_expense, "eur" as up_curr_conv, t_q_cb_exp.key_r_pc_l6
from t_q_cb_exp left join mon_curr_rates on (t_q_cb_exp.month = mon_curr_rates.month) and (t_q_cb_exp.rep_month = mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_exp_eur_mod
select t_q_cb_exp_mod.rep_month, t_q_cb_exp_mod.p01_code, t_q_cb_exp_mod.l_1, t_q_cb_exp_mod.l_2, t_q_cb_exp_mod.l_3, t_q_cb_exp_mod.l_4, t_q_cb_exp_mod.l_5, t_q_cb_exp_mod.l_6, t_q_cb_exp_mod.month, t_q_cb_exp_mod.total_expense, t_q_cb_exp_mod.up_curr, iif([up_curr]="eur",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_eur],[total_expense]*[r_try_eur])) as eur_expense, "eur" as up_curr_conv, t_q_cb_exp_mod.key_r_pc_l6
from t_q_cb_exp_mod left join q_monthly_curr_rates_mod_crosstab on t_q_cb_exp_mod.month = q_monthly_curr_rates_mod_crosstab.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_eur_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_eur

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_eur_with_dummy_mod
select 
		rep_month,
p01_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_eur_mod


union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_lastm
select t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6, max(t_ac_exp.exp_ac_mon) as lastm
from t_ac_exp
group by t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6;

----------------------------------------------------------------------------------------------------
q_cb_exp_lastm_mod
select q_cb_exp_lastm.rep_month, q_cb_exp_lastm.pc, q_cb_exp_lastm.l_1, q_cb_exp_lastm.l_2, q_cb_exp_lastm.l_3, q_cb_exp_lastm.l_4, q_cb_exp_lastm.l_5, q_cb_exp_lastm.l_6, q_cb_exp_lastm.lastm
from q_cb_exp_lastm
where (((q_cb_exp_lastm.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_exp_mod
select 
		*
	from 
q_pl_exp_mod
		
where total_expense <>0

union all select 
		*
	from 
		q_cb_exp_pre_mod

where total_expense <>0;

----------------------------------------------------------------------------------------------------
q_cb_exp_mod_mt
select q_cb_exp_mod.rep_month, q_cb_exp_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_mod.month, q_cb_exp_mod.total_expense, q_cb_exp_mod.up_curr, q_cb_exp_mod.l_1, q_cb_exp_mod.l_2, q_cb_exp_mod.l_3, q_cb_exp_mod.l_4, q_cb_exp_mod.l_5, q_cb_exp_mod.l_6, q_cb_exp_mod.key_r_pc_l6 into t_q_cb_exp_mod
from q_cb_exp_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_exp_mod.l_3 = c3_code.[c_l3]) and (q_cb_exp_mod.l_2 = c3_code.[c_l2]) and (q_cb_exp_mod.l_1 = c3_code.[c_l1])
group by q_cb_exp_mod.rep_month, q_cb_exp_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_mod.month, q_cb_exp_mod.total_expense, q_cb_exp_mod.up_curr, q_cb_exp_mod.l_1, q_cb_exp_mod.l_2, q_cb_exp_mod.l_3, q_cb_exp_mod.l_4, q_cb_exp_mod.l_5, q_cb_exp_mod.l_6, q_cb_exp_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mod_mt_eur
select q_cb_exp_eur_mod.rep_month, q_cb_exp_eur_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_eur_mod.month, q_cb_exp_eur_mod.eur_expense, q_cb_exp_eur_mod.up_curr_conv, q_cb_exp_eur_mod.l_1, q_cb_exp_eur_mod.l_2, q_cb_exp_eur_mod.l_3, q_cb_exp_eur_mod.l_4, q_cb_exp_eur_mod.l_5, q_cb_exp_eur_mod.l_6, q_cb_exp_eur_mod.key_r_pc_l6 into t_q_cb_exp_eur_mod
from q_cb_exp_eur_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_exp_eur_mod.l_3 = c3_code.[c_l3]) and (q_cb_exp_eur_mod.l_2 = c3_code.[c_l2]) and (q_cb_exp_eur_mod.l_1 = c3_code.[c_l1])
group by q_cb_exp_eur_mod.rep_month, q_cb_exp_eur_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_eur_mod.month, q_cb_exp_eur_mod.eur_expense, q_cb_exp_eur_mod.up_curr_conv, q_cb_exp_eur_mod.l_1, q_cb_exp_eur_mod.l_2, q_cb_exp_eur_mod.l_3, q_cb_exp_eur_mod.l_4, q_cb_exp_eur_mod.l_5, q_cb_exp_eur_mod.l_6, q_cb_exp_eur_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mod_mt_try
select q_cb_exp_try_mod.rep_month, q_cb_exp_try_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_try_mod.month, q_cb_exp_try_mod.try_expense, q_cb_exp_try_mod.up_curr_conv, q_cb_exp_try_mod.l_1, q_cb_exp_try_mod.l_2, q_cb_exp_try_mod.l_3, q_cb_exp_try_mod.l_4, q_cb_exp_try_mod.l_5, q_cb_exp_try_mod.l_6, q_cb_exp_try_mod.key_r_pc_l6 into t_q_cb_exp_try_mod
from q_cb_exp_try_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_exp_try_mod.l_3 = c3_code.[c_l3]) and (q_cb_exp_try_mod.l_2 = c3_code.[c_l2]) and (q_cb_exp_try_mod.l_1 = c3_code.[c_l1])
group by q_cb_exp_try_mod.rep_month, q_cb_exp_try_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_try_mod.month, q_cb_exp_try_mod.try_expense, q_cb_exp_try_mod.up_curr_conv, q_cb_exp_try_mod.l_1, q_cb_exp_try_mod.l_2, q_cb_exp_try_mod.l_3, q_cb_exp_try_mod.l_4, q_cb_exp_try_mod.l_5, q_cb_exp_try_mod.l_6, q_cb_exp_try_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mod_mt_usd
select q_cb_exp_usd_mod.rep_month, q_cb_exp_usd_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_usd_mod.month, q_cb_exp_usd_mod.usd_expense, q_cb_exp_usd_mod.up_curr_conv, q_cb_exp_usd_mod.l_1, q_cb_exp_usd_mod.l_2, q_cb_exp_usd_mod.l_3, q_cb_exp_usd_mod.l_4, q_cb_exp_usd_mod.l_5, q_cb_exp_usd_mod.l_6, q_cb_exp_usd_mod.key_r_pc_l6 into t_q_cb_exp_usd_mod
from q_cb_exp_usd_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_exp_usd_mod.l_3 = c3_code.[c_l3]) and (q_cb_exp_usd_mod.l_2 = c3_code.[c_l2]) and (q_cb_exp_usd_mod.l_1 = c3_code.[c_l1])
group by q_cb_exp_usd_mod.rep_month, q_cb_exp_usd_mod.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_usd_mod.month, q_cb_exp_usd_mod.usd_expense, q_cb_exp_usd_mod.up_curr_conv, q_cb_exp_usd_mod.l_1, q_cb_exp_usd_mod.l_2, q_cb_exp_usd_mod.l_3, q_cb_exp_usd_mod.l_4, q_cb_exp_usd_mod.l_5, q_cb_exp_usd_mod.l_6, q_cb_exp_usd_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mt
select q_cb_exp.rep_month, q_cb_exp.p01_code as pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp.month, sum(q_cb_exp.total_expense) as total_expense, q_cb_exp.up_curr, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.key_r_pc_l6 into t_q_cb_exp
from q_cb_exp left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_exp.l_1 = c3_code.[c_l1]) and (q_cb_exp.l_2 = c3_code.[c_l2]) and (q_cb_exp.l_3 = c3_code.[c_l3])
group by q_cb_exp.rep_month, q_cb_exp.p01_code, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp.month, q_cb_exp.up_curr, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mt_eur
select q_cb_exp_eur.rep_month, q_cb_exp_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_eur.month, sum(q_cb_exp_eur.eur_expense) as sumofeur_expense, q_cb_exp_eur.up_curr_conv, q_cb_exp_eur.l_1, q_cb_exp_eur.l_2, q_cb_exp_eur.l_3, q_cb_exp_eur.l_4, q_cb_exp_eur.l_5, q_cb_exp_eur.l_6, q_cb_exp_eur.key_r_pc_l6 into t_q_cb_exp_eur
from q_cb_exp_eur left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_exp_eur.l_1 = c3_code.[c_l1]) and (q_cb_exp_eur.l_2 = c3_code.[c_l2]) and (q_cb_exp_eur.l_3 = c3_code.[c_l3])
group by q_cb_exp_eur.rep_month, q_cb_exp_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_eur.month, q_cb_exp_eur.up_curr_conv, q_cb_exp_eur.l_1, q_cb_exp_eur.l_2, q_cb_exp_eur.l_3, q_cb_exp_eur.l_4, q_cb_exp_eur.l_5, q_cb_exp_eur.l_6, q_cb_exp_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mt_try
select q_cb_exp_try.rep_month, q_cb_exp_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_try.month, sum(q_cb_exp_try.try_expense) as try_expense, q_cb_exp_try.up_curr_conv, q_cb_exp_try.l_1, q_cb_exp_try.l_2, q_cb_exp_try.l_3, q_cb_exp_try.l_4, q_cb_exp_try.l_5, q_cb_exp_try.l_6, q_cb_exp_try.key_r_pc_l6 into t_q_cb_exp_try
from q_cb_exp_try left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_exp_try.l_1 = c3_code.[c_l1]) and (q_cb_exp_try.l_2 = c3_code.[c_l2]) and (q_cb_exp_try.l_3 = c3_code.[c_l3])
group by q_cb_exp_try.rep_month, q_cb_exp_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_try.month, q_cb_exp_try.up_curr_conv, q_cb_exp_try.l_1, q_cb_exp_try.l_2, q_cb_exp_try.l_3, q_cb_exp_try.l_4, q_cb_exp_try.l_5, q_cb_exp_try.l_6, q_cb_exp_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_mt_usd
select q_cb_exp_usd.rep_month, q_cb_exp_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_usd.month, sum(q_cb_exp_usd.usd_expense) as usd_expense, q_cb_exp_usd.up_curr_conv, q_cb_exp_usd.l_1, q_cb_exp_usd.l_2, q_cb_exp_usd.l_3, q_cb_exp_usd.l_4, q_cb_exp_usd.l_5, q_cb_exp_usd.l_6, q_cb_exp_usd.key_r_pc_l6 into t_q_cb_exp_usd
from q_cb_exp_usd left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_exp_usd.l_1 = c3_code.[c_l1]) and (q_cb_exp_usd.l_2 = c3_code.[c_l2]) and (q_cb_exp_usd.l_3 = c3_code.[c_l3])
group by q_cb_exp_usd.rep_month, q_cb_exp_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_exp_usd.month, q_cb_exp_usd.up_curr_conv, q_cb_exp_usd.l_1, q_cb_exp_usd.l_2, q_cb_exp_usd.l_3, q_cb_exp_usd.l_4, q_cb_exp_usd.l_5, q_cb_exp_usd.l_6, q_cb_exp_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_exp_pre_mod
select t_ac_exp.rep_month, t_ac_exp.pc, t_ac_exp.l_1, t_ac_exp.l_2, t_ac_exp.l_3, t_ac_exp.l_4, t_ac_exp.l_5, t_ac_exp.l_6, t_ac_exp.exp_ac_mon as [month], t_ac_exp.exp_ac_exp as total_expense, t_ac_exp.up_curr, t_ac_exp.key_r_pc_l6
from t_ac_exp
where (((t_ac_exp.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_exp_try
select t_q_cb_exp.rep_month, t_q_cb_exp.pc, t_q_cb_exp.l_1, t_q_cb_exp.l_2, t_q_cb_exp.l_3, t_q_cb_exp.l_4, t_q_cb_exp.l_5, t_q_cb_exp.l_6, t_q_cb_exp.month, t_q_cb_exp.total_expense, t_q_cb_exp.up_curr, iif([up_curr]="try",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_try],[total_expense]*[r_eur_try])) as try_expense, "try" as up_curr_conv, t_q_cb_exp.key_r_pc_l6
from t_q_cb_exp left join mon_curr_rates on (t_q_cb_exp.month = mon_curr_rates.month) and (t_q_cb_exp.rep_month = mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_exp_try_mod
select t_q_cb_exp_mod.rep_month, t_q_cb_exp_mod.p01_code, t_q_cb_exp_mod.l_1, t_q_cb_exp_mod.l_2, t_q_cb_exp_mod.l_3, t_q_cb_exp_mod.l_4, t_q_cb_exp_mod.l_5, t_q_cb_exp_mod.l_6, t_q_cb_exp_mod.month, t_q_cb_exp_mod.total_expense, t_q_cb_exp_mod.up_curr, iif([up_curr]="try",[total_expense],iif([up_curr]="usd",[total_expense]*[r_usd_try],[total_expense]*[r_eur_try])) as try_expense, "try" as up_curr_conv, t_q_cb_exp_mod.key_r_pc_l6
from t_q_cb_exp_mod left join q_monthly_curr_rates_mod_crosstab on t_q_cb_exp_mod.month = q_monthly_curr_rates_mod_crosstab.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_try_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_expense,
up_curr_conv,
key_r_pc_l6


	from 
		q_cb_exp_try

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_try_with_dummy_mod
select 
		rep_month,
p01_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_try_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_usd
select t_q_cb_exp.rep_month, t_q_cb_exp.pc, t_q_cb_exp.l_1, t_q_cb_exp.l_2, t_q_cb_exp.l_3, t_q_cb_exp.l_4, t_q_cb_exp.l_5, t_q_cb_exp.l_6, t_q_cb_exp.month, t_q_cb_exp.total_expense, t_q_cb_exp.up_curr, iif([up_curr]="usd",[total_expense],iif([up_curr]="eur",[total_expense]*[r_eur_usd],[total_expense]*[r_try_usd])) as usd_expense, "usd" as up_curr_conv, t_q_cb_exp.key_r_pc_l6
from t_q_cb_exp left join mon_curr_rates on (t_q_cb_exp.month = mon_curr_rates.month) and (t_q_cb_exp.rep_month = mon_curr_rates.rep_month);

----------------------------------------------------------------------------------------------------
q_cb_exp_usd_diff
select q_cb_exp_usd_mod.rep_month, q_cb_exp_usd_mod.month, q_cb_exp_usd_mod.p01_code, q_cb_exp_usd_mod.l_1, q_cb_exp_usd_mod.l_2, q_cb_exp_usd_mod.l_3, q_cb_exp_usd_mod.l_4, q_cb_exp_usd_mod.l_5, q_cb_exp_usd_mod.l_6, q_cb_exp_usd_mod.up_curr_conv, q_cb_exp_usd.usd_expense as exp_orj, q_cb_exp_usd_mod.usd_expense as exp_mod, [exp_orj]-[exp_mod] as diff, q_cb_exp_usd_mod.up_curr
from q_cb_exp_usd_mod left join q_cb_exp_usd on (q_cb_exp_usd_mod.up_curr_conv = q_cb_exp_usd.up_curr_conv) and (q_cb_exp_usd_mod.up_curr = q_cb_exp_usd.up_curr) and (q_cb_exp_usd_mod.month = q_cb_exp_usd.month) and (q_cb_exp_usd_mod.l_6 = q_cb_exp_usd.l_6) and (q_cb_exp_usd_mod.l_5 = q_cb_exp_usd.l_5) and (q_cb_exp_usd_mod.l_4 = q_cb_exp_usd.l_4) and (q_cb_exp_usd_mod.l_3 = q_cb_exp_usd.l_3) and (q_cb_exp_usd_mod.l_2 = q_cb_exp_usd.l_2) and (q_cb_exp_usd_mod.l_1 = q_cb_exp_usd.l_1) and (q_cb_exp_usd_mod.p01_code = q_cb_exp_usd.pc) and (q_cb_exp_usd_mod.rep_month = q_cb_exp_usd.rep_month)
order by q_cb_exp_usd_mod.rep_month, q_cb_exp_usd_mod.month, q_cb_exp_usd_mod.p01_code, q_cb_exp_usd_mod.l_1, q_cb_exp_usd_mod.l_2, q_cb_exp_usd_mod.l_3, q_cb_exp_usd_mod.l_4, q_cb_exp_usd_mod.l_5, q_cb_exp_usd_mod.l_6, q_cb_exp_usd_mod.up_curr_conv;

----------------------------------------------------------------------------------------------------
q_cb_exp_usd_mod
select t_q_cb_exp_mod.rep_month, t_q_cb_exp_mod.p01_code, t_q_cb_exp_mod.l_1, t_q_cb_exp_mod.l_2, t_q_cb_exp_mod.l_3, t_q_cb_exp_mod.l_4, t_q_cb_exp_mod.l_5, t_q_cb_exp_mod.l_6, t_q_cb_exp_mod.month, t_q_cb_exp_mod.total_expense, t_q_cb_exp_mod.up_curr, iif([up_curr]="usd",[total_expense],iif([up_curr]="eur",[total_expense]*[r_eur_usd],[total_expense]*[r_try_usd])) as usd_expense, "usd" as up_curr_conv, t_q_cb_exp_mod.key_r_pc_l6
from t_q_cb_exp_mod left join q_monthly_curr_rates_mod_crosstab on t_q_cb_exp_mod.month = q_monthly_curr_rates_mod_crosstab.month;

----------------------------------------------------------------------------------------------------
q_cb_exp_usd_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_usd

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_usd_with_dummy_mod
select 
		rep_month,
p01_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_expense,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_exp_usd_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_with_dummy
select 
		*
	from 
		q_cb_exp

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_exp_with_dummy_mod
select 
		*
	from 
		q_cb_exp_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_calculation
select t_cb_inc_qty.rep_month, t_cb_inc_qty.pc, t_cb_inc_qty.l_1, t_cb_inc_qty.l_2, t_cb_inc_qty.l_3, t_cb_inc_qty.l_4, t_cb_inc_qty.l_5, t_cb_inc_qty.l_6, t_cb_inc_qty.inc_base_mon, iif([inc_rate] is null,1,1+[inc_rate]) as inc_rate_1, iif([inc_rate_pcode] is null,1,1+[inc_rate_pcode]) as inc_rate_2, t_cb_inc_wbs.up, t_cb_inc_wbs.currency, [up]*[inc_rate_1]*[inc_rate_2] as up_total, t_cb_inc_qty.inc_base_qty, [up_total]*[inc_base_qty] as inc_total, t_cb_inc_qty.key_r_pc_l6
from ((t_cb_inc_qty left join t_cb_inc_esc_rates_l6 on (t_cb_inc_qty.inc_base_mon = t_cb_inc_esc_rates_l6.month) and (t_cb_inc_qty.l_6 = t_cb_inc_esc_rates_l6.c_l6) and (t_cb_inc_qty.l_5 = t_cb_inc_esc_rates_l6.c_l5) and (t_cb_inc_qty.l_4 = t_cb_inc_esc_rates_l6.c_l4) and (t_cb_inc_qty.l_3 = t_cb_inc_esc_rates_l6.c_l3) and (t_cb_inc_qty.l_2 = t_cb_inc_esc_rates_l6.c_l2) and (t_cb_inc_qty.l_1 = t_cb_inc_esc_rates_l6.c_l1) and (t_cb_inc_qty.pc = t_cb_inc_esc_rates_l6.p01_code) and (t_cb_inc_qty.rep_month = t_cb_inc_esc_rates_l6.rep_month)) left join t_cb_inc_esc_rates_pcode on (t_cb_inc_qty.inc_base_mon = t_cb_inc_esc_rates_pcode.month) and (t_cb_inc_qty.pc = t_cb_inc_esc_rates_pcode.p01_code) and (t_cb_inc_qty.rep_month = t_cb_inc_esc_rates_pcode.rep_month)) left join t_cb_inc_wbs on t_cb_inc_qty.key_r_pc_l6 = t_cb_inc_wbs.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_eur_with_dummy_crosstab
transform sum(q_cb_inc_eur_with_dummy.eur_income) as eur_income
select q_cb_inc_eur_with_dummy.rep_month, q_cb_inc_eur_with_dummy.pc, q_cb_inc_eur_with_dummy.l_1, q_cb_inc_eur_with_dummy.l_2, q_cb_inc_eur_with_dummy.l_3, q_cb_inc_eur_with_dummy.l_4, q_cb_inc_eur_with_dummy.l_5, q_cb_inc_eur_with_dummy.l_6, q_cb_inc_eur_with_dummy.up_curr_conv
from q_cb_inc_eur_with_dummy
group by q_cb_inc_eur_with_dummy.rep_month, q_cb_inc_eur_with_dummy.pc, q_cb_inc_eur_with_dummy.l_1, q_cb_inc_eur_with_dummy.l_2, q_cb_inc_eur_with_dummy.l_3, q_cb_inc_eur_with_dummy.l_4, q_cb_inc_eur_with_dummy.l_5, q_cb_inc_eur_with_dummy.l_6, q_cb_inc_eur_with_dummy.up_curr_conv
pivot q_cb_inc_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_eur_with_dummy_crosstab_mod
transform sum(q_cb_inc_eur_with_dummy_mod.eur_income) as eur_income
select q_cb_inc_eur_with_dummy_mod.rep_month, q_cb_inc_eur_with_dummy_mod.pc, q_cb_inc_eur_with_dummy_mod.l_1, q_cb_inc_eur_with_dummy_mod.l_2, q_cb_inc_eur_with_dummy_mod.l_3, q_cb_inc_eur_with_dummy_mod.l_4, q_cb_inc_eur_with_dummy_mod.l_5, q_cb_inc_eur_with_dummy_mod.l_6, q_cb_inc_eur_with_dummy_mod.up_curr_conv
from q_cb_inc_eur_with_dummy_mod
group by q_cb_inc_eur_with_dummy_mod.rep_month, q_cb_inc_eur_with_dummy_mod.pc, q_cb_inc_eur_with_dummy_mod.l_1, q_cb_inc_eur_with_dummy_mod.l_2, q_cb_inc_eur_with_dummy_mod.l_3, q_cb_inc_eur_with_dummy_mod.l_4, q_cb_inc_eur_with_dummy_mod.l_5, q_cb_inc_eur_with_dummy_mod.l_6, q_cb_inc_eur_with_dummy_mod.up_curr_conv
pivot q_cb_inc_eur_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_try_with_dummy_crosstab
transform sum(q_cb_inc_try_with_dummy.try_income) as try_income
select q_cb_inc_try_with_dummy.rep_month, q_cb_inc_try_with_dummy.pc, q_cb_inc_try_with_dummy.l_1, q_cb_inc_try_with_dummy.l_2, q_cb_inc_try_with_dummy.l_3, q_cb_inc_try_with_dummy.l_4, q_cb_inc_try_with_dummy.l_5, q_cb_inc_try_with_dummy.l_6, q_cb_inc_try_with_dummy.up_curr_conv
from q_cb_inc_try_with_dummy
group by q_cb_inc_try_with_dummy.rep_month, q_cb_inc_try_with_dummy.pc, q_cb_inc_try_with_dummy.l_1, q_cb_inc_try_with_dummy.l_2, q_cb_inc_try_with_dummy.l_3, q_cb_inc_try_with_dummy.l_4, q_cb_inc_try_with_dummy.l_5, q_cb_inc_try_with_dummy.l_6, q_cb_inc_try_with_dummy.up_curr_conv
pivot q_cb_inc_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_try_with_dummy_crosstab_mod
transform sum(q_cb_inc_try_with_dummy_mod.try_income) as try_income
select q_cb_inc_try_with_dummy_mod.rep_month, q_cb_inc_try_with_dummy_mod.pc, q_cb_inc_try_with_dummy_mod.l_1, q_cb_inc_try_with_dummy_mod.l_2, q_cb_inc_try_with_dummy_mod.l_3, q_cb_inc_try_with_dummy_mod.l_4, q_cb_inc_try_with_dummy_mod.l_5, q_cb_inc_try_with_dummy_mod.l_6, q_cb_inc_try_with_dummy_mod.up_curr_conv
from q_cb_inc_try_with_dummy_mod
group by q_cb_inc_try_with_dummy_mod.rep_month, q_cb_inc_try_with_dummy_mod.pc, q_cb_inc_try_with_dummy_mod.l_1, q_cb_inc_try_with_dummy_mod.l_2, q_cb_inc_try_with_dummy_mod.l_3, q_cb_inc_try_with_dummy_mod.l_4, q_cb_inc_try_with_dummy_mod.l_5, q_cb_inc_try_with_dummy_mod.l_6, q_cb_inc_try_with_dummy_mod.up_curr_conv
pivot q_cb_inc_try_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_usd_with_dummy_crosstab
transform sum(q_cb_inc_usd_with_dummy.usd_income) as usd_income
select q_cb_inc_usd_with_dummy.rep_month, q_cb_inc_usd_with_dummy.pc, q_cb_inc_usd_with_dummy.l_1, q_cb_inc_usd_with_dummy.l_2, q_cb_inc_usd_with_dummy.l_3, q_cb_inc_usd_with_dummy.l_4, q_cb_inc_usd_with_dummy.l_5, q_cb_inc_usd_with_dummy.l_6, q_cb_inc_usd_with_dummy.up_curr_conv
from q_cb_inc_usd_with_dummy
group by q_cb_inc_usd_with_dummy.rep_month, q_cb_inc_usd_with_dummy.pc, q_cb_inc_usd_with_dummy.l_1, q_cb_inc_usd_with_dummy.l_2, q_cb_inc_usd_with_dummy.l_3, q_cb_inc_usd_with_dummy.l_4, q_cb_inc_usd_with_dummy.l_5, q_cb_inc_usd_with_dummy.l_6, q_cb_inc_usd_with_dummy.up_curr_conv
pivot q_cb_inc_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_usd_with_dummy_crosstab_mod
transform sum(q_cb_inc_usd_with_dummy_mod.usd_income) as usd_income
select q_cb_inc_usd_with_dummy_mod.rep_month, q_cb_inc_usd_with_dummy_mod.pc, q_cb_inc_usd_with_dummy_mod.l_1, q_cb_inc_usd_with_dummy_mod.l_2, q_cb_inc_usd_with_dummy_mod.l_3, q_cb_inc_usd_with_dummy_mod.l_4, q_cb_inc_usd_with_dummy_mod.l_5, q_cb_inc_usd_with_dummy_mod.l_6, q_cb_inc_usd_with_dummy_mod.up_curr_conv
from q_cb_inc_usd_with_dummy_mod
group by q_cb_inc_usd_with_dummy_mod.rep_month, q_cb_inc_usd_with_dummy_mod.pc, q_cb_inc_usd_with_dummy_mod.l_1, q_cb_inc_usd_with_dummy_mod.l_2, q_cb_inc_usd_with_dummy_mod.l_3, q_cb_inc_usd_with_dummy_mod.l_4, q_cb_inc_usd_with_dummy_mod.l_5, q_cb_inc_usd_with_dummy_mod.l_6, q_cb_inc_usd_with_dummy_mod.up_curr_conv
pivot q_cb_inc_usd_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_dist_with_dummy_crosstab
transform sum(q_cb_inc_with_dummy.inc_total) as total_income
select q_cb_inc_with_dummy.rep_month, q_cb_inc_with_dummy.pc, q_cb_inc_with_dummy.l_1, q_cb_inc_with_dummy.l_2, q_cb_inc_with_dummy.l_3, q_cb_inc_with_dummy.l_4, q_cb_inc_with_dummy.l_5, q_cb_inc_with_dummy.l_6, q_cb_inc_with_dummy.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")) as exc_try, iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_inc_with_dummy
group by q_cb_inc_with_dummy.rep_month, q_cb_inc_with_dummy.pc, q_cb_inc_with_dummy.l_1, q_cb_inc_with_dummy.l_2, q_cb_inc_with_dummy.l_3, q_cb_inc_with_dummy.l_4, q_cb_inc_with_dummy.l_5, q_cb_inc_with_dummy.l_6, q_cb_inc_with_dummy.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")), iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")), iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_inc_with_dummy.inc_base_mon;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur
select t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6, t_cb_inc_total_st.inc_total, t_cb_inc_total_st.currency, iif([currency]="eur",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_eur],[inc_total]*[r_try_eur])) as eur_income, "eur" as up_curr_conv, t_cb_inc_total_st.inc_base_mon as [month], t_cb_inc_total_st.key_r_pc_l6
from t_cb_inc_total_st left join mon_curr_rates on (t_cb_inc_total_st.inc_base_mon = mon_curr_rates.month) and (t_cb_inc_total_st.rep_month = mon_curr_rates.rep_month)
order by t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_mod
select q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, iif([currency]="eur",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_eur],[inc_total]*[r_try_eur])) as eur_income, "eur" as up_curr_conv, q_cb_inc_total_mod.month as [month], q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.key_r_pc_l6
from q_cb_inc_total_mod left join q_monthly_curr_rates_mod_crosstab on q_cb_inc_total_mod.month = q_monthly_curr_rates_mod_crosstab.month
where (((q_cb_inc_total_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_mod_mt
select q_cb_inc_eur_mod.rep_month, q_cb_inc_eur_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_eur_mod.month, q_cb_inc_eur_mod.eur_income, q_cb_inc_eur_mod.up_curr_conv, q_cb_inc_eur_mod.l_1, q_cb_inc_eur_mod.l_2, q_cb_inc_eur_mod.l_3, q_cb_inc_eur_mod.l_4, q_cb_inc_eur_mod.l_5, q_cb_inc_eur_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_eur_mod.key_r_pc_l6 into t_cb_inc_eur_mod_st
from (q_cb_inc_eur_mod left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_inc_eur_mod.l_3 = c3_code.c_l3) and (q_cb_inc_eur_mod.l_2 = c3_code.c_l2) and (q_cb_inc_eur_mod.l_1 = c3_code.c_l1)) left join c6_code on (q_cb_inc_eur_mod.l_6 = c6_code.c_l6) and (q_cb_inc_eur_mod.l_5 = c6_code.c_l5) and (q_cb_inc_eur_mod.l_4 = c6_code.c_l4) and (q_cb_inc_eur_mod.l_3 = c6_code.c_l3) and (q_cb_inc_eur_mod.l_2 = c6_code.c_l2) and (q_cb_inc_eur_mod.l_1 = c6_code.c_l1)
group by q_cb_inc_eur_mod.rep_month, q_cb_inc_eur_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_eur_mod.month, q_cb_inc_eur_mod.eur_income, q_cb_inc_eur_mod.up_curr_conv, q_cb_inc_eur_mod.l_1, q_cb_inc_eur_mod.l_2, q_cb_inc_eur_mod.l_3, q_cb_inc_eur_mod.l_4, q_cb_inc_eur_mod.l_5, q_cb_inc_eur_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_eur_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_mt
select q_cb_inc_eur.rep_month, q_cb_inc_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_eur.month, sum(q_cb_inc_eur.eur_income) as eur_income, q_cb_inc_eur.up_curr_conv, q_cb_inc_eur.l_1, q_cb_inc_eur.l_2, q_cb_inc_eur.l_3, q_cb_inc_eur.l_4, q_cb_inc_eur.l_5, q_cb_inc_eur.l_6, c6_code.desc_tr_l6, q_cb_inc_eur.key_r_pc_l6 into t_cb_inc_eur_st
from (q_cb_inc_eur left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_inc_eur.l_3 = c3_code.c_l3) and (q_cb_inc_eur.l_2 = c3_code.c_l2) and (q_cb_inc_eur.l_1 = c3_code.c_l1)) left join c6_code on (q_cb_inc_eur.l_6 = c6_code.c_l6) and (q_cb_inc_eur.l_5 = c6_code.c_l5) and (q_cb_inc_eur.l_4 = c6_code.c_l4) and (q_cb_inc_eur.l_3 = c6_code.c_l3) and (q_cb_inc_eur.l_2 = c6_code.c_l2) and (q_cb_inc_eur.l_1 = c6_code.c_l1)
group by q_cb_inc_eur.rep_month, q_cb_inc_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_eur.month, q_cb_inc_eur.up_curr_conv, q_cb_inc_eur.l_1, q_cb_inc_eur.l_2, q_cb_inc_eur.l_3, q_cb_inc_eur.l_4, q_cb_inc_eur.l_5, q_cb_inc_eur.l_6, c6_code.desc_tr_l6, q_cb_inc_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_income,
up_curr_conv,
key_r_pc_l6

from 
q_cb_inc_eur

union all select 
*
from 
q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_eur_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
eur_income,
up_curr_conv,
key_r_pc_l6

from 
q_cb_inc_eur_mod

union all select 
*
from 
q_bb_qty_dummy_full

where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_inc_qty
select *
from t_cb_inc_qty;

----------------------------------------------------------------------------------------------------
q_cb_inc_qty_crosstab
transform sum(q_cb_inc_qty.inc_base_qty) as inc_base_qty
select q_cb_inc_qty.rep_month, q_cb_inc_qty.pc, q_cb_inc_qty.l_1, q_cb_inc_qty.l_2, q_cb_inc_qty.l_3, q_cb_inc_qty.l_4, q_cb_inc_qty.l_5, q_cb_inc_qty.l_6
from q_cb_inc_qty
group by q_cb_inc_qty.rep_month, q_cb_inc_qty.pc, q_cb_inc_qty.l_1, q_cb_inc_qty.l_2, q_cb_inc_qty.l_3, q_cb_inc_qty.l_4, q_cb_inc_qty.l_5, q_cb_inc_qty.l_6
order by q_cb_inc_qty.rep_month, q_cb_inc_qty.pc, q_cb_inc_qty.l_1, q_cb_inc_qty.l_2, q_cb_inc_qty.l_3, q_cb_inc_qty.l_4, q_cb_inc_qty.l_5, q_cb_inc_qty.l_6
pivot q_cb_inc_qty.inc_base_mon;

----------------------------------------------------------------------------------------------------
q_cb_inc_total
select q_cb_inc_calculation.rep_month, q_cb_inc_calculation.pc, q_cb_inc_calculation.l_1, q_cb_inc_calculation.l_2, q_cb_inc_calculation.l_3, q_cb_inc_calculation.l_4, q_cb_inc_calculation.l_5, q_cb_inc_calculation.l_6, q_cb_inc_calculation.inc_base_mon, sum(q_cb_inc_calculation.inc_total) as inc_total, q_cb_inc_calculation.currency, q_cb_inc_calculation.key_r_pc_l6
from q_cb_inc_calculation
group by q_cb_inc_calculation.rep_month, q_cb_inc_calculation.pc, q_cb_inc_calculation.l_1, q_cb_inc_calculation.l_2, q_cb_inc_calculation.l_3, q_cb_inc_calculation.l_4, q_cb_inc_calculation.l_5, q_cb_inc_calculation.l_6, q_cb_inc_calculation.inc_base_mon, q_cb_inc_calculation.currency, q_cb_inc_calculation.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_total_mod
select t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6, t_cb_inc_total_st.inc_base_mon as [month], t_cb_inc_total_st.inc_total, t_cb_inc_total_st.currency, t_cb_inc_total_st.key_r_pc_l6
from t_cb_inc_total_st
where (((t_cb_inc_total_st.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_inc_total_mod_mt
select q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_total_mod.month, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_total_mod.key_r_pc_l6 into t_cb_inc_total_mod_st
from (q_cb_inc_total_mod left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_inc_total_mod.l_3 = c3_code.c_l3) and (q_cb_inc_total_mod.l_2 = c3_code.c_l2) and (q_cb_inc_total_mod.l_1 = c3_code.c_l1)) left join c6_code on (q_cb_inc_total_mod.l_6 = c6_code.c_l6) and (q_cb_inc_total_mod.l_5 = c6_code.c_l5) and (q_cb_inc_total_mod.l_4 = c6_code.c_l4) and (q_cb_inc_total_mod.l_3 = c6_code.c_l3) and (q_cb_inc_total_mod.l_2 = c6_code.c_l2) and (q_cb_inc_total_mod.l_1 = c6_code.c_l1)
group by q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_total_mod.month, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_total_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_total_mt
select q_cb_inc_total.rep_month, q_cb_inc_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_total.inc_base_mon, sum(q_cb_inc_total.inc_total) as inc_total, q_cb_inc_total.currency, q_cb_inc_total.l_1, q_cb_inc_total.l_2, q_cb_inc_total.l_3, q_cb_inc_total.l_4, q_cb_inc_total.l_5, q_cb_inc_total.l_6, c6_code.desc_tr_l6, [rep_month] & "." & [pc] & "." & [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as key_r_pc_l6 into t_cb_inc_total_st
from (q_cb_inc_total left join (c2_code right join c3_code on (c2_code.[c_l1] = c3_code.[c_l1]) and (c2_code.[c_l2] = c3_code.[c_l2])) on (q_cb_inc_total.l_3 = c3_code.c_l3) and (q_cb_inc_total.l_2 = c3_code.c_l2) and (q_cb_inc_total.l_1 = c3_code.c_l1)) left join c6_code on (q_cb_inc_total.l_6 = c6_code.c_l6) and (q_cb_inc_total.l_5 = c6_code.c_l5) and (q_cb_inc_total.l_4 = c6_code.c_l4) and (q_cb_inc_total.l_3 = c6_code.c_l3) and (q_cb_inc_total.l_2 = c6_code.c_l2) and (q_cb_inc_total.l_1 = c6_code.c_l1)
group by q_cb_inc_total.rep_month, q_cb_inc_total.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_total.inc_base_mon, q_cb_inc_total.currency, q_cb_inc_total.l_1, q_cb_inc_total.l_2, q_cb_inc_total.l_3, q_cb_inc_total.l_4, q_cb_inc_total.l_5, q_cb_inc_total.l_6, c6_code.desc_tr_l6, [rep_month] & "." & [pc] & "." & [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6];

----------------------------------------------------------------------------------------------------
q_cb_inc_try
select t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6, t_cb_inc_total_st.inc_total, t_cb_inc_total_st.currency, iif([currency]="try",[inc_total],iif([currency]="eur",[inc_total]*[r_eur_try],[inc_total]*[r_usd_try])) as try_income, "try" as up_curr_conv, t_cb_inc_total_st.inc_base_mon as [month], t_cb_inc_total_st.key_r_pc_l6
from t_cb_inc_total_st left join mon_curr_rates on (t_cb_inc_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_inc_total_st.inc_base_mon = mon_curr_rates.month);

----------------------------------------------------------------------------------------------------
q_cb_inc_try_mod
select q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, iif([currency]="try",[inc_total],iif([currency]="usd",[inc_total]*[r_usd_try],[inc_total]*[r_eur_try])) as try_income, "try" as up_curr_conv, q_cb_inc_total_mod.month as [month], q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.key_r_pc_l6
from q_cb_inc_total_mod left join q_monthly_curr_rates_mod_crosstab on q_cb_inc_total_mod.month = q_monthly_curr_rates_mod_crosstab.month
where (((q_cb_inc_total_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6;

----------------------------------------------------------------------------------------------------
q_cb_inc_try_mod_mt
select q_cb_inc_try_mod.rep_month, q_cb_inc_try_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_try_mod.month, q_cb_inc_try_mod.try_income, q_cb_inc_try_mod.up_curr_conv, q_cb_inc_try_mod.l_1, q_cb_inc_try_mod.l_2, q_cb_inc_try_mod.l_3, q_cb_inc_try_mod.l_4, q_cb_inc_try_mod.l_5, q_cb_inc_try_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_try_mod.key_r_pc_l6 into t_cb_inc_try_mod_st
from (q_cb_inc_try_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_inc_try_mod.l_1 = c3_code.c_l1) and (q_cb_inc_try_mod.l_2 = c3_code.c_l2) and (q_cb_inc_try_mod.l_3 = c3_code.c_l3)) left join c6_code on (q_cb_inc_try_mod.l_1 = c6_code.c_l1) and (q_cb_inc_try_mod.l_2 = c6_code.c_l2) and (q_cb_inc_try_mod.l_3 = c6_code.c_l3) and (q_cb_inc_try_mod.l_4 = c6_code.c_l4) and (q_cb_inc_try_mod.l_5 = c6_code.c_l5) and (q_cb_inc_try_mod.l_6 = c6_code.c_l6)
group by q_cb_inc_try_mod.rep_month, q_cb_inc_try_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_try_mod.month, q_cb_inc_try_mod.try_income, q_cb_inc_try_mod.up_curr_conv, q_cb_inc_try_mod.l_1, q_cb_inc_try_mod.l_2, q_cb_inc_try_mod.l_3, q_cb_inc_try_mod.l_4, q_cb_inc_try_mod.l_5, q_cb_inc_try_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_try_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_try_mt
select q_cb_inc_try.rep_month, q_cb_inc_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_try.month, sum(q_cb_inc_try.try_income) as try_income, q_cb_inc_try.up_curr_conv, q_cb_inc_try.l_1, q_cb_inc_try.l_2, q_cb_inc_try.l_3, q_cb_inc_try.l_4, q_cb_inc_try.l_5, q_cb_inc_try.l_6, c6_code.desc_tr_l6, q_cb_inc_try.key_r_pc_l6 into t_cb_inc_try_st
from (q_cb_inc_try left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_inc_try.l_1 = c3_code.c_l1) and (q_cb_inc_try.l_2 = c3_code.c_l2) and (q_cb_inc_try.l_3 = c3_code.c_l3)) left join c6_code on (q_cb_inc_try.l_1 = c6_code.c_l1) and (q_cb_inc_try.l_2 = c6_code.c_l2) and (q_cb_inc_try.l_3 = c6_code.c_l3) and (q_cb_inc_try.l_4 = c6_code.c_l4) and (q_cb_inc_try.l_5 = c6_code.c_l5) and (q_cb_inc_try.l_6 = c6_code.c_l6)
group by q_cb_inc_try.rep_month, q_cb_inc_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_try.month, q_cb_inc_try.up_curr_conv, q_cb_inc_try.l_1, q_cb_inc_try.l_2, q_cb_inc_try.l_3, q_cb_inc_try.l_4, q_cb_inc_try.l_5, q_cb_inc_try.l_6, c6_code.desc_tr_l6, q_cb_inc_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_try_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_inc_try

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_try_with_dummy_mod
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
try_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_inc_try_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full


where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_inc_usd
select t_cb_inc_total_st.rep_month, t_cb_inc_total_st.pc, t_cb_inc_total_st.l_1, t_cb_inc_total_st.l_2, t_cb_inc_total_st.l_3, t_cb_inc_total_st.l_4, t_cb_inc_total_st.l_5, t_cb_inc_total_st.l_6, t_cb_inc_total_st.inc_total, t_cb_inc_total_st.currency, iif([currency]="usd",[inc_total],iif([currency]="eur",[inc_total]*[r_eur_usd],[inc_total]*[r_try_usd])) as usd_income, "usd" as up_curr_conv, t_cb_inc_total_st.inc_base_mon as [month], t_cb_inc_total_st.key_r_pc_l6, mon_curr_rates.r_usd_try, mon_curr_rates.r_try_usd
from t_cb_inc_total_st left join mon_curr_rates on (t_cb_inc_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_inc_total_st.inc_base_mon = mon_curr_rates.month);

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_mod
select q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6, q_cb_inc_total_mod.inc_total, q_cb_inc_total_mod.currency, iif([currency]="usd",[inc_total],iif([currency]="eur",[inc_total]*[r_eur_usd],[inc_total]*[r_try_usd])) as usd_income, "usd" as up_curr_conv, q_cb_inc_total_mod.month as [month], q_cb_inc_total_mod.rep_month, q_cb_inc_total_mod.key_r_pc_l6
from q_cb_inc_total_mod left join q_monthly_curr_rates_mod_crosstab on q_cb_inc_total_mod.month = q_monthly_curr_rates_mod_crosstab.month
where (((q_cb_inc_total_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by q_cb_inc_total_mod.pc, q_cb_inc_total_mod.l_1, q_cb_inc_total_mod.l_2, q_cb_inc_total_mod.l_3, q_cb_inc_total_mod.l_4, q_cb_inc_total_mod.l_5, q_cb_inc_total_mod.l_6;

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_mod_mt
select q_cb_inc_usd_mod.rep_month, q_cb_inc_usd_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_usd_mod.month, q_cb_inc_usd_mod.usd_income, q_cb_inc_usd_mod.up_curr_conv, q_cb_inc_usd_mod.l_1, q_cb_inc_usd_mod.l_2, q_cb_inc_usd_mod.l_3, q_cb_inc_usd_mod.l_4, q_cb_inc_usd_mod.l_5, q_cb_inc_usd_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_usd_mod.key_r_pc_l6 into t_cb_inc_usd_mod_st
from (q_cb_inc_usd_mod left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_inc_usd_mod.l_1 = c3_code.c_l1) and (q_cb_inc_usd_mod.l_2 = c3_code.c_l2) and (q_cb_inc_usd_mod.l_3 = c3_code.c_l3)) left join c6_code on (q_cb_inc_usd_mod.l_1 = c6_code.c_l1) and (q_cb_inc_usd_mod.l_2 = c6_code.c_l2) and (q_cb_inc_usd_mod.l_3 = c6_code.c_l3) and (q_cb_inc_usd_mod.l_4 = c6_code.c_l4) and (q_cb_inc_usd_mod.l_5 = c6_code.c_l5) and (q_cb_inc_usd_mod.l_6 = c6_code.c_l6)
group by q_cb_inc_usd_mod.rep_month, q_cb_inc_usd_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_usd_mod.month, q_cb_inc_usd_mod.usd_income, q_cb_inc_usd_mod.up_curr_conv, q_cb_inc_usd_mod.l_1, q_cb_inc_usd_mod.l_2, q_cb_inc_usd_mod.l_3, q_cb_inc_usd_mod.l_4, q_cb_inc_usd_mod.l_5, q_cb_inc_usd_mod.l_6, c6_code.desc_tr_l6, q_cb_inc_usd_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_mt
select q_cb_inc_usd.rep_month, q_cb_inc_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_usd.month, sum(q_cb_inc_usd.usd_income) as usd_income, q_cb_inc_usd.up_curr_conv, q_cb_inc_usd.l_1, q_cb_inc_usd.l_2, q_cb_inc_usd.l_3, q_cb_inc_usd.l_4, q_cb_inc_usd.l_5, q_cb_inc_usd.l_6, c6_code.desc_tr_l6, q_cb_inc_usd.key_r_pc_l6 into t_cb_inc_usd_st
from (q_cb_inc_usd left join (c2_code right join c3_code on (c2_code.[c_l2] = c3_code.[c_l2]) and (c2_code.[c_l1] = c3_code.[c_l1])) on (q_cb_inc_usd.l_1 = c3_code.c_l1) and (q_cb_inc_usd.l_2 = c3_code.c_l2) and (q_cb_inc_usd.l_3 = c3_code.c_l3)) left join c6_code on (q_cb_inc_usd.l_1 = c6_code.c_l1) and (q_cb_inc_usd.l_2 = c6_code.c_l2) and (q_cb_inc_usd.l_3 = c6_code.c_l3) and (q_cb_inc_usd.l_4 = c6_code.c_l4) and (q_cb_inc_usd.l_5 = c6_code.c_l5) and (q_cb_inc_usd.l_6 = c6_code.c_l6)
group by q_cb_inc_usd.rep_month, q_cb_inc_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_inc_usd.month, q_cb_inc_usd.up_curr_conv, q_cb_inc_usd.l_1, q_cb_inc_usd.l_2, q_cb_inc_usd.l_3, q_cb_inc_usd.l_4, q_cb_inc_usd.l_5, q_cb_inc_usd.l_6, c6_code.desc_tr_l6, q_cb_inc_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_with_dummy
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_income,
up_curr_conv,
key_r_pc_l6


	from 
		q_cb_inc_usd

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_usd_with_dummy_mod
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
usd_income,
up_curr_conv,
key_r_pc_l6

	from 
		q_cb_inc_usd_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full


where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_inc_with_dummy
select 
		*
	from 
		q_cb_inc_total

union all select 
		*
	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_inc_with_dummy_crosstab_mod
transform sum(q_cb_inc_with_dummy_mod.inc_total) as total_income
select q_cb_inc_with_dummy_mod.rep_month, q_cb_inc_with_dummy_mod.pc, q_cb_inc_with_dummy_mod.l_1, q_cb_inc_with_dummy_mod.l_2, q_cb_inc_with_dummy_mod.l_3, q_cb_inc_with_dummy_mod.l_4, q_cb_inc_with_dummy_mod.l_5, q_cb_inc_with_dummy_mod.l_6, q_cb_inc_with_dummy_mod.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")) as exc_try, iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_inc_with_dummy_mod
group by q_cb_inc_with_dummy_mod.rep_month, q_cb_inc_with_dummy_mod.pc, q_cb_inc_with_dummy_mod.l_1, q_cb_inc_with_dummy_mod.l_2, q_cb_inc_with_dummy_mod.l_3, q_cb_inc_with_dummy_mod.l_4, q_cb_inc_with_dummy_mod.l_5, q_cb_inc_with_dummy_mod.l_6, q_cb_inc_with_dummy_mod.currency, iif([currency]="eur","r_eur_try",iif([currency]="usd","r_usd_try","r_try_try")), iif([currency]="eur","r_eur_usd",iif([currency]="usd","r_usd_usd","r_try_usd")), iif([currency]="eur","r_eur_eur",iif([currency]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_inc_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_inc_with_dummy_mod
select 
		*
	from 
		q_cb_inc_total_mod

union all select 
		*
	from 
		q_bb_qty_dummy_full

where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_activem
select q_cb_qty_activem_works_monthly.rep_month, mon_curr_rates.r_eur_try, mon_curr_rates.r_eur_usd, mon_curr_rates.r_usd_eur, mon_curr_rates.r_usd_try, q_cb_qty_activem_works_monthly.exp_cb_mon
from q_cb_qty_activem_works_monthly left join mon_curr_rates on (q_cb_qty_activem_works_monthly.exp_cb_mon = mon_curr_rates.month) and (q_cb_qty_activem_works_monthly.rep_month = mon_curr_rates.rep_month)
group by q_cb_qty_activem_works_monthly.rep_month, mon_curr_rates.r_eur_try, mon_curr_rates.r_eur_usd, mon_curr_rates.r_usd_eur, mon_curr_rates.r_usd_try, q_cb_qty_activem_works_monthly.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_activem_mod
select q_cb_active_months_res_qty_mod.rep_month, q_cb_active_months_res_qty_mod.pc, q_cb_active_months_res_qty_mod.l_1, q_cb_active_months_res_qty_mod.l_2, q_cb_active_months_res_qty_mod.l_3, q_cb_active_months_res_qty_mod.l_4, q_cb_active_months_res_qty_mod.l_5, q_cb_active_months_res_qty_mod.l_6, q_cb_active_months_res_qty_mod.rs_l1, q_cb_active_months_res_qty_mod.rs_l2, q_cb_active_months_res_qty_mod.rs_l3, q_cb_active_months_res_qty_mod.rs_l4, q_cb_active_months_res_qty_mod.exp_cb_mon, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur, q_monthly_curr_rates_mod_crosstab.r_usd_try, r4_code.currency as rs_currency
from (q_cb_active_months_res_qty_mod left join q_monthly_curr_rates_mod_crosstab on q_cb_active_months_res_qty_mod.exp_cb_mon = q_monthly_curr_rates_mod_crosstab.month) left join r4_code on q_cb_active_months_res_qty_mod.key_r4_simple = r4_code.key_r4_simple
group by q_cb_active_months_res_qty_mod.rep_month, q_cb_active_months_res_qty_mod.pc, q_cb_active_months_res_qty_mod.l_1, q_cb_active_months_res_qty_mod.l_2, q_cb_active_months_res_qty_mod.l_3, q_cb_active_months_res_qty_mod.l_4, q_cb_active_months_res_qty_mod.l_5, q_cb_active_months_res_qty_mod.l_6, q_cb_active_months_res_qty_mod.rs_l1, q_cb_active_months_res_qty_mod.rs_l2, q_cb_active_months_res_qty_mod.rs_l3, q_cb_active_months_res_qty_mod.rs_l4, q_cb_active_months_res_qty_mod.exp_cb_mon, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur, q_monthly_curr_rates_mod_crosstab.r_usd_try, r4_code.currency;

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_inc
select q_cb_qty_activem_works_monthly.rep_month, q_cb_qty_activem_works_monthly.pc, q_cb_qty_activem_works_monthly.exp_cb_mon, [q_cb_monthly_curr_rates_activem].[r_eur_try]/[q_cb_curr_base_val].[r_eur_try]-1 as rt_eur_try, [q_cb_monthly_curr_rates_activem].[r_eur_usd]/[q_cb_curr_base_val].[r_eur_usd]-1 as rt_eur_usd, [q_cb_monthly_curr_rates_activem].[r_usd_try]/[q_cb_curr_base_val].[r_usd_try]-1 as rt_usd_try, [q_cb_monthly_curr_rates_activem].[r_usd_eur]/[q_cb_curr_base_val].[r_usd_eur]-1 as rt_usd_eur
from (q_cb_qty_activem_works_monthly left join q_cb_monthly_curr_rates_activem on (q_cb_qty_activem_works_monthly.exp_cb_mon = q_cb_monthly_curr_rates_activem.exp_cb_mon) and (q_cb_qty_activem_works_monthly.rep_month = q_cb_monthly_curr_rates_activem.rep_month)) left join q_cb_curr_base_val on q_cb_qty_activem_works_monthly.rep_month = q_cb_curr_base_val.rep_month
group by q_cb_qty_activem_works_monthly.rep_month, q_cb_qty_activem_works_monthly.pc, q_cb_qty_activem_works_monthly.exp_cb_mon, [q_cb_monthly_curr_rates_activem].[r_eur_try]/[q_cb_curr_base_val].[r_eur_try]-1, [q_cb_monthly_curr_rates_activem].[r_eur_usd]/[q_cb_curr_base_val].[r_eur_usd]-1, [q_cb_monthly_curr_rates_activem].[r_usd_try]/[q_cb_curr_base_val].[r_usd_try]-1, [q_cb_monthly_curr_rates_activem].[r_usd_eur]/[q_cb_curr_base_val].[r_usd_eur]-1;

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_inc_mod
select q_cb_qty_activem_works_monthly_mod.rep_month, q_cb_qty_activem_works_monthly_mod.pc, q_cb_qty_activem_works_monthly_mod.exp_cb_mon, [q_cb_monthly_curr_rates_activem_mod].[r_eur_try]/[q_cb_curr_base_val_mod].[r_eur_try]-1 as rt_eur_try, [q_cb_monthly_curr_rates_activem_mod].[r_eur_usd]/[q_cb_curr_base_val_mod].[r_eur_usd]-1 as rt_eur_usd, [q_cb_monthly_curr_rates_activem_mod].[r_usd_try]/[q_cb_curr_base_val_mod].[r_usd_try]-1 as rt_usd_try, [q_cb_monthly_curr_rates_activem_mod].[r_usd_eur]/[q_cb_curr_base_val_mod].[r_usd_eur]-1 as rt_usd_eur
from (q_cb_qty_activem_works_monthly_mod left join q_cb_monthly_curr_rates_activem_mod on (q_cb_qty_activem_works_monthly_mod.rep_month = q_cb_monthly_curr_rates_activem_mod.rep_month) and (q_cb_qty_activem_works_monthly_mod.exp_cb_mon = q_cb_monthly_curr_rates_activem_mod.exp_cb_mon)) left join q_cb_curr_base_val_mod on q_cb_qty_activem_works_monthly_mod.rep_month = q_cb_curr_base_val_mod.rep_month
group by q_cb_qty_activem_works_monthly_mod.rep_month, q_cb_qty_activem_works_monthly_mod.pc, q_cb_qty_activem_works_monthly_mod.exp_cb_mon, [q_cb_monthly_curr_rates_activem_mod].[r_eur_try]/[q_cb_curr_base_val_mod].[r_eur_try]-1, [q_cb_monthly_curr_rates_activem_mod].[r_eur_usd]/[q_cb_curr_base_val_mod].[r_eur_usd]-1, [q_cb_monthly_curr_rates_activem_mod].[r_usd_try]/[q_cb_curr_base_val_mod].[r_usd_try]-1, [q_cb_monthly_curr_rates_activem_mod].[r_usd_eur]/[q_cb_curr_base_val_mod].[r_usd_eur]-1;

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_lastm_mod
select q_monthly_curr_rates_mod_crosstab.month, q_monthly_curr_rates_mod_crosstab.r_eur_try, q_monthly_curr_rates_mod_crosstab.r_usd_try, q_monthly_curr_rates_mod_crosstab.r_eur_usd, q_monthly_curr_rates_mod_crosstab.r_usd_eur
from q_monthly_curr_rates_mod_crosstab
where (((q_monthly_curr_rates_mod_crosstab.month)=dlookup("[last_month]","[q_rep_month_max]")));

----------------------------------------------------------------------------------------------------
q_cb_monthly_curr_rates_lastm_mod_mt
select q_cb_monthly_curr_rates_lastm_mod.month, q_cb_monthly_curr_rates_lastm_mod.r_eur_try, q_cb_monthly_curr_rates_lastm_mod.r_usd_try, q_cb_monthly_curr_rates_lastm_mod.r_eur_usd, q_cb_monthly_curr_rates_lastm_mod.r_usd_eur into t_cb_monthly_curr_rates_lastm_mod_st
from q_cb_monthly_curr_rates_lastm_mod;

----------------------------------------------------------------------------------------------------
q_cb_pr_wbs
select t_cb_inc_total_st.rep_month
	,t_cb_inc_total_st.pc
	,t_cb_inc_total_st.l_1
	,t_cb_inc_total_st.l_2
	,t_cb_inc_total_st.l_3
	,t_cb_inc_total_st.l_4
	,t_cb_inc_total_st.l_5
	,t_cb_inc_total_st.l_6
	,t_cb_inc_total_st.currency
	,t_cb_inc_total_st.inc_base_mon as [month] 
	,t_cb_inc_total_st.key_r_pc_l6
from t_cb_inc_total_st 
group by t_cb_inc_total_st.rep_month
	,t_cb_inc_total_st.pc
	,t_cb_inc_total_st.l_1
	,t_cb_inc_total_st.l_2
	,t_cb_inc_total_st.l_3
	,t_cb_inc_total_st.l_4
	,t_cb_inc_total_st.l_5
	,t_cb_inc_total_st.l_6
	,t_cb_inc_total_st.currency
	,t_cb_inc_total_st.inc_base_mon 
	,t_cb_inc_total_st.key_r_pc_l6
having (((sum(t_cb_inc_total_st.[inc_total]))<>0)) 
union select t_q_cb_exp.rep_month
	,t_q_cb_exp.pc
	,t_q_cb_exp.l_1
	,t_q_cb_exp.l_2
	,t_q_cb_exp.l_3
	,t_q_cb_exp.l_4
	,t_q_cb_exp.l_5
	,t_q_cb_exp.l_6
	,t_q_cb_exp.up_curr
	,t_q_cb_exp.month as [month] 
	,t_q_cb_exp.key_r_pc_l6
from t_q_cb_exp 
group by t_q_cb_exp.rep_month
	,t_q_cb_exp.pc
	,t_q_cb_exp.l_1
	,t_q_cb_exp.l_2
	,t_q_cb_exp.l_3
	,t_q_cb_exp.l_4
	,t_q_cb_exp.l_5
	,t_q_cb_exp.l_6
	,t_q_cb_exp.up_curr
	,t_q_cb_exp.month 
	,t_q_cb_exp.key_r_pc_l6	
having (((sum(t_q_cb_exp.[total_expense]))<>0));

----------------------------------------------------------------------------------------------------
q_cb_pr_wbs_mod
select t_cb_inc_total_mod_st.rep_month
	,t_cb_inc_total_mod_st.pc
	,t_cb_inc_total_mod_st.l_1
	,t_cb_inc_total_mod_st.l_2
	,t_cb_inc_total_mod_st.l_3
	,t_cb_inc_total_mod_st.l_4
	,t_cb_inc_total_mod_st.l_5
	,t_cb_inc_total_mod_st.l_6
	,t_cb_inc_total_mod_st.currency
	,t_cb_inc_total_mod_st.month as [month] 
	,t_cb_inc_total_mod_st.key_r_pc_l6
from t_cb_inc_total_mod_st 
group by t_cb_inc_total_mod_st.rep_month
	,t_cb_inc_total_mod_st.pc
	,t_cb_inc_total_mod_st.l_1
	,t_cb_inc_total_mod_st.l_2
	,t_cb_inc_total_mod_st.l_3
	,t_cb_inc_total_mod_st.l_4
	,t_cb_inc_total_mod_st.l_5
	,t_cb_inc_total_mod_st.l_6
	,t_cb_inc_total_mod_st.currency
	,t_cb_inc_total_mod_st.month 
	,t_cb_inc_total_mod_st.key_r_pc_l6
having (((sum(t_cb_inc_total_mod_st.[inc_total]))<>0)) 
union select t_q_cb_exp_mod.rep_month
	,t_q_cb_exp_mod.p01_code
	,t_q_cb_exp_mod.l_1
	,t_q_cb_exp_mod.l_2
	,t_q_cb_exp_mod.l_3
	,t_q_cb_exp_mod.l_4
	,t_q_cb_exp_mod.l_5
	,t_q_cb_exp_mod.l_6
	,t_q_cb_exp_mod.up_curr
	,t_q_cb_exp_mod.month as [month] 
	,t_q_cb_exp_mod.key_r_pc_l6
from t_q_cb_exp_mod 
group by t_q_cb_exp_mod.rep_month
	,t_q_cb_exp_mod.p01_code
	,t_q_cb_exp_mod.l_1
	,t_q_cb_exp_mod.l_2
	,t_q_cb_exp_mod.l_3
	,t_q_cb_exp_mod.l_4
	,t_q_cb_exp_mod.l_5
	,t_q_cb_exp_mod.l_6
	,t_q_cb_exp_mod.up_curr
	,t_q_cb_exp_mod.month 
	,t_q_cb_exp_mod.key_r_pc_l6	
having (((sum(t_q_cb_exp_mod.[total_expense]))<>0));

----------------------------------------------------------------------------------------------------
q_cb_profit
select q_cb_pr_wbs.rep_month, q_cb_pr_wbs.pc, q_cb_pr_wbs.l_1, q_cb_pr_wbs.l_2, q_cb_pr_wbs.l_3, q_cb_pr_wbs.l_4, q_cb_pr_wbs.l_5, q_cb_pr_wbs.l_6, q_cb_pr_wbs.currency, q_cb_pr_wbs.month, iif([inc_total] is null,0,[inc_total]) as income, iif([total_expense] is null,0,[total_expense]) as expense, [income]-[expense] as profit, q_cb_pr_wbs.key_r_pc_l6
from (q_cb_pr_wbs left join t_cb_inc_total_st on (q_cb_pr_wbs.key_r_pc_l6 = t_cb_inc_total_st.key_r_pc_l6) and (q_cb_pr_wbs.month = t_cb_inc_total_st.inc_base_mon) and (q_cb_pr_wbs.currency = t_cb_inc_total_st.currency)) left join t_q_cb_exp on (q_cb_pr_wbs.key_r_pc_l6 = t_q_cb_exp.key_r_pc_l6) and (q_cb_pr_wbs.month = t_q_cb_exp.month) and (q_cb_pr_wbs.currency = t_q_cb_exp.up_curr)
order by q_cb_pr_wbs.rep_month, q_cb_pr_wbs.pc, q_cb_pr_wbs.l_1, q_cb_pr_wbs.l_2, q_cb_pr_wbs.l_3, q_cb_pr_wbs.l_4, q_cb_pr_wbs.l_5, q_cb_pr_wbs.l_6, q_cb_pr_wbs.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_eur_with_dummy_crosstab
transform sum(q_cb_profit_eur_with_dummy.profit) as profit
select q_cb_profit_eur_with_dummy.rep_month, q_cb_profit_eur_with_dummy.pc, q_cb_profit_eur_with_dummy.l_1, q_cb_profit_eur_with_dummy.l_2, q_cb_profit_eur_with_dummy.l_3, q_cb_profit_eur_with_dummy.l_4, q_cb_profit_eur_with_dummy.l_5, q_cb_profit_eur_with_dummy.l_6, q_cb_profit_eur_with_dummy.curr
from q_cb_profit_eur_with_dummy
group by q_cb_profit_eur_with_dummy.rep_month, q_cb_profit_eur_with_dummy.pc, q_cb_profit_eur_with_dummy.l_1, q_cb_profit_eur_with_dummy.l_2, q_cb_profit_eur_with_dummy.l_3, q_cb_profit_eur_with_dummy.l_4, q_cb_profit_eur_with_dummy.l_5, q_cb_profit_eur_with_dummy.l_6, q_cb_profit_eur_with_dummy.curr
order by q_cb_profit_eur_with_dummy.rep_month, q_cb_profit_eur_with_dummy.pc, q_cb_profit_eur_with_dummy.l_1, q_cb_profit_eur_with_dummy.l_2, q_cb_profit_eur_with_dummy.l_3, q_cb_profit_eur_with_dummy.l_4, q_cb_profit_eur_with_dummy.l_5, q_cb_profit_eur_with_dummy.l_6
pivot q_cb_profit_eur_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_eur_with_dummy_crosstab_mod
transform sum(q_cb_profit_eur_with_dummy_mod.profit) as profit
select q_cb_profit_eur_with_dummy_mod.rep_month, q_cb_profit_eur_with_dummy_mod.pc, q_cb_profit_eur_with_dummy_mod.l_1, q_cb_profit_eur_with_dummy_mod.l_2, q_cb_profit_eur_with_dummy_mod.l_3, q_cb_profit_eur_with_dummy_mod.l_4, q_cb_profit_eur_with_dummy_mod.l_5, q_cb_profit_eur_with_dummy_mod.l_6, q_cb_profit_eur_with_dummy_mod.curr
from q_cb_profit_eur_with_dummy_mod
group by q_cb_profit_eur_with_dummy_mod.rep_month, q_cb_profit_eur_with_dummy_mod.pc, q_cb_profit_eur_with_dummy_mod.l_1, q_cb_profit_eur_with_dummy_mod.l_2, q_cb_profit_eur_with_dummy_mod.l_3, q_cb_profit_eur_with_dummy_mod.l_4, q_cb_profit_eur_with_dummy_mod.l_5, q_cb_profit_eur_with_dummy_mod.l_6, q_cb_profit_eur_with_dummy_mod.curr
order by q_cb_profit_eur_with_dummy_mod.rep_month, q_cb_profit_eur_with_dummy_mod.pc, q_cb_profit_eur_with_dummy_mod.l_1, q_cb_profit_eur_with_dummy_mod.l_2, q_cb_profit_eur_with_dummy_mod.l_3, q_cb_profit_eur_with_dummy_mod.l_4, q_cb_profit_eur_with_dummy_mod.l_5, q_cb_profit_eur_with_dummy_mod.l_6
pivot q_cb_profit_eur_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_try_with_dummy_crosstab
transform sum(q_cb_profit_try_with_dummy.profit) as profit
select q_cb_profit_try_with_dummy.rep_month, q_cb_profit_try_with_dummy.pc, q_cb_profit_try_with_dummy.l_1, q_cb_profit_try_with_dummy.l_2, q_cb_profit_try_with_dummy.l_3, q_cb_profit_try_with_dummy.l_4, q_cb_profit_try_with_dummy.l_5, q_cb_profit_try_with_dummy.l_6, q_cb_profit_try_with_dummy.curr
from q_cb_profit_try_with_dummy
group by q_cb_profit_try_with_dummy.rep_month, q_cb_profit_try_with_dummy.pc, q_cb_profit_try_with_dummy.l_1, q_cb_profit_try_with_dummy.l_2, q_cb_profit_try_with_dummy.l_3, q_cb_profit_try_with_dummy.l_4, q_cb_profit_try_with_dummy.l_5, q_cb_profit_try_with_dummy.l_6, q_cb_profit_try_with_dummy.curr
order by q_cb_profit_try_with_dummy.rep_month, q_cb_profit_try_with_dummy.pc, q_cb_profit_try_with_dummy.l_1, q_cb_profit_try_with_dummy.l_2, q_cb_profit_try_with_dummy.l_3, q_cb_profit_try_with_dummy.l_4, q_cb_profit_try_with_dummy.l_5, q_cb_profit_try_with_dummy.l_6
pivot q_cb_profit_try_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_try_with_dummy_crosstab_mod
transform sum(q_cb_profit_try_with_dummy_mod.profit) as profit
select q_cb_profit_try_with_dummy_mod.rep_month, q_cb_profit_try_with_dummy_mod.pc, q_cb_profit_try_with_dummy_mod.l_1, q_cb_profit_try_with_dummy_mod.l_2, q_cb_profit_try_with_dummy_mod.l_3, q_cb_profit_try_with_dummy_mod.l_4, q_cb_profit_try_with_dummy_mod.l_5, q_cb_profit_try_with_dummy_mod.l_6, q_cb_profit_try_with_dummy_mod.curr
from q_cb_profit_try_with_dummy_mod
group by q_cb_profit_try_with_dummy_mod.rep_month, q_cb_profit_try_with_dummy_mod.pc, q_cb_profit_try_with_dummy_mod.l_1, q_cb_profit_try_with_dummy_mod.l_2, q_cb_profit_try_with_dummy_mod.l_3, q_cb_profit_try_with_dummy_mod.l_4, q_cb_profit_try_with_dummy_mod.l_5, q_cb_profit_try_with_dummy_mod.l_6, q_cb_profit_try_with_dummy_mod.curr
order by q_cb_profit_try_with_dummy_mod.rep_month, q_cb_profit_try_with_dummy_mod.pc, q_cb_profit_try_with_dummy_mod.l_1, q_cb_profit_try_with_dummy_mod.l_2, q_cb_profit_try_with_dummy_mod.l_3, q_cb_profit_try_with_dummy_mod.l_4, q_cb_profit_try_with_dummy_mod.l_5, q_cb_profit_try_with_dummy_mod.l_6
pivot q_cb_profit_try_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_usd_with_dummy_crosstab
transform sum(q_cb_profit_usd_with_dummy.profit) as profit
select q_cb_profit_usd_with_dummy.rep_month, q_cb_profit_usd_with_dummy.pc, q_cb_profit_usd_with_dummy.l_1, q_cb_profit_usd_with_dummy.l_2, q_cb_profit_usd_with_dummy.l_3, q_cb_profit_usd_with_dummy.l_4, q_cb_profit_usd_with_dummy.l_5, q_cb_profit_usd_with_dummy.l_6, q_cb_profit_usd_with_dummy.curr
from q_cb_profit_usd_with_dummy
group by q_cb_profit_usd_with_dummy.rep_month, q_cb_profit_usd_with_dummy.pc, q_cb_profit_usd_with_dummy.l_1, q_cb_profit_usd_with_dummy.l_2, q_cb_profit_usd_with_dummy.l_3, q_cb_profit_usd_with_dummy.l_4, q_cb_profit_usd_with_dummy.l_5, q_cb_profit_usd_with_dummy.l_6, q_cb_profit_usd_with_dummy.curr
order by q_cb_profit_usd_with_dummy.rep_month, q_cb_profit_usd_with_dummy.pc, q_cb_profit_usd_with_dummy.l_1, q_cb_profit_usd_with_dummy.l_2, q_cb_profit_usd_with_dummy.l_3, q_cb_profit_usd_with_dummy.l_4, q_cb_profit_usd_with_dummy.l_5, q_cb_profit_usd_with_dummy.l_6
pivot q_cb_profit_usd_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_usd_with_dummy_crosstab_mod
transform sum(q_cb_profit_usd_with_dummy_mod.profit) as profit
select q_cb_profit_usd_with_dummy_mod.rep_month, q_cb_profit_usd_with_dummy_mod.pc, q_cb_profit_usd_with_dummy_mod.l_1, q_cb_profit_usd_with_dummy_mod.l_2, q_cb_profit_usd_with_dummy_mod.l_3, q_cb_profit_usd_with_dummy_mod.l_4, q_cb_profit_usd_with_dummy_mod.l_5, q_cb_profit_usd_with_dummy_mod.l_6, q_cb_profit_usd_with_dummy_mod.curr
from q_cb_profit_usd_with_dummy_mod
group by q_cb_profit_usd_with_dummy_mod.rep_month, q_cb_profit_usd_with_dummy_mod.pc, q_cb_profit_usd_with_dummy_mod.l_1, q_cb_profit_usd_with_dummy_mod.l_2, q_cb_profit_usd_with_dummy_mod.l_3, q_cb_profit_usd_with_dummy_mod.l_4, q_cb_profit_usd_with_dummy_mod.l_5, q_cb_profit_usd_with_dummy_mod.l_6, q_cb_profit_usd_with_dummy_mod.curr
order by q_cb_profit_usd_with_dummy_mod.rep_month, q_cb_profit_usd_with_dummy_mod.pc, q_cb_profit_usd_with_dummy_mod.l_1, q_cb_profit_usd_with_dummy_mod.l_2, q_cb_profit_usd_with_dummy_mod.l_3, q_cb_profit_usd_with_dummy_mod.l_4, q_cb_profit_usd_with_dummy_mod.l_5, q_cb_profit_usd_with_dummy_mod.l_6
pivot q_cb_profit_usd_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_dist_with_dummy_crosstab
transform sum(q_cb_profit_with_dummy.profit) as sumofprofit
select q_cb_profit_with_dummy.rep_month, q_cb_profit_with_dummy.pc, q_cb_profit_with_dummy.l_1, q_cb_profit_with_dummy.l_2, q_cb_profit_with_dummy.l_3, q_cb_profit_with_dummy.l_4, q_cb_profit_with_dummy.l_5, q_cb_profit_with_dummy.l_6, q_cb_profit_with_dummy.curr
from q_cb_profit_with_dummy
group by q_cb_profit_with_dummy.rep_month, q_cb_profit_with_dummy.pc, q_cb_profit_with_dummy.l_1, q_cb_profit_with_dummy.l_2, q_cb_profit_with_dummy.l_3, q_cb_profit_with_dummy.l_4, q_cb_profit_with_dummy.l_5, q_cb_profit_with_dummy.l_6, q_cb_profit_with_dummy.curr
order by q_cb_profit_with_dummy.rep_month, q_cb_profit_with_dummy.pc, q_cb_profit_with_dummy.l_1, q_cb_profit_with_dummy.l_2, q_cb_profit_with_dummy.l_3, q_cb_profit_with_dummy.l_4, q_cb_profit_with_dummy.l_5, q_cb_profit_with_dummy.l_6, q_cb_profit_with_dummy.month
pivot q_cb_profit_with_dummy.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur
select t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6, t_cb_profit_total_st.month, "eur" as [currency], iif([t_cb_profit_total_st].[currency]="usd",[t_cb_profit_total_st].[income]*[r_usd_eur],iif([t_cb_profit_total_st].[currency]="try",[t_cb_profit_total_st].[income]*[r_try_eur],[t_cb_profit_total_st].[income])) as income, iif([t_cb_profit_total_st].[currency]="usd",[t_cb_profit_total_st].[expense]*[r_usd_eur],iif([t_cb_profit_total_st].[currency]="try",[t_cb_profit_total_st].[expense]*[r_try_eur],[t_cb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_st.key_r_pc_l6
from t_cb_profit_total_st left join mon_curr_rates on (t_cb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_profit_total_st.month = mon_curr_rates.month)
order by t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_mod
select t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6, t_cb_profit_total_mod_st.month, "eur" as [currency], iif([t_cb_profit_total_mod_st].[currency]="usd",[t_cb_profit_total_mod_st].[income]*[r_usd_eur],iif([t_cb_profit_total_mod_st].[currency]="try",[t_cb_profit_total_mod_st].[income]*[r_try_eur],[t_cb_profit_total_mod_st].[income])) as income, iif([t_cb_profit_total_mod_st].[currency]="usd",[t_cb_profit_total_mod_st].[expense]*[r_usd_eur],iif([t_cb_profit_total_mod_st].[currency]="try",[t_cb_profit_total_mod_st].[expense]*[r_try_eur],[t_cb_profit_total_mod_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_mod_st.key_r_pc_l6
from t_cb_profit_total_mod_st left join q_monthly_curr_rates_mod_crosstab on t_cb_profit_total_mod_st.month = q_monthly_curr_rates_mod_crosstab.month
order by t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_mod_mt
select q_cb_profit_eur_mod.rep_month, q_cb_profit_eur_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, sum(q_cb_profit_eur_mod.expense) as expense, sum(q_cb_profit_eur_mod.income) as income, q_cb_profit_eur_mod.month, q_cb_profit_eur_mod.currency, q_cb_profit_eur_mod.l_1, q_cb_profit_eur_mod.l_2, q_cb_profit_eur_mod.l_3, q_cb_profit_eur_mod.l_4, q_cb_profit_eur_mod.l_5, q_cb_profit_eur_mod.l_6, sum(q_cb_profit_eur_mod.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_eur_mod.key_r_pc_l6 into t_cb_profit_eur_st
from ((q_cb_profit_eur_mod left join c3_code on (q_cb_profit_eur_mod.l_1 = c3_code.c_l1) and (q_cb_profit_eur_mod.l_2 = c3_code.c_l2) and (q_cb_profit_eur_mod.l_3 = c3_code.c_l3)) left join c2_code on (q_cb_profit_eur_mod.l_1 = c2_code.c_l1) and (q_cb_profit_eur_mod.l_2 = c2_code.c_l2)) left join c6_code on (q_cb_profit_eur_mod.l_1 = c6_code.c_l1) and (q_cb_profit_eur_mod.l_2 = c6_code.c_l2) and (q_cb_profit_eur_mod.l_3 = c6_code.c_l3) and (q_cb_profit_eur_mod.l_4 = c6_code.c_l4) and (q_cb_profit_eur_mod.l_5 = c6_code.c_l5) and (q_cb_profit_eur_mod.l_6 = c6_code.c_l6)
group by q_cb_profit_eur_mod.rep_month, q_cb_profit_eur_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_eur_mod.month, q_cb_profit_eur_mod.currency, q_cb_profit_eur_mod.l_1, q_cb_profit_eur_mod.l_2, q_cb_profit_eur_mod.l_3, q_cb_profit_eur_mod.l_4, q_cb_profit_eur_mod.l_5, q_cb_profit_eur_mod.l_6, c6_code.desc_tr_l6, q_cb_profit_eur_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_mt
select q_cb_profit_eur.rep_month, q_cb_profit_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, sum(q_cb_profit_eur.expense) as expense, sum(q_cb_profit_eur.income) as income, q_cb_profit_eur.month, q_cb_profit_eur.currency, q_cb_profit_eur.l_1, q_cb_profit_eur.l_2, q_cb_profit_eur.l_3, q_cb_profit_eur.l_4, q_cb_profit_eur.l_5, q_cb_profit_eur.l_6, sum(q_cb_profit_eur.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_eur.key_r_pc_l6 into t_cb_profit_eur_st
from ((q_cb_profit_eur left join c3_code on (q_cb_profit_eur.l_3 = c3_code.c_l3) and (q_cb_profit_eur.l_2 = c3_code.c_l2) and (q_cb_profit_eur.l_1 = c3_code.c_l1)) left join c2_code on (q_cb_profit_eur.l_2 = c2_code.c_l2) and (q_cb_profit_eur.l_1 = c2_code.c_l1)) left join c6_code on (q_cb_profit_eur.l_6 = c6_code.c_l6) and (q_cb_profit_eur.l_5 = c6_code.c_l5) and (q_cb_profit_eur.l_4 = c6_code.c_l4) and (q_cb_profit_eur.l_3 = c6_code.c_l3) and (q_cb_profit_eur.l_2 = c6_code.c_l2) and (q_cb_profit_eur.l_1 = c6_code.c_l1)
group by q_cb_profit_eur.rep_month, q_cb_profit_eur.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_eur.month, q_cb_profit_eur.currency, q_cb_profit_eur.l_1, q_cb_profit_eur.l_2, q_cb_profit_eur.l_3, q_cb_profit_eur.l_4, q_cb_profit_eur.l_5, q_cb_profit_eur.l_6, c6_code.desc_tr_l6, q_cb_profit_eur.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_eur

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_profit_eur_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_eur_mod

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full 


where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_profit_mod
select q_cb_pr_wbs_mod.rep_month, q_cb_pr_wbs_mod.pc, q_cb_pr_wbs_mod.l_1, q_cb_pr_wbs_mod.l_2, q_cb_pr_wbs_mod.l_3, q_cb_pr_wbs_mod.l_4, q_cb_pr_wbs_mod.l_5, q_cb_pr_wbs_mod.l_6, q_cb_pr_wbs_mod.currency, q_cb_pr_wbs_mod.month, iif([inc_total] is null,0,[inc_total]) as income, iif([total_expense] is null,0,[total_expense]) as expense, [income]-[expense] as profit, q_cb_pr_wbs_mod.key_r_pc_l6
from (q_cb_pr_wbs_mod left join t_cb_inc_total_mod_st on (q_cb_pr_wbs_mod.key_r_pc_l6 = t_cb_inc_total_mod_st.key_r_pc_l6) and (q_cb_pr_wbs_mod.month = t_cb_inc_total_mod_st.month) and (q_cb_pr_wbs_mod.currency = t_cb_inc_total_mod_st.currency)) left join t_q_cb_exp_mod on (q_cb_pr_wbs_mod.key_r_pc_l6 = t_q_cb_exp_mod.key_r_pc_l6) and (q_cb_pr_wbs_mod.month = t_q_cb_exp_mod.month) and (q_cb_pr_wbs_mod.currency = t_q_cb_exp_mod.up_curr)
order by q_cb_pr_wbs_mod.rep_month, q_cb_pr_wbs_mod.pc, q_cb_pr_wbs_mod.l_1, q_cb_pr_wbs_mod.l_2, q_cb_pr_wbs_mod.l_3, q_cb_pr_wbs_mod.l_4, q_cb_pr_wbs_mod.l_5, q_cb_pr_wbs_mod.l_6, q_cb_pr_wbs_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_total_mod_mt
select q_cb_profit_mod.rep_month, q_cb_profit_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_mod.month, sum(q_cb_profit_mod.expense) as expense, sum(q_cb_profit_mod.income) as income, q_cb_profit_mod.currency, q_cb_profit_mod.l_1, q_cb_profit_mod.l_2, q_cb_profit_mod.l_3, q_cb_profit_mod.l_4, q_cb_profit_mod.l_5, q_cb_profit_mod.l_6, sum(q_cb_profit_mod.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_mod.key_r_pc_l6 into t_cb_profit_total_mod_st
from ((q_cb_profit_mod left join c3_code on (q_cb_profit_mod.l_3 = c3_code.c_l3) and (q_cb_profit_mod.l_2 = c3_code.c_l2) and (q_cb_profit_mod.l_1 = c3_code.c_l1)) left join c2_code on (q_cb_profit_mod.l_2 = c2_code.c_l2) and (q_cb_profit_mod.l_1 = c2_code.c_l1)) left join c6_code on (q_cb_profit_mod.l_6 = c6_code.c_l6) and (q_cb_profit_mod.l_5 = c6_code.c_l5) and (q_cb_profit_mod.l_4 = c6_code.c_l4) and (q_cb_profit_mod.l_3 = c6_code.c_l3) and (q_cb_profit_mod.l_2 = c6_code.c_l2) and (q_cb_profit_mod.l_1 = c6_code.c_l1)
group by q_cb_profit_mod.rep_month, q_cb_profit_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_mod.month, q_cb_profit_mod.currency, q_cb_profit_mod.l_1, q_cb_profit_mod.l_2, q_cb_profit_mod.l_3, q_cb_profit_mod.l_4, q_cb_profit_mod.l_5, q_cb_profit_mod.l_6, c6_code.desc_tr_l6, q_cb_profit_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_total_mt
select q_cb_profit.rep_month, q_cb_profit.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit.month, q_cb_profit.expense, q_cb_profit.income, q_cb_profit.currency, q_cb_profit.l_1, q_cb_profit.l_2, q_cb_profit.l_3, q_cb_profit.l_4, q_cb_profit.l_5, q_cb_profit.l_6, q_cb_profit.profit, c6_code.desc_tr_l6, q_cb_profit.key_r_pc_l6 into t_cb_profit_total_st
from ((q_cb_profit left join c3_code on (q_cb_profit.l_1 = c3_code.c_l1) and (q_cb_profit.l_2 = c3_code.c_l2) and (q_cb_profit.l_3 = c3_code.c_l3)) left join c2_code on (q_cb_profit.l_1 = c2_code.c_l1) and (q_cb_profit.l_2 = c2_code.c_l2)) left join c6_code on (q_cb_profit.l_1 = c6_code.c_l1) and (q_cb_profit.l_2 = c6_code.c_l2) and (q_cb_profit.l_3 = c6_code.c_l3) and (q_cb_profit.l_4 = c6_code.c_l4) and (q_cb_profit.l_5 = c6_code.c_l5) and (q_cb_profit.l_6 = c6_code.c_l6)
group by q_cb_profit.rep_month, q_cb_profit.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit.month, q_cb_profit.expense, q_cb_profit.income, q_cb_profit.currency, q_cb_profit.l_1, q_cb_profit.l_2, q_cb_profit.l_3, q_cb_profit.l_4, q_cb_profit.l_5, q_cb_profit.l_6, q_cb_profit.profit, c6_code.desc_tr_l6, q_cb_profit.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try
select t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6, t_cb_profit_total_st.month, "try" as [currency], iif([t_cb_profit_total_st].[currency]="usd",[t_cb_profit_total_st].[income]*[r_usd_try],iif([t_cb_profit_total_st].[currency]="eur",[t_cb_profit_total_st].[income]*[r_eur_try],[t_cb_profit_total_st].[income])) as income, iif([t_cb_profit_total_st].[currency]="usd",[t_cb_profit_total_st].[expense]*[r_usd_try],iif([t_cb_profit_total_st].[currency]="eur",[t_cb_profit_total_st].[expense]*[r_eur_try],[t_cb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_st.key_r_pc_l6
from t_cb_profit_total_st left join mon_curr_rates on (t_cb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_profit_total_st.month = mon_curr_rates.month)
order by t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_mod
select t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6, t_cb_profit_total_mod_st.month, "try" as [currency], iif([t_cb_profit_total_mod_st].[currency]="usd",[t_cb_profit_total_mod_st].[income]*[r_usd_try],iif([t_cb_profit_total_mod_st].[currency]="eur",[t_cb_profit_total_mod_st].[income]*[r_eur_try],[t_cb_profit_total_mod_st].[income])) as income, iif([t_cb_profit_total_mod_st].[currency]="usd",[t_cb_profit_total_mod_st].[expense]*[r_usd_try],iif([t_cb_profit_total_mod_st].[currency]="eur",[t_cb_profit_total_mod_st].[expense]*[r_eur_try],[t_cb_profit_total_mod_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_mod_st.key_r_pc_l6
from t_cb_profit_total_mod_st left join q_monthly_curr_rates_mod_crosstab on t_cb_profit_total_mod_st.month = q_monthly_curr_rates_mod_crosstab.month
order by t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_mod_mt
select q_cb_profit_try_mod.rep_month, q_cb_profit_try_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_try_mod.month, sum(q_cb_profit_try_mod.expense) as expense, sum(q_cb_profit_try_mod.income) as income, q_cb_profit_try_mod.currency, q_cb_profit_try_mod.l_1, q_cb_profit_try_mod.l_2, q_cb_profit_try_mod.l_3, q_cb_profit_try_mod.l_4, q_cb_profit_try_mod.l_5, q_cb_profit_try_mod.l_6, sum(q_cb_profit_try_mod.profit) as profit, c6_code.desc_tr_l6 into t_cb_profit_mod_try_st
from ((q_cb_profit_try_mod left join c3_code on (q_cb_profit_try_mod.l_3 = c3_code.c_l3) and (q_cb_profit_try_mod.l_2 = c3_code.c_l2) and (q_cb_profit_try_mod.l_1 = c3_code.c_l1)) left join c2_code on (q_cb_profit_try_mod.l_2 = c2_code.c_l2) and (q_cb_profit_try_mod.l_1 = c2_code.c_l1)) left join c6_code on (q_cb_profit_try_mod.l_6 = c6_code.c_l6) and (q_cb_profit_try_mod.l_5 = c6_code.c_l5) and (q_cb_profit_try_mod.l_4 = c6_code.c_l4) and (q_cb_profit_try_mod.l_3 = c6_code.c_l3) and (q_cb_profit_try_mod.l_2 = c6_code.c_l2) and (q_cb_profit_try_mod.l_1 = c6_code.c_l1)
group by q_cb_profit_try_mod.rep_month, q_cb_profit_try_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_try_mod.month, q_cb_profit_try_mod.currency, q_cb_profit_try_mod.l_1, q_cb_profit_try_mod.l_2, q_cb_profit_try_mod.l_3, q_cb_profit_try_mod.l_4, q_cb_profit_try_mod.l_5, q_cb_profit_try_mod.l_6, c6_code.desc_tr_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_mt
select q_cb_profit_try.rep_month, q_cb_profit_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_try.month, sum(q_cb_profit_try.expense) as expense, sum(q_cb_profit_try.income) as income, q_cb_profit_try.currency, q_cb_profit_try.l_1, q_cb_profit_try.l_2, q_cb_profit_try.l_3, q_cb_profit_try.l_4, q_cb_profit_try.l_5, q_cb_profit_try.l_6, sum(q_cb_profit_try.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_try.key_r_pc_l6 into t_cb_profit_try_st
from ((q_cb_profit_try left join c3_code on (q_cb_profit_try.l_1 = c3_code.c_l1) and (q_cb_profit_try.l_2 = c3_code.c_l2) and (q_cb_profit_try.l_3 = c3_code.c_l3)) left join c2_code on (q_cb_profit_try.l_1 = c2_code.c_l1) and (q_cb_profit_try.l_2 = c2_code.c_l2)) left join c6_code on (q_cb_profit_try.l_1 = c6_code.c_l1) and (q_cb_profit_try.l_2 = c6_code.c_l2) and (q_cb_profit_try.l_3 = c6_code.c_l3) and (q_cb_profit_try.l_4 = c6_code.c_l4) and (q_cb_profit_try.l_5 = c6_code.c_l5) and (q_cb_profit_try.l_6 = c6_code.c_l6)
group by q_cb_profit_try.rep_month, q_cb_profit_try.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_try.month, q_cb_profit_try.currency, q_cb_profit_try.l_1, q_cb_profit_try.l_2, q_cb_profit_try.l_3, q_cb_profit_try.l_4, q_cb_profit_try.l_5, q_cb_profit_try.l_6, c6_code.desc_tr_l6, q_cb_profit_try.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_try

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_profit_try_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_try_mod

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full




where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_profit_usd
select t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6, t_cb_profit_total_st.month, "usd" as [currency], iif([t_cb_profit_total_st].[currency]="eur",[t_cb_profit_total_st].[income]*[r_eur_usd],iif([t_cb_profit_total_st].[currency]="try",[t_cb_profit_total_st].[income]*[r_try_usd],[t_cb_profit_total_st].[income])) as income, iif([t_cb_profit_total_st].[currency]="eur",[t_cb_profit_total_st].[expense]*[r_eur_usd],iif([t_cb_profit_total_st].[currency]="try",[t_cb_profit_total_st].[expense]*[r_try_usd],[t_cb_profit_total_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_st.key_r_pc_l6
from t_cb_profit_total_st left join mon_curr_rates on (t_cb_profit_total_st.rep_month = mon_curr_rates.rep_month) and (t_cb_profit_total_st.month = mon_curr_rates.month)
order by t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_cb_profit_total_st.l_1, t_cb_profit_total_st.l_2, t_cb_profit_total_st.l_3, t_cb_profit_total_st.l_4, t_cb_profit_total_st.l_5, t_cb_profit_total_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_mod
select t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6, t_cb_profit_total_mod_st.month, "usd" as [currency], iif([t_cb_profit_total_mod_st].[currency]="eur",[t_cb_profit_total_mod_st].[income]*[r_eur_usd],iif([t_cb_profit_total_mod_st].[currency]="try",[t_cb_profit_total_mod_st].[income]*[r_try_usd],[t_cb_profit_total_mod_st].[income])) as income, iif([t_cb_profit_total_mod_st].[currency]="eur",[t_cb_profit_total_mod_st].[expense]*[r_eur_usd],iif([t_cb_profit_total_mod_st].[currency]="try",[t_cb_profit_total_mod_st].[expense]*[r_try_usd],[t_cb_profit_total_mod_st].[expense])) as expense, [income]-[expense] as profit, t_cb_profit_total_mod_st.key_r_pc_l6
from t_cb_profit_total_mod_st left join q_monthly_curr_rates_mod_crosstab on t_cb_profit_total_mod_st.month = q_monthly_curr_rates_mod_crosstab.month
order by t_cb_profit_total_mod_st.rep_month, t_cb_profit_total_mod_st.pc, t_cb_profit_total_mod_st.l_1, t_cb_profit_total_mod_st.l_2, t_cb_profit_total_mod_st.l_3, t_cb_profit_total_mod_st.l_4, t_cb_profit_total_mod_st.l_5, t_cb_profit_total_mod_st.l_6;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_mod_mt
select q_cb_profit_usd_mod.rep_month, q_cb_profit_usd_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_usd_mod.month, sum(q_cb_profit_usd_mod.expense) as expense, sum(q_cb_profit_usd_mod.income) as income, q_cb_profit_usd_mod.currency, q_cb_profit_usd_mod.l_1, q_cb_profit_usd_mod.l_2, q_cb_profit_usd_mod.l_3, q_cb_profit_usd_mod.l_4, q_cb_profit_usd_mod.l_5, q_cb_profit_usd_mod.l_6, sum(q_cb_profit_usd_mod.profit) as profit, c6_code.desc_tr_l6 into t_cb_profit_usd_mod_st
from ((q_cb_profit_usd_mod left join c3_code on (q_cb_profit_usd_mod.l_3 = c3_code.c_l3) and (q_cb_profit_usd_mod.l_2 = c3_code.c_l2) and (q_cb_profit_usd_mod.l_1 = c3_code.c_l1)) left join c2_code on (q_cb_profit_usd_mod.l_2 = c2_code.c_l2) and (q_cb_profit_usd_mod.l_1 = c2_code.c_l1)) left join c6_code on (q_cb_profit_usd_mod.l_6 = c6_code.c_l6) and (q_cb_profit_usd_mod.l_5 = c6_code.c_l5) and (q_cb_profit_usd_mod.l_4 = c6_code.c_l4) and (q_cb_profit_usd_mod.l_3 = c6_code.c_l3) and (q_cb_profit_usd_mod.l_2 = c6_code.c_l2) and (q_cb_profit_usd_mod.l_1 = c6_code.c_l1)
group by q_cb_profit_usd_mod.rep_month, q_cb_profit_usd_mod.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_usd_mod.month, q_cb_profit_usd_mod.currency, q_cb_profit_usd_mod.l_1, q_cb_profit_usd_mod.l_2, q_cb_profit_usd_mod.l_3, q_cb_profit_usd_mod.l_4, q_cb_profit_usd_mod.l_5, q_cb_profit_usd_mod.l_6, c6_code.desc_tr_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_mt
select q_cb_profit_usd.rep_month, q_cb_profit_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6] as j_code, c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_usd.month, sum(q_cb_profit_usd.expense) as expense, sum(q_cb_profit_usd.income) as income, q_cb_profit_usd.currency, q_cb_profit_usd.l_1, q_cb_profit_usd.l_2, q_cb_profit_usd.l_3, q_cb_profit_usd.l_4, q_cb_profit_usd.l_5, q_cb_profit_usd.l_6, sum(q_cb_profit_usd.profit) as profit, c6_code.desc_tr_l6, q_cb_profit_usd.key_r_pc_l6 into t_cb_profit_usd_st
from ((q_cb_profit_usd left join c3_code on (q_cb_profit_usd.l_3 = c3_code.c_l3) and (q_cb_profit_usd.l_2 = c3_code.c_l2) and (q_cb_profit_usd.l_1 = c3_code.c_l1)) left join c2_code on (q_cb_profit_usd.l_2 = c2_code.c_l2) and (q_cb_profit_usd.l_1 = c2_code.c_l1)) left join c6_code on (q_cb_profit_usd.l_6 = c6_code.c_l6) and (q_cb_profit_usd.l_5 = c6_code.c_l5) and (q_cb_profit_usd.l_4 = c6_code.c_l4) and (q_cb_profit_usd.l_3 = c6_code.c_l3) and (q_cb_profit_usd.l_2 = c6_code.c_l2) and (q_cb_profit_usd.l_1 = c6_code.c_l1)
group by q_cb_profit_usd.rep_month, q_cb_profit_usd.pc, [l_1] & "." & [l_2] & "." & [l_3] & "." & [l_4] & "." & [l_5] & "." & [l_6], c2_code.desc_tr_l2, c3_code.desc_tr_l3, q_cb_profit_usd.month, q_cb_profit_usd.currency, q_cb_profit_usd.l_1, q_cb_profit_usd.l_2, q_cb_profit_usd.l_3, q_cb_profit_usd.l_4, q_cb_profit_usd.l_5, q_cb_profit_usd.l_6, c6_code.desc_tr_l6, q_cb_profit_usd.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_usd

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_profit_usd_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
month,
profit,
currency as curr

from 
q_cb_profit_usd_mod

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
g_month as month,
total_expense as profit,
up_curr as curr

	from 
		q_bb_qty_dummy_full




where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_profit_with_dummy
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency as curr,
month,
profit

from 
q_cb_profit

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr as curr,
g_month as month,
total_expense as profit

	from 
		q_bb_qty_dummy_full;

----------------------------------------------------------------------------------------------------
q_cb_profit_with_dummy_crosstab_mod
transform sum(q_cb_profit_with_dummy_mod.profit) as total_profit
select q_cb_profit_with_dummy_mod.rep_month, q_cb_profit_with_dummy_mod.pc, q_cb_profit_with_dummy_mod.l_1, q_cb_profit_with_dummy_mod.l_2, q_cb_profit_with_dummy_mod.l_3, q_cb_profit_with_dummy_mod.l_4, q_cb_profit_with_dummy_mod.l_5, q_cb_profit_with_dummy_mod.l_6, q_cb_profit_with_dummy_mod.curr, iif([curr]="eur","r_eur_try",iif([curr]="usd","r_usd_try","r_try_try")) as exc_try, iif([curr]="eur","r_eur_usd",iif([curr]="usd","r_usd_usd","r_try_usd")) as exc_usd, iif([curr]="eur","r_eur_eur",iif([curr]="usd","r_usd_eur","r_try_eur")) as exc_eur
from q_cb_profit_with_dummy_mod
group by q_cb_profit_with_dummy_mod.rep_month, q_cb_profit_with_dummy_mod.pc, q_cb_profit_with_dummy_mod.l_1, q_cb_profit_with_dummy_mod.l_2, q_cb_profit_with_dummy_mod.l_3, q_cb_profit_with_dummy_mod.l_4, q_cb_profit_with_dummy_mod.l_5, q_cb_profit_with_dummy_mod.l_6, q_cb_profit_with_dummy_mod.curr, iif([curr]="eur","r_eur_try",iif([curr]="usd","r_usd_try","r_try_try")), iif([curr]="eur","r_eur_usd",iif([curr]="usd","r_usd_usd","r_try_usd")), iif([curr]="eur","r_eur_eur",iif([curr]="usd","r_usd_eur","r_try_eur"))
pivot q_cb_profit_with_dummy_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_profit_with_dummy_mod
select 
rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency as curr,
month,
profit

from 
q_cb_profit_mod

union all select 
		rep_month,
p_code,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr as curr,
g_month as month,
total_expense as profit

	from 
		q_bb_qty_dummy_full

where (((rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_project_months
select t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_001_projects.r03_s_name as name
from t_cb_profit_total_st left join t_001_projects on t_cb_profit_total_st.pc = t_001_projects.p_code
group by t_cb_profit_total_st.rep_month, t_cb_profit_total_st.pc, t_001_projects.r03_s_name
order by t_cb_profit_total_st.rep_month desc;

----------------------------------------------------------------------------------------------------
q_cb_qty_activem_works
select t_cb_qty.key_r_pc_l6, t_cb_qty.exp_cb_mon
from t_cb_qty left join t_rep_month on t_cb_qty.rep_month = t_rep_month.rep_month
where (((t_cb_qty.exp_cb_mon)>t_rep_month.rep_month_date) and ((t_cb_qty.exp_cb_qty)<>0))
order by t_cb_qty.key_r_pc_l6, t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_qty_activem_works_mod
select t_cb_qty.key_r_pc_l6, t_cb_qty.exp_cb_mon
from t_cb_qty left join t_rep_month on t_cb_qty.rep_month = t_rep_month.rep_month
where (((t_cb_qty.exp_cb_mon)>t_rep_month.rep_month_date) and ((t_cb_qty.exp_cb_qty)<>0) and ((t_cb_qty.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by t_cb_qty.key_r_pc_l6, t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_qty_activem_works_monthly
select t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon
from t_cb_qty left join t_rep_month on t_cb_qty.rep_month = t_rep_month.rep_month
where (((t_cb_qty.exp_cb_mon)>t_rep_month.rep_month_date) and ((t_cb_qty.exp_cb_qty)<>0))
group by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon
order by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_qty_activem_works_monthly_mod
select t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon
from t_cb_qty left join t_rep_month on t_cb_qty.rep_month = t_rep_month.rep_month
where (((t_cb_qty.exp_cb_mon)>t_rep_month.rep_month_date) and ((t_cb_qty.exp_cb_qty)<>0))
group by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon
having (((t_cb_qty.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")))
order by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_qty_crosstab
transform sum(t_cb_qty.exp_cb_qty) as sumofexp_cb_qty
select t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.l_1, t_cb_qty.l_2, t_cb_qty.l_3, t_cb_qty.l_4, t_cb_qty.l_5, t_cb_qty.l_6
from t_cb_qty
group by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.l_1, t_cb_qty.l_2, t_cb_qty.l_3, t_cb_qty.l_4, t_cb_qty.l_5, t_cb_qty.l_6
order by t_cb_qty.rep_month, t_cb_qty.pc, t_cb_qty.l_1, t_cb_qty.l_2, t_cb_qty.l_3, t_cb_qty.l_4, t_cb_qty.l_5, t_cb_qty.l_6
pivot t_cb_qty.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_res_up_market_coeff
select q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.rs_l1 as r_1_code, q_cb_up_pre_coeff_activem_indexes.rs_l2 as r_2_code, q_cb_up_pre_coeff_activem_indexes.rs_l3 as r_3_code, q_cb_up_pre_coeff_activem_indexes.rs_l4 as r_4_code, (1+[w_ufe]*[bb_ufe])*(1+[w_tufe]*[bb_tufe])*(1+[w_inf_usd]*[bb_inf_usd])*(1+[w_inf_eur]*[bb_inf_eur])*(1+[w_metal]*[bb_metal])*(1+[w_petrol]*[bb_petrol])*(1+[w_cement]*[bb_cement])*(1+[w_electricity]*[bb_electricity]) as up_cost_coeff, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon as g_month, q_cb_up_pre_coeff_activem_indexes.up_cost, q_cb_up_pre_coeff_activem_indexes.an_rs_quantity, r4_code.currency, q_cb_up_pre_coeff_activem_indexes.key_r4_simple, q_cb_up_pre_coeff_activem_indexes.key_r4, q_cb_up_pre_coeff_activem_indexes.key_r_pc_l6, q_cb_up_pre_coeff_activem_indexes.key_full, [key_full] & "." & [q_cb_up_pre_coeff_activem_indexes].[rs_currency] & "." & [q_cb_up_pre_coeff_activem_indexes].[exp_cb_mon] as key_full_comb
from q_cb_up_pre_coeff_activem_indexes left join r4_code on q_cb_up_pre_coeff_activem_indexes.key_r4_simple = r4_code.key_r4_simple
group by q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.rs_l1, q_cb_up_pre_coeff_activem_indexes.rs_l2, q_cb_up_pre_coeff_activem_indexes.rs_l3, q_cb_up_pre_coeff_activem_indexes.rs_l4, (1+[w_ufe]*[bb_ufe])*(1+[w_tufe]*[bb_tufe])*(1+[w_inf_usd]*[bb_inf_usd])*(1+[w_inf_eur]*[bb_inf_eur])*(1+[w_metal]*[bb_metal])*(1+[w_petrol]*[bb_petrol])*(1+[w_cement]*[bb_cement])*(1+[w_electricity]*[bb_electricity]), q_cb_up_pre_coeff_activem_indexes.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes.up_cost, q_cb_up_pre_coeff_activem_indexes.an_rs_quantity, r4_code.currency, q_cb_up_pre_coeff_activem_indexes.key_r4_simple, q_cb_up_pre_coeff_activem_indexes.key_r4, q_cb_up_pre_coeff_activem_indexes.key_r_pc_l6, q_cb_up_pre_coeff_activem_indexes.key_full, [key_full] & "." & [q_cb_up_pre_coeff_activem_indexes].[rs_currency] & "." & [q_cb_up_pre_coeff_activem_indexes].[exp_cb_mon]
order by q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.rs_l1, q_cb_up_pre_coeff_activem_indexes.rs_l2, q_cb_up_pre_coeff_activem_indexes.rs_l3, q_cb_up_pre_coeff_activem_indexes.rs_l4, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_res_up_market_coeff_mod
select q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.rs_l1 as r_1_code, q_cb_up_pre_coeff_activem_indexes_mod.rs_l2 as r_2_code, q_cb_up_pre_coeff_activem_indexes_mod.rs_l3 as r_3_code, q_cb_up_pre_coeff_activem_indexes_mod.rs_l4 as r_4_code, (1+[w_ufe]*[bb_ufe])*(1+[w_tufe]*[bb_tufe])*(1+[w_inf_usd]*[bb_inf_usd])*(1+[w_inf_eur]*[bb_inf_eur])*(1+[w_metal]*[bb_metal])*(1+[w_petrol]*[bb_petrol])*(1+[w_cement]*[bb_cement])*(1+[w_electricity]*[bb_electricity]) as up_cost_coeff, q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon as g_month, q_cb_up_pre_coeff_activem_indexes_mod.up_cost, q_cb_up_pre_coeff_activem_indexes_mod.an_rs_quantity, r4_code.currency, q_cb_up_pre_coeff_activem_indexes_mod.key_r4_simple, q_cb_up_pre_coeff_activem_indexes_mod.key_r4, q_cb_up_pre_coeff_activem_indexes_mod.key_r_pc_l6, q_cb_up_pre_coeff_activem_indexes_mod.key_full, [key_full] & "." & [q_cb_up_pre_coeff_activem_indexes_mod].[rs_currency] & "." & [q_cb_up_pre_coeff_activem_indexes_mod].[exp_cb_mon] as key_full_comb
from q_cb_up_pre_coeff_activem_indexes_mod left join r4_code on q_cb_up_pre_coeff_activem_indexes_mod.key_r4_simple = r4_code.key_r4_simple
group by q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.rs_l1, q_cb_up_pre_coeff_activem_indexes_mod.rs_l2, q_cb_up_pre_coeff_activem_indexes_mod.rs_l3, q_cb_up_pre_coeff_activem_indexes_mod.rs_l4, (1+[w_ufe]*[bb_ufe])*(1+[w_tufe]*[bb_tufe])*(1+[w_inf_usd]*[bb_inf_usd])*(1+[w_inf_eur]*[bb_inf_eur])*(1+[w_metal]*[bb_metal])*(1+[w_petrol]*[bb_petrol])*(1+[w_cement]*[bb_cement])*(1+[w_electricity]*[bb_electricity]), q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes_mod.up_cost, q_cb_up_pre_coeff_activem_indexes_mod.an_rs_quantity, r4_code.currency, q_cb_up_pre_coeff_activem_indexes_mod.key_r4_simple, q_cb_up_pre_coeff_activem_indexes_mod.key_r4, q_cb_up_pre_coeff_activem_indexes_mod.key_r_pc_l6, q_cb_up_pre_coeff_activem_indexes_mod.key_full, [key_full] & "." & [q_cb_up_pre_coeff_activem_indexes_mod].[rs_currency] & "." & [q_cb_up_pre_coeff_activem_indexes_mod].[exp_cb_mon]
order by q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.rs_l1, q_cb_up_pre_coeff_activem_indexes_mod.rs_l2, q_cb_up_pre_coeff_activem_indexes_mod.rs_l3, q_cb_up_pre_coeff_activem_indexes_mod.rs_l4, q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_data
select q_budget_wbs_union.l_1, q_budget_wbs_union.l_2, q_budget_wbs_union.l_3, q_budget_wbs_union.l_4, q_budget_wbs_union.l_5, q_budget_wbs_union.l_6, q_budget_wbs_union.up_curr, sum(iif([q_second_budget_gt].[incomegt] is null,"0",[q_second_budget_gt].[incomegt])) as incomegt_second, sum(iif([q_second_budget_gt].[expensegt] is null,"0",[q_second_budget_gt].[expensegt])) as expensegt_second, sum(iif([q_second_budget_gt].[profitgt] is null,"0",[q_second_budget_gt].[profitgt])) as profitgt_second, sum(iif([q_first_budget_gt].[incomegt] is null,"0",[q_first_budget_gt].[incomegt])) as incomegt_first, sum(iif([q_first_budget_gt].[expensegt] is null,"0",[q_first_budget_gt].[expensegt])) as expensegt_first, sum(iif([q_first_budget_gt].[profitgt] is null,"0",[q_first_budget_gt].[profitgt])) as profitgt_first, [incomegt_second]-[incomegt_first] as incomediffgt, [expensegt_second]-[expensegt_first] as expensediff_gt, [profitgt_second]-[profitgt_first] as profitdiff_gt, sum(iif([q_second_budget_rt_grouped].[incomert] is null,"0",[q_second_budget_rt_grouped].[incomert])) as incomert_second, sum(iif([q_second_budget_rt_grouped].[expensert] is null,"0",[q_second_budget_rt_grouped].[expensert])) as expensert_second, sum(iif([q_second_budget_rt_grouped].[profitrt] is null,"0",[q_second_budget_rt_grouped].[profitrt])) as profitrt_second, sum(iif([q_first_budget_rt_grouped].[incomert] is null,"0",[q_first_budget_rt_grouped].[incomert])) as incomert_first, sum(iif([q_first_budget_rt_grouped].[expensert] is null,"0",[q_first_budget_rt_grouped].[expensert])) as expensert_first, sum(iif([q_first_budget_rt_grouped].[profitrt] is null,"0",[q_first_budget_rt_grouped].[profitrt])) as profitrt_first, [incomert_second]-[incomert_first] as incomediffrt, [expensert_second]-[expensert_first] as expensediff_rt, [profitrt_second]-[profitrt_first] as profitdiff_rt, [incomegt_second]-[incomert_second] as incomerem_second, [expensegt_second]-[expensert_second] as expenserem_second, [profitgt_second]-[profitrt_second] as profitrem_second, [incomegt_first]-[incomert_first] as incomerem_first, [expensegt_first]-[expensert_first] as expenserem_first, [profitgt_first]-[profitrt_first] as profitrem_first, [incomerem_second]-[incomerem_first] as incomerem_diff, [expenserem_second]-[expenserem_first] as expenserem_diff, [profitrem_second]-[profitrem_first] as profitrem_diff, q_budget_wbs_union.desc_tr_l3, q_budget_wbs_union.desc_tr_l2, q_budget_wbs_union.desc_tr_l6, c5_code.desc_tr_l5, c4_code.desc_tr_l4
from (((((q_budget_wbs_union left join q_second_budget_gt on (q_budget_wbs_union.up_curr = q_second_budget_gt.up_curr) and (q_budget_wbs_union.l_6 = q_second_budget_gt.l_6) and (q_budget_wbs_union.l_5 = q_second_budget_gt.l_5) and (q_budget_wbs_union.l_4 = q_second_budget_gt.l_4) and (q_budget_wbs_union.l_3 = q_second_budget_gt.l_3) and (q_budget_wbs_union.l_2 = q_second_budget_gt.l_2) and (q_budget_wbs_union.l_1 = q_second_budget_gt.l_1)) left join q_first_budget_gt on (q_budget_wbs_union.up_curr = q_first_budget_gt.up_curr) and (q_budget_wbs_union.l_6 = q_first_budget_gt.l_6) and (q_budget_wbs_union.l_5 = q_first_budget_gt.l_5) and (q_budget_wbs_union.l_4 = q_first_budget_gt.l_4) and (q_budget_wbs_union.l_3 = q_first_budget_gt.l_3) and (q_budget_wbs_union.l_2 = q_first_budget_gt.l_2) and (q_budget_wbs_union.l_1 = q_first_budget_gt.l_1)) left join q_second_budget_rt_grouped on (q_budget_wbs_union.up_curr = q_second_budget_rt_grouped.up_curr) and (q_budget_wbs_union.l_6 = q_second_budget_rt_grouped.l_6) and (q_budget_wbs_union.l_5 = q_second_budget_rt_grouped.l_5) and (q_budget_wbs_union.l_4 = q_second_budget_rt_grouped.l_4) and (q_budget_wbs_union.l_3 = q_second_budget_rt_grouped.l_3) and (q_budget_wbs_union.l_2 = q_second_budget_rt_grouped.l_2) and (q_budget_wbs_union.l_1 = q_second_budget_rt_grouped.l_1)) left join q_first_budget_rt_grouped on (q_budget_wbs_union.up_curr = q_first_budget_rt_grouped.up_curr) and (q_budget_wbs_union.l_6 = q_first_budget_rt_grouped.l_6) and (q_budget_wbs_union.l_5 = q_first_budget_rt_grouped.l_5) and (q_budget_wbs_union.l_4 = q_first_budget_rt_grouped.l_4) and (q_budget_wbs_union.l_3 = q_first_budget_rt_grouped.l_3) and (q_budget_wbs_union.l_2 = q_first_budget_rt_grouped.l_2) and (q_budget_wbs_union.l_1 = q_first_budget_rt_grouped.l_1)) left join c5_code on (q_budget_wbs_union.l_5 = c5_code.c_l5) and (q_budget_wbs_union.l_4 = c5_code.c_l4) and (q_budget_wbs_union.l_3 = c5_code.c_l3) and (q_budget_wbs_union.l_2 = c5_code.c_l2) and (q_budget_wbs_union.l_1 = c5_code.c_l1)) left join c4_code on (q_budget_wbs_union.l_4 = c4_code.c_l4) and (q_budget_wbs_union.l_3 = c4_code.c_l3) and (q_budget_wbs_union.l_2 = c4_code.c_l2) and (q_budget_wbs_union.l_1 = c4_code.c_l1)
group by q_budget_wbs_union.l_1, q_budget_wbs_union.l_2, q_budget_wbs_union.l_3, q_budget_wbs_union.l_4, q_budget_wbs_union.l_5, q_budget_wbs_union.l_6, q_budget_wbs_union.up_curr, q_budget_wbs_union.desc_tr_l3, q_budget_wbs_union.desc_tr_l2, q_budget_wbs_union.desc_tr_l6, c5_code.desc_tr_l5, c4_code.desc_tr_l4;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_mod_usd_total
select sum(t_q_cb_exp_usd_mod.usd_expense) as total_usd_expense, t_q_cb_exp_usd_mod.rep_month
from t_q_cb_exp_usd_mod
group by t_q_cb_exp_usd_mod.rep_month
having (((t_q_cb_exp_usd_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_report_data
select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
incomegt_second as second_data_gt,
incomert_second as second_data_rt,
incomegt_first as first_data_gt,
incomert_first as first_data_rt,
incomerem_second as second_data_rem,
incomerem_first as first_data_rem,
incomegt_second - incomegt_first as gt_rem,
incomert_second - incomert_first as rt_rem,
incomerem_second - incomerem_first as rem_rem,
"1 - gelİr" as budget_type,
desc_tr_l5,
desc_tr_l4

	from 
		q_cb_sum_cons_data

where (incomegt_second + incomert_second + incomegt_first + incomert_first) <> 0

union

select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
expensegt_second,
expensert_second,
expensegt_first,
expensert_first,
expenserem_second,
expenserem_first,
expensegt_second - expensegt_first,
expensert_second - expensert_first as rt_rem,
expenserem_second - expenserem_first as rem_rem,
"2 - gİder" as budget_type,
desc_tr_l5,
desc_tr_l4

	from 
		q_cb_sum_cons_data

where  (expensegt_second + expensert_second + expensegt_first + expensert_first) <>0

union select 
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
profitgt_second,
profitrt_second,
profitgt_first,
profitrt_first,
profitrem_second,
profitrem_first,
profitgt_second - profitgt_first,
profitrt_second - profitrt_first as rt_rem,
profitrem_second - profitrem_first as rem_rem,
"3 - brüt kar" as budget_type,
desc_tr_l5,
desc_tr_l4

	from 
		q_cb_sum_cons_data

where  (profitgt_second + profitrt_second + profitgt_first + profitrt_first) <>0;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_report_data_lvl_4
select q_cb_sum_cons_report_data.l_1, q_cb_sum_cons_report_data.l_2, q_cb_sum_cons_report_data.l_3, q_cb_sum_cons_report_data.l_4, q_cb_sum_cons_report_data.l_5, q_cb_sum_cons_report_data.l_6, q_cb_sum_cons_report_data.up_curr, q_cb_sum_cons_report_data.desc_tr_l3, q_cb_sum_cons_report_data.desc_tr_l4, q_cb_sum_cons_report_data.desc_tr_l5, q_cb_sum_cons_report_data.desc_tr_l6, sum(q_cb_sum_cons_report_data.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data.budget_type, sum(q_cb_sum_cons_report_data.gt_rem) as gt_rem
from q_cb_sum_cons_report_data
group by q_cb_sum_cons_report_data.l_1, q_cb_sum_cons_report_data.l_2, q_cb_sum_cons_report_data.l_3, q_cb_sum_cons_report_data.l_4, q_cb_sum_cons_report_data.l_5, q_cb_sum_cons_report_data.l_6, q_cb_sum_cons_report_data.up_curr, q_cb_sum_cons_report_data.desc_tr_l3, q_cb_sum_cons_report_data.desc_tr_l4, q_cb_sum_cons_report_data.desc_tr_l5, q_cb_sum_cons_report_data.desc_tr_l6, q_cb_sum_cons_report_data.budget_type
having (((q_cb_sum_cons_report_data.l_1)='d') and ((q_cb_sum_cons_report_data.l_2)='01') and ((q_cb_sum_cons_report_data.l_3)='01'))
order by sum(q_cb_sum_cons_report_data.gt_rem) desc;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_report_data_lvl_5
select q_cb_sum_cons_report_data_lvl_4.l_1, q_cb_sum_cons_report_data_lvl_4.l_2, q_cb_sum_cons_report_data_lvl_4.l_3, q_cb_sum_cons_report_data_lvl_4.l_4, q_cb_sum_cons_report_data_lvl_4.l_5, q_cb_sum_cons_report_data_lvl_4.l_6, q_cb_sum_cons_report_data_lvl_4.up_curr, q_cb_sum_cons_report_data_lvl_4.desc_tr_l3, q_cb_sum_cons_report_data_lvl_4.desc_tr_l4, q_cb_sum_cons_report_data_lvl_4.desc_tr_l5, q_cb_sum_cons_report_data_lvl_4.desc_tr_l6, sum(q_cb_sum_cons_report_data_lvl_4.second_data_gt) as second_data_gt, sum(q_cb_sum_cons_report_data_lvl_4.second_data_rt) as second_data_rt, sum(q_cb_sum_cons_report_data_lvl_4.first_data_gt) as first_data_gt, sum(q_cb_sum_cons_report_data_lvl_4.first_data_rt) as first_data_rt, sum(q_cb_sum_cons_report_data_lvl_4.second_data_rem) as second_data_rem, sum(q_cb_sum_cons_report_data_lvl_4.first_data_rem) as first_data_rem, q_cb_sum_cons_report_data_lvl_4.budget_type, sum(q_cb_sum_cons_report_data_lvl_4.gt_rem) as gt_rem
from q_cb_sum_cons_report_data_lvl_4
group by q_cb_sum_cons_report_data_lvl_4.l_1, q_cb_sum_cons_report_data_lvl_4.l_2, q_cb_sum_cons_report_data_lvl_4.l_3, q_cb_sum_cons_report_data_lvl_4.l_4, q_cb_sum_cons_report_data_lvl_4.l_5, q_cb_sum_cons_report_data_lvl_4.l_6, q_cb_sum_cons_report_data_lvl_4.up_curr, q_cb_sum_cons_report_data_lvl_4.desc_tr_l3, q_cb_sum_cons_report_data_lvl_4.desc_tr_l4, q_cb_sum_cons_report_data_lvl_4.desc_tr_l5, q_cb_sum_cons_report_data_lvl_4.desc_tr_l6, q_cb_sum_cons_report_data_lvl_4.budget_type
having (((q_cb_sum_cons_report_data_lvl_4.l_1)='d') and ((q_cb_sum_cons_report_data_lvl_4.l_2)='01') and ((q_cb_sum_cons_report_data_lvl_4.l_3)='01') and ((q_cb_sum_cons_report_data_lvl_4.l_4)='11'))
order by sum(q_cb_sum_cons_report_data_lvl_4.gt_rem) desc;

----------------------------------------------------------------------------------------------------
q_cb_sum_cons_usd_total
select sum(t_q_cb_exp_usd.usd_expense) as total_usd_expense, t_q_cb_exp_usd.rep_month
from t_q_cb_exp_usd
group by t_q_cb_exp_usd.rep_month
having (((t_q_cb_exp_usd.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_cb_sum_projects_data
select q_budget_wbs_union_projects.pc, q_budget_wbs_union_projects.l_1, q_budget_wbs_union_projects.l_2, q_budget_wbs_union_projects.l_3, q_budget_wbs_union_projects.l_4, q_budget_wbs_union_projects.l_5, q_budget_wbs_union_projects.l_6, q_budget_wbs_union_projects.up_curr, sum(iif([q_second_budget_gt].[incomegt] is null,"0",[q_second_budget_gt].[incomegt])) as incomegt_second, sum(iif([q_second_budget_gt].[expensegt] is null,"0",[q_second_budget_gt].[expensegt])) as expensegt_second, sum(iif([q_second_budget_gt].[profitgt] is null,"0",[q_second_budget_gt].[profitgt])) as profitgt_second, sum(iif([q_first_budget_gt].[incomegt] is null,"0",[q_first_budget_gt].[incomegt])) as incomegt_first, sum(iif([q_first_budget_gt].[expensegt] is null,"0",[q_first_budget_gt].[expensegt])) as expensegt_first, sum(iif([q_first_budget_gt].[profitgt] is null,"0",[q_first_budget_gt].[profitgt])) as profitgt_first, [incomegt_second]-[incomegt_first] as incomediffgt, [expensegt_second]-[expensegt_first] as expensediff_gt, [profitgt_second]-[profitgt_first] as profitdiff_gt, sum(iif([q_second_budget_rt_grouped_projects].[incomert] is null,"0",[q_second_budget_rt_grouped_projects].[incomert])) as incomert_second, sum(iif([q_second_budget_rt_grouped_projects].[expensert] is null,"0",[q_second_budget_rt_grouped_projects].[expensert])) as expensert_second, sum(iif([q_second_budget_rt_grouped_projects].[profitrt] is null,"0",[q_second_budget_rt_grouped_projects].[profitrt])) as profitrt_second, sum(iif([q_first_budget_rt_grouped_projects].[incomert] is null,"0",[q_first_budget_rt_grouped_projects].[incomert])) as incomert_first, sum(iif([q_first_budget_rt_grouped_projects].[expensert] is null,"0",[q_first_budget_rt_grouped_projects].[expensert])) as expensert_first, sum(iif([q_first_budget_rt_grouped_projects].[profitrt] is null,"0",[q_first_budget_rt_grouped_projects].[profitrt])) as profitrt_first, [incomert_second]-[incomert_first] as incomediffrt, [expensert_second]-[expensert_first] as expensediff_rt, [profitrt_second]-[profitrt_first] as profitdiff_rt, [incomegt_second]-[incomert_second] as incomerem_second, [expensegt_second]-[expensert_second] as expenserem_second, [profitgt_second]-[profitrt_second] as profitrem_second, [incomegt_first]-[incomert_first] as incomerem_first, [expensegt_first]-[expensert_first] as expenserem_first, [profitgt_first]-[profitrt_first] as profitrem_first, [incomerem_second]-[incomerem_first] as incomerem_diff, [expenserem_second]-[expenserem_first] as expenserem_diff, [profitrem_second]-[profitrem_first] as profitrem_diff, q_budget_wbs_union_projects.desc_tr_l3, q_budget_wbs_union_projects.desc_tr_l2, q_budget_wbs_union_projects.desc_tr_l6, c4_code.desc_tr_l4, c5_code.desc_tr_l5
from (((((q_budget_wbs_union_projects left join q_second_budget_gt on (q_budget_wbs_union_projects.up_curr = q_second_budget_gt.up_curr) and (q_budget_wbs_union_projects.l_6 = q_second_budget_gt.l_6) and (q_budget_wbs_union_projects.l_5 = q_second_budget_gt.l_5) and (q_budget_wbs_union_projects.l_4 = q_second_budget_gt.l_4) and (q_budget_wbs_union_projects.l_3 = q_second_budget_gt.l_3) and (q_budget_wbs_union_projects.l_2 = q_second_budget_gt.l_2) and (q_budget_wbs_union_projects.l_1 = q_second_budget_gt.l_1) and (q_budget_wbs_union_projects.pc = q_second_budget_gt.pc)) left join q_first_budget_gt on (q_budget_wbs_union_projects.up_curr = q_first_budget_gt.up_curr) and (q_budget_wbs_union_projects.l_6 = q_first_budget_gt.l_6) and (q_budget_wbs_union_projects.l_5 = q_first_budget_gt.l_5) and (q_budget_wbs_union_projects.l_4 = q_first_budget_gt.l_4) and (q_budget_wbs_union_projects.l_3 = q_first_budget_gt.l_3) and (q_budget_wbs_union_projects.l_2 = q_first_budget_gt.l_2) and (q_budget_wbs_union_projects.l_1 = q_first_budget_gt.l_1) and (q_budget_wbs_union_projects.pc = q_first_budget_gt.pc)) left join q_second_budget_rt_grouped_projects on (q_budget_wbs_union_projects.pc = q_second_budget_rt_grouped_projects.pc) and (q_budget_wbs_union_projects.up_curr = q_second_budget_rt_grouped_projects.up_curr) and (q_budget_wbs_union_projects.l_6 = q_second_budget_rt_grouped_projects.l_6) and (q_budget_wbs_union_projects.l_5 = q_second_budget_rt_grouped_projects.l_5) and (q_budget_wbs_union_projects.l_4 = q_second_budget_rt_grouped_projects.l_4) and (q_budget_wbs_union_projects.l_3 = q_second_budget_rt_grouped_projects.l_3) and (q_budget_wbs_union_projects.l_2 = q_second_budget_rt_grouped_projects.l_2) and (q_budget_wbs_union_projects.l_1 = q_second_budget_rt_grouped_projects.l_1)) left join q_first_budget_rt_grouped_projects on (q_budget_wbs_union_projects.pc = q_first_budget_rt_grouped_projects.pc) and (q_budget_wbs_union_projects.up_curr = q_first_budget_rt_grouped_projects.up_curr) and (q_budget_wbs_union_projects.l_6 = q_first_budget_rt_grouped_projects.l_6) and (q_budget_wbs_union_projects.l_5 = q_first_budget_rt_grouped_projects.l_5) and (q_budget_wbs_union_projects.l_4 = q_first_budget_rt_grouped_projects.l_4) and (q_budget_wbs_union_projects.l_3 = q_first_budget_rt_grouped_projects.l_3) and (q_budget_wbs_union_projects.l_2 = q_first_budget_rt_grouped_projects.l_2) and (q_budget_wbs_union_projects.l_1 = q_first_budget_rt_grouped_projects.l_1)) left join c4_code on (q_budget_wbs_union_projects.l_4 = c4_code.c_l4) and (q_budget_wbs_union_projects.l_3 = c4_code.c_l3) and (q_budget_wbs_union_projects.l_2 = c4_code.c_l2) and (q_budget_wbs_union_projects.l_1 = c4_code.c_l1)) left join c5_code on (q_budget_wbs_union_projects.l_5 = c5_code.c_l5) and (q_budget_wbs_union_projects.l_4 = c5_code.c_l4) and (q_budget_wbs_union_projects.l_3 = c5_code.c_l3) and (q_budget_wbs_union_projects.l_2 = c5_code.c_l2) and (q_budget_wbs_union_projects.l_1 = c5_code.c_l1)
group by q_budget_wbs_union_projects.pc, q_budget_wbs_union_projects.l_1, q_budget_wbs_union_projects.l_2, q_budget_wbs_union_projects.l_3, q_budget_wbs_union_projects.l_4, q_budget_wbs_union_projects.l_5, q_budget_wbs_union_projects.l_6, q_budget_wbs_union_projects.up_curr, q_budget_wbs_union_projects.desc_tr_l3, q_budget_wbs_union_projects.desc_tr_l2, q_budget_wbs_union_projects.desc_tr_l6, c4_code.desc_tr_l4, c5_code.desc_tr_l5;

----------------------------------------------------------------------------------------------------
q_cb_sum_projects_report_data
select 
pc,
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
incomegt_second as second_data_gt,
incomert_second as second_data_rt,
incomegt_first as first_data_gt,
incomert_first as first_data_rt,
incomerem_second as second_data_rem,
incomerem_first as first_data_rem,
incomegt_second - incomegt_first as gt_rem,
incomert_second - incomert_first as rt_rem,
incomerem_second - incomerem_first as rem_rem,
"1 - gelİr" as budget_type,
desc_tr_l4,
desc_tr_l5

	from 
		 q_cb_sum_projects_data

where (incomegt_second + incomert_second + incomegt_first + incomert_first) <> 0


union

select 
pc,
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
expensegt_second,
expensert_second,
expensegt_first,
expensert_first,
expenserem_second,
expenserem_first,
expensegt_second - expensegt_first,
expensert_second - expensert_first as rt_rem,
expenserem_second - expenserem_first as rem_rem,
"2 - gİder" as budget_type,
desc_tr_l4,
desc_tr_l5


	from 
		 q_cb_sum_projects_data


where  (expensegt_second + expensert_second + expensegt_first + expensert_first) <>0


union select 
pc,
		l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
up_curr,
desc_tr_l3,
desc_tr_l2,
desc_tr_l6,
profitgt_second,
profitrt_second,
profitgt_first,
profitrt_first,
profitrem_second,
profitrem_first,
profitgt_second - profitgt_first,
profitrt_second - profitrt_first as rt_rem,
profitrem_second - profitrem_first as rem_rem,
"3 - brüt kar" as budget_type,
desc_tr_l4,
desc_tr_l5


	from 
		 q_cb_sum_projects_data

where  (profitgt_second + profitrt_second + profitgt_first + profitrt_first) <>0;

----------------------------------------------------------------------------------------------------
q_cb_sum_projects_report_data_lvl_4
select q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l4, q_cb_sum_projects_report_data.desc_tr_l5, q_cb_sum_projects_report_data.desc_tr_l6, sum(q_cb_sum_projects_report_data.second_data_gt) as second_data_gt, sum(q_cb_sum_projects_report_data.second_data_rt) as second_data_rt, sum(q_cb_sum_projects_report_data.first_data_gt) as first_data_gt, sum(q_cb_sum_projects_report_data.first_data_rt) as first_data_rt, sum(q_cb_sum_projects_report_data.second_data_rem) as second_data_rem, sum(q_cb_sum_projects_report_data.first_data_rem) as first_data_rem, q_cb_sum_projects_report_data.budget_type, sum(q_cb_sum_projects_report_data.gt_rem) as gt_rem
from q_cb_sum_projects_report_data
group by q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l4, q_cb_sum_projects_report_data.desc_tr_l5, q_cb_sum_projects_report_data.desc_tr_l6, q_cb_sum_projects_report_data.budget_type
having (((q_cb_sum_projects_report_data.pc)='mbe') and ((q_cb_sum_projects_report_data.l_1)='d') and ((q_cb_sum_projects_report_data.l_2)='01') and ((q_cb_sum_projects_report_data.l_3)='01'))
order by sum(q_cb_sum_projects_report_data.gt_rem) desc;

----------------------------------------------------------------------------------------------------
q_cb_sum_projects_report_data_lvl_5
select q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l4, q_cb_sum_projects_report_data.desc_tr_l5, q_cb_sum_projects_report_data.desc_tr_l6, sum(q_cb_sum_projects_report_data.second_data_gt) as second_data_gt, sum(q_cb_sum_projects_report_data.second_data_rt) as second_data_rt, sum(q_cb_sum_projects_report_data.first_data_gt) as first_data_gt, sum(q_cb_sum_projects_report_data.first_data_rt) as first_data_rt, sum(q_cb_sum_projects_report_data.second_data_rem) as second_data_rem, sum(q_cb_sum_projects_report_data.first_data_rem) as first_data_rem, q_cb_sum_projects_report_data.budget_type, sum(q_cb_sum_projects_report_data.gt_rem) as gt_rem
from q_cb_sum_projects_report_data
group by q_cb_sum_projects_report_data.pc, q_cb_sum_projects_report_data.l_1, q_cb_sum_projects_report_data.l_2, q_cb_sum_projects_report_data.l_3, q_cb_sum_projects_report_data.l_4, q_cb_sum_projects_report_data.l_5, q_cb_sum_projects_report_data.l_6, q_cb_sum_projects_report_data.up_curr, q_cb_sum_projects_report_data.desc_tr_l3, q_cb_sum_projects_report_data.desc_tr_l4, q_cb_sum_projects_report_data.desc_tr_l5, q_cb_sum_projects_report_data.desc_tr_l6, q_cb_sum_projects_report_data.budget_type
having (((q_cb_sum_projects_report_data.pc)='mbe') and ((q_cb_sum_projects_report_data.l_1)='d') and ((q_cb_sum_projects_report_data.l_2)='01') and ((q_cb_sum_projects_report_data.l_3)='01') and ((q_cb_sum_projects_report_data.l_4)='11'))
order by sum(q_cb_sum_projects_report_data.gt_rem) desc;

----------------------------------------------------------------------------------------------------
q_cb_summary_report_currmonth_data_group
select q_cb_allprojects_report_currmonth_data.rep_month, q_cb_allprojects_report_currmonth_data.pc, q_cb_allprojects_report_currmonth_data.l_1, q_cb_allprojects_report_currmonth_data.l_2, q_cb_allprojects_report_currmonth_data.l_3, q_cb_allprojects_report_currmonth_data.l_4, q_cb_allprojects_report_currmonth_data.l_5, q_cb_allprojects_report_currmonth_data.l_6, q_cb_allprojects_report_currmonth_data.desc_tr_l2, q_cb_allprojects_report_currmonth_data.desc_tr_l3, q_cb_allprojects_report_currmonth_data.desc_tr_l6, sum(q_cb_allprojects_report_currmonth_data.income) as income, sum(q_cb_allprojects_report_currmonth_data.expense) as expense, sum(q_cb_allprojects_report_currmonth_data.profit) as profit, q_cb_allprojects_report_currmonth_data.currency
from q_cb_allprojects_report_currmonth_data
group by q_cb_allprojects_report_currmonth_data.rep_month, q_cb_allprojects_report_currmonth_data.pc, q_cb_allprojects_report_currmonth_data.l_1, q_cb_allprojects_report_currmonth_data.l_2, q_cb_allprojects_report_currmonth_data.l_3, q_cb_allprojects_report_currmonth_data.l_4, q_cb_allprojects_report_currmonth_data.l_5, q_cb_allprojects_report_currmonth_data.l_6, q_cb_allprojects_report_currmonth_data.desc_tr_l2, q_cb_allprojects_report_currmonth_data.desc_tr_l3, q_cb_allprojects_report_currmonth_data.desc_tr_l6, q_cb_allprojects_report_currmonth_data.currency;

----------------------------------------------------------------------------------------------------
q_cb_summary_report_union
select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency
	from 
		q_cb_allprojects_report_currmonth_data

union select 
		rep_month,
pc,
l_1,
l_2,
l_3,
l_4,
l_5,
l_6,
currency

	from 
		q_cb_allprojects_report_endproject_data;

----------------------------------------------------------------------------------------------------
q_cb_unit_price
select q_cb_up_coeff.rep_month, q_cb_up_coeff.up_pr_code as p01_code, q_cb_up_coeff.l_1, q_cb_up_coeff.l_2, q_cb_up_coeff.l_3, q_cb_up_coeff.l_4, q_cb_up_coeff.l_5, q_cb_up_coeff.l_6, q_cb_up_coeff.g_month as [month], q_cb_up_coeff.g_month, q_cb_up_coeff.rs_currency as up_curr, sum([up_cost]*[an_rs_quantity]*[up_cost_coeff_all]) as unit_price_planned_coeff, q_cb_up_coeff.key_r_pc_l6
from q_cb_up_coeff
group by q_cb_up_coeff.rep_month, q_cb_up_coeff.up_pr_code, q_cb_up_coeff.l_1, q_cb_up_coeff.l_2, q_cb_up_coeff.l_3, q_cb_up_coeff.l_4, q_cb_up_coeff.l_5, q_cb_up_coeff.l_6, q_cb_up_coeff.g_month, q_cb_up_coeff.rs_currency, q_cb_up_coeff.key_r_pc_l6, q_cb_up_coeff.g_month
order by q_cb_up_coeff.rep_month, q_cb_up_coeff.up_pr_code, q_cb_up_coeff.l_1, q_cb_up_coeff.l_2, q_cb_up_coeff.l_3, q_cb_up_coeff.l_4, q_cb_up_coeff.l_5, q_cb_up_coeff.l_6, q_cb_up_coeff.g_month, q_cb_up_coeff.g_month;

----------------------------------------------------------------------------------------------------
q_cb_unit_price_crosstab
transform sum(q_cb_unit_price.unit_price_planned_coeff) as sumofunit_price_planned_coeff
select q_cb_unit_price.rep_month, q_cb_unit_price.l_1, q_cb_unit_price.l_2, q_cb_unit_price.l_3, q_cb_unit_price.l_4, q_cb_unit_price.l_5, q_cb_unit_price.l_6, q_cb_unit_price.up_curr, q_cb_unit_price.p01_code
from q_cb_unit_price
group by q_cb_unit_price.rep_month, q_cb_unit_price.l_1, q_cb_unit_price.l_2, q_cb_unit_price.l_3, q_cb_unit_price.l_4, q_cb_unit_price.l_5, q_cb_unit_price.l_6, q_cb_unit_price.up_curr, q_cb_unit_price.p01_code
pivot q_cb_unit_price.month;

----------------------------------------------------------------------------------------------------
q_cb_unit_price_crosstab_mod
transform sum(q_cb_unit_price_mod.unit_price_planned_coeff) as sumofunit_price_planned_coeff
select q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.p01_code
from q_cb_unit_price_mod
group by q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.p01_code
pivot q_cb_unit_price_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_unit_price_diff
select q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.p01_code, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.month, q_cb_unit_price.unit_price_planned_coeff as up_orj, q_cb_unit_price_mod.unit_price_planned_coeff as up_mod, ([up_orj])-([up_mod]) as diff
from q_cb_unit_price_mod left join q_cb_unit_price on (q_cb_unit_price_mod.rep_month = q_cb_unit_price.rep_month) and (q_cb_unit_price_mod.p01_code = q_cb_unit_price.p01_code) and (q_cb_unit_price_mod.l_1 = q_cb_unit_price.l_1) and (q_cb_unit_price_mod.l_2 = q_cb_unit_price.l_2) and (q_cb_unit_price_mod.l_3 = q_cb_unit_price.l_3) and (q_cb_unit_price_mod.l_4 = q_cb_unit_price.l_4) and (q_cb_unit_price_mod.l_5 = q_cb_unit_price.l_5) and (q_cb_unit_price_mod.l_6 = q_cb_unit_price.l_6) and (q_cb_unit_price_mod.month = q_cb_unit_price.month) and (q_cb_unit_price_mod.up_curr = q_cb_unit_price.up_curr);

----------------------------------------------------------------------------------------------------
q_cb_unit_price_mod
select q_cb_up_coeff_mod.rep_month, q_cb_up_coeff_mod.up_pr_code as p01_code, q_cb_up_coeff_mod.l_1, q_cb_up_coeff_mod.l_2, q_cb_up_coeff_mod.l_3, q_cb_up_coeff_mod.l_4, q_cb_up_coeff_mod.l_5, q_cb_up_coeff_mod.l_6, q_cb_up_coeff_mod.g_month as [month], q_cb_up_coeff_mod.g_month, q_cb_up_coeff_mod.rs_currency as up_curr, sum([up_cost]*[an_rs_quantity]*[up_cost_coeff_all]) as unit_price_planned_coeff, q_cb_up_coeff_mod.key_r_pc_l6
from q_cb_up_coeff_mod
group by q_cb_up_coeff_mod.rep_month, q_cb_up_coeff_mod.up_pr_code, q_cb_up_coeff_mod.l_1, q_cb_up_coeff_mod.l_2, q_cb_up_coeff_mod.l_3, q_cb_up_coeff_mod.l_4, q_cb_up_coeff_mod.l_5, q_cb_up_coeff_mod.l_6, q_cb_up_coeff_mod.g_month, q_cb_up_coeff_mod.rs_currency, q_cb_up_coeff_mod.key_r_pc_l6, q_cb_up_coeff_mod.g_month
order by q_cb_up_coeff_mod.rep_month, q_cb_up_coeff_mod.up_pr_code, q_cb_up_coeff_mod.l_1, q_cb_up_coeff_mod.l_2, q_cb_up_coeff_mod.l_3, q_cb_up_coeff_mod.l_4, q_cb_up_coeff_mod.l_5, q_cb_up_coeff_mod.l_6, q_cb_up_coeff_mod.g_month, q_cb_up_coeff_mod.g_month;

----------------------------------------------------------------------------------------------------
q_cb_unit_price_pre
select q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc as p01_code, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon as [month], q_cb_up_pre_coeff_activem_indexes.exp_cb_mon as g_month, q_cb_up_pre_coeff_activem_indexes.rs_currency as up_curr, q_cb_up_pre_coeff_activem_indexes.key_r_pc_l6, iif([up_curr]="try",[up_cost]*[w_inf_usd]*(1+[rt_usd_try])*(1+[bb_inf_usd]),iif([currency]="eur",[up_cost]*[w_inf_usd]*(1+[rt_usd_eur])*(1+[bb_inf_usd]),[up_cost]*[w_inf_usd]*(1+[bb_inf_usd]))) as cost_exc_inf_usd, iif([up_curr]="try",[up_cost]*[w_inf_eur]*(1+[rt_eur_try])*(1+[bb_inf_eur]),iif([currency]="usd",[up_cost]*[w_inf_eur]*(1+[rt_eur_usd])*(1+[bb_inf_eur]),[up_cost]*[w_inf_eur]*(1+[bb_inf_eur]))) as cost_exc_inf_eur, [up_cost]*([w_ufe]*(1+[bb_ufe])+[w_tufe]*(1+[bb_tufe])+[w_metal]*(1+[bb_metal])+[w_petrol]*(1+[bb_petrol])+[w_cement]*(1+[bb_cement])+[w_electricity]*(1+[bb_electricity])) as cost_market, [cost_exc_inf_usd]+[cost_exc_inf_eur]+[cost_market] as up_cost_total, t_cb_analysis.an_rs_quantity
from (q_cb_up_pre_coeff_activem_indexes left join r4_code on q_cb_up_pre_coeff_activem_indexes.key_r4_simple = r4_code.key_r4_simple) left join t_cb_analysis on q_cb_up_pre_coeff_activem_indexes.key_full = t_cb_analysis.key_full;

----------------------------------------------------------------------------------------------------
q_cb_unit_price_pre_mod
select q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc as p01_code, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon as [month], q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon as g_month, q_cb_up_pre_coeff_activem_indexes_mod.rs_currency as up_curr, q_cb_up_pre_coeff_activem_indexes_mod.key_r_pc_l6, iif([up_curr]="try",[up_cost]*[w_inf_usd]*(1+[rt_usd_try])*(1+[bb_inf_usd]),iif([currency]="eur",[up_cost]*[w_inf_usd]*(1+[rt_usd_eur])*(1+[bb_inf_usd]),[up_cost]*[w_inf_usd]*(1+[bb_inf_usd]))) as cost_exc_inf_usd, iif([up_curr]="try",[up_cost]*[w_inf_eur]*(1+[rt_eur_try])*(1+[bb_inf_eur]),iif([currency]="usd",[up_cost]*[w_inf_eur]*(1+[rt_eur_usd])*(1+[bb_inf_eur]),[up_cost]*[w_inf_eur]*(1+[bb_inf_eur]))) as cost_exc_inf_eur, [up_cost]*([w_ufe]*(1+[bb_ufe])+[w_tufe]*(1+[bb_tufe])+[w_metal]*(1+[bb_metal])+[w_petrol]*(1+[bb_petrol])+[w_cement]*(1+[bb_cement])+[w_electricity]*(1+[bb_electricity])) as cost_market, [cost_exc_inf_usd]+[cost_exc_inf_eur]+[cost_market] as up_cost_total, t_pl_analysis.an_rs_quantity
from (q_cb_up_pre_coeff_activem_indexes_mod left join r4_code on q_cb_up_pre_coeff_activem_indexes_mod.key_r4_simple = r4_code.key_r4_simple) left join t_pl_analysis on q_cb_up_pre_coeff_activem_indexes_mod.key_full = t_pl_analysis.key_full;

----------------------------------------------------------------------------------------------------
q_cb_up_coeff
select q_cb_res_up_market_coeff.rep_month, q_cb_res_up_market_coeff.pc as up_pr_code, q_cb_res_up_market_coeff.l_1, q_cb_res_up_market_coeff.l_2, q_cb_res_up_market_coeff.l_3, q_cb_res_up_market_coeff.l_4, q_cb_res_up_market_coeff.l_5, q_cb_res_up_market_coeff.l_6, q_cb_res_up_market_coeff.r_1_code as up_rs_l1, q_cb_res_up_market_coeff.r_2_code as up_rs_l2, q_cb_res_up_market_coeff.r_3_code as up_rs_l3, q_cb_res_up_market_coeff.r_4_code as up_rs_l4, q_cb_res_up_market_coeff.g_month, q_cb_res_up_market_coeff.up_cost_coeff, q_cb_curr_escalation_rates.k_usd, q_cb_curr_escalation_rates.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6) as up_cost_coeff_all, q_cb_res_up_market_coeff.up_cost, q_cb_res_up_market_coeff.currency as rs_currency, q_cb_res_up_market_coeff.key_full, q_cb_res_up_market_coeff.an_rs_quantity, q_cb_res_up_market_coeff.key_r_pc_l6
from q_cb_res_up_market_coeff left join q_cb_curr_escalation_rates on q_cb_res_up_market_coeff.key_full_comb = q_cb_curr_escalation_rates.key_full_comb
group by q_cb_res_up_market_coeff.rep_month, q_cb_res_up_market_coeff.pc, q_cb_res_up_market_coeff.l_1, q_cb_res_up_market_coeff.l_2, q_cb_res_up_market_coeff.l_3, q_cb_res_up_market_coeff.l_4, q_cb_res_up_market_coeff.l_5, q_cb_res_up_market_coeff.l_6, q_cb_res_up_market_coeff.r_1_code, q_cb_res_up_market_coeff.r_2_code, q_cb_res_up_market_coeff.r_3_code, q_cb_res_up_market_coeff.r_4_code, q_cb_res_up_market_coeff.g_month, q_cb_res_up_market_coeff.up_cost_coeff, q_cb_curr_escalation_rates.k_usd, q_cb_curr_escalation_rates.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6), q_cb_res_up_market_coeff.up_cost, q_cb_res_up_market_coeff.currency, q_cb_res_up_market_coeff.key_full, q_cb_res_up_market_coeff.an_rs_quantity, q_cb_res_up_market_coeff.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_up_coeff_mod
select q_cb_res_up_market_coeff_mod.rep_month, q_cb_res_up_market_coeff_mod.pc as up_pr_code, q_cb_res_up_market_coeff_mod.l_1, q_cb_res_up_market_coeff_mod.l_2, q_cb_res_up_market_coeff_mod.l_3, q_cb_res_up_market_coeff_mod.l_4, q_cb_res_up_market_coeff_mod.l_5, q_cb_res_up_market_coeff_mod.l_6, q_cb_res_up_market_coeff_mod.r_1_code as up_rs_l1, q_cb_res_up_market_coeff_mod.r_2_code as up_rs_l2, q_cb_res_up_market_coeff_mod.r_3_code as up_rs_l3, q_cb_res_up_market_coeff_mod.r_4_code as up_rs_l4, q_cb_res_up_market_coeff_mod.g_month, q_cb_res_up_market_coeff_mod.up_cost_coeff, q_cb_curr_escalation_rates_mod.k_usd, q_cb_curr_escalation_rates_mod.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6) as up_cost_coeff_all, q_cb_res_up_market_coeff_mod.up_cost, q_cb_res_up_market_coeff_mod.currency as rs_currency, q_cb_res_up_market_coeff_mod.key_full, q_cb_res_up_market_coeff_mod.an_rs_quantity, q_cb_res_up_market_coeff_mod.key_r_pc_l6
from q_cb_res_up_market_coeff_mod left join q_cb_curr_escalation_rates_mod on q_cb_res_up_market_coeff_mod.key_full_comb = q_cb_curr_escalation_rates_mod.key_full_comb
group by q_cb_res_up_market_coeff_mod.rep_month, q_cb_res_up_market_coeff_mod.pc, q_cb_res_up_market_coeff_mod.l_1, q_cb_res_up_market_coeff_mod.l_2, q_cb_res_up_market_coeff_mod.l_3, q_cb_res_up_market_coeff_mod.l_4, q_cb_res_up_market_coeff_mod.l_5, q_cb_res_up_market_coeff_mod.l_6, q_cb_res_up_market_coeff_mod.r_1_code, q_cb_res_up_market_coeff_mod.r_2_code, q_cb_res_up_market_coeff_mod.r_3_code, q_cb_res_up_market_coeff_mod.r_4_code, q_cb_res_up_market_coeff_mod.g_month, q_cb_res_up_market_coeff_mod.up_cost_coeff, q_cb_curr_escalation_rates_mod.k_usd, q_cb_curr_escalation_rates_mod.k_eur, round([up_cost_coeff]*[k_usd]*[k_eur],6), q_cb_res_up_market_coeff_mod.up_cost, q_cb_res_up_market_coeff_mod.currency, q_cb_res_up_market_coeff_mod.key_full, q_cb_res_up_market_coeff_mod.an_rs_quantity, q_cb_res_up_market_coeff_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_cb_up_pre_coeff_activem_indexes
select q_cb_analysis_activem_with_prices.rep_month, q_cb_analysis_activem_with_prices.pc, q_cb_analysis_activem_with_prices.l_1, q_cb_analysis_activem_with_prices.l_2, q_cb_analysis_activem_with_prices.l_3, q_cb_analysis_activem_with_prices.l_4, q_cb_analysis_activem_with_prices.l_5, q_cb_analysis_activem_with_prices.l_6, q_cb_analysis_activem_with_prices.exp_cb_mon, q_cb_analysis_activem_with_prices.rs_l1, q_cb_analysis_activem_with_prices.rs_l2, q_cb_analysis_activem_with_prices.rs_l3, q_cb_analysis_activem_with_prices.rs_l4, t_cb_indexes.bb_ufe, t_cb_indexes.bb_tufe, t_cb_indexes.bb_inf_usd, t_cb_indexes.bb_inf_eur, t_cb_indexes.bb_metal, t_cb_indexes.bb_petrol, t_cb_indexes.bb_cement, t_cb_indexes.bb_electricity, q_cb_analysis_activem_with_prices.currency as rs_currency, q_cb_analysis_activem_with_prices.an_rs_quantity, q_cb_analysis_activem_with_prices.up_cost, q_cb_analysis_activem_with_prices.key_r4_simple, q_cb_analysis_activem_with_prices.key_r4, q_cb_analysis_activem_with_prices.key_r_pc_l6, q_cb_analysis_activem_with_prices.key_full
from q_cb_analysis_activem_with_prices left join t_cb_indexes on (q_cb_analysis_activem_with_prices.rep_month = t_cb_indexes.rep_month) and (q_cb_analysis_activem_with_prices.exp_cb_mon = t_cb_indexes.g_month);

----------------------------------------------------------------------------------------------------
q_cb_up_pre_coeff_activem_indexes_mod
select q_cb_analysis_activem_with_prices_mod.rep_month, q_cb_analysis_activem_with_prices_mod.pc, q_cb_analysis_activem_with_prices_mod.l_1, q_cb_analysis_activem_with_prices_mod.l_2, q_cb_analysis_activem_with_prices_mod.l_3, q_cb_analysis_activem_with_prices_mod.l_4, q_cb_analysis_activem_with_prices_mod.l_5, q_cb_analysis_activem_with_prices_mod.l_6, q_cb_analysis_activem_with_prices_mod.exp_cb_mon, q_cb_analysis_activem_with_prices_mod.rs_l1, q_cb_analysis_activem_with_prices_mod.rs_l2, q_cb_analysis_activem_with_prices_mod.rs_l3, q_cb_analysis_activem_with_prices_mod.rs_l4, t_ac_indexes_mod.bb_ufe, t_ac_indexes_mod.bb_tufe, t_ac_indexes_mod.bb_inf_usd, t_ac_indexes_mod.bb_inf_eur, t_ac_indexes_mod.bb_metal, t_ac_indexes_mod.bb_petrol, t_ac_indexes_mod.bb_cement, t_ac_indexes_mod.bb_electricity, q_cb_analysis_activem_with_prices_mod.currency as rs_currency, q_cb_analysis_activem_with_prices_mod.an_rs_quantity, q_cb_analysis_activem_with_prices_mod.up_cost, q_cb_analysis_activem_with_prices_mod.key_r4_simple, q_cb_analysis_activem_with_prices_mod.key_r4, q_cb_analysis_activem_with_prices_mod.key_r_pc_l6, q_cb_analysis_activem_with_prices_mod.key_full
from q_cb_analysis_activem_with_prices_mod left join t_ac_indexes_mod on (q_cb_analysis_activem_with_prices_mod.rep_month = t_ac_indexes_mod.rep_month) and (q_cb_analysis_activem_with_prices_mod.exp_cb_mon = t_ac_indexes_mod.g_month);

----------------------------------------------------------------------------------------------------
q_cb_up_with_curr_coeff_crosstab
transform sum(q_cb_work_up_with_curr_coeff.up) as sumofup
select q_cb_work_up_with_curr_coeff.rep_month, q_cb_work_up_with_curr_coeff.pc, q_cb_work_up_with_curr_coeff.l_1, q_cb_work_up_with_curr_coeff.l_2, q_cb_work_up_with_curr_coeff.l_3, q_cb_work_up_with_curr_coeff.l_4, q_cb_work_up_with_curr_coeff.l_5, q_cb_work_up_with_curr_coeff.l_6, q_cb_work_up_with_curr_coeff.rs_currency
from q_cb_work_up_with_curr_coeff
group by q_cb_work_up_with_curr_coeff.rep_month, q_cb_work_up_with_curr_coeff.pc, q_cb_work_up_with_curr_coeff.l_1, q_cb_work_up_with_curr_coeff.l_2, q_cb_work_up_with_curr_coeff.l_3, q_cb_work_up_with_curr_coeff.l_4, q_cb_work_up_with_curr_coeff.l_5, q_cb_work_up_with_curr_coeff.l_6, q_cb_work_up_with_curr_coeff.rs_currency
order by q_cb_work_up_with_curr_coeff.rep_month, q_cb_work_up_with_curr_coeff.pc, q_cb_work_up_with_curr_coeff.l_1, q_cb_work_up_with_curr_coeff.l_2, q_cb_work_up_with_curr_coeff.l_3, q_cb_work_up_with_curr_coeff.l_4, q_cb_work_up_with_curr_coeff.l_5, q_cb_work_up_with_curr_coeff.l_6, q_cb_work_up_with_curr_coeff.month
pivot q_cb_work_up_with_curr_coeff.month;

----------------------------------------------------------------------------------------------------
q_cb_up_with_curr_coeff_crosstab_mod
transform sum(q_cb_work_up_with_curr_coeff_mod.up) as sumofup
select q_cb_work_up_with_curr_coeff_mod.rep_month as expr1, q_cb_work_up_with_curr_coeff_mod.pc as expr2, q_cb_work_up_with_curr_coeff_mod.l_1 as expr3, q_cb_work_up_with_curr_coeff_mod.l_2 as expr4, q_cb_work_up_with_curr_coeff_mod.l_3 as expr5, q_cb_work_up_with_curr_coeff_mod.l_4 as expr6, q_cb_work_up_with_curr_coeff_mod.l_5 as expr7, q_cb_work_up_with_curr_coeff_mod.l_6 as expr8, q_cb_work_up_with_curr_coeff_mod.rs_currency as expr9
from q_cb_work_up_with_curr_coeff_mod
group by q_cb_work_up_with_curr_coeff_mod.rep_month, q_cb_work_up_with_curr_coeff_mod.pc, q_cb_work_up_with_curr_coeff_mod.l_1, q_cb_work_up_with_curr_coeff_mod.l_2, q_cb_work_up_with_curr_coeff_mod.l_3, q_cb_work_up_with_curr_coeff_mod.l_4, q_cb_work_up_with_curr_coeff_mod.l_5, q_cb_work_up_with_curr_coeff_mod.l_6, q_cb_work_up_with_curr_coeff_mod.rs_currency
order by q_cb_work_up_with_curr_coeff_mod.rep_month, q_cb_work_up_with_curr_coeff_mod.pc, q_cb_work_up_with_curr_coeff_mod.l_1, q_cb_work_up_with_curr_coeff_mod.l_2, q_cb_work_up_with_curr_coeff_mod.l_3, q_cb_work_up_with_curr_coeff_mod.l_4, q_cb_work_up_with_curr_coeff_mod.l_5, q_cb_work_up_with_curr_coeff_mod.l_6, q_cb_work_up_with_curr_coeff_mod.month
pivot q_cb_work_up_with_curr_coeff_mod.month;

----------------------------------------------------------------------------------------------------
q_cb_up_with_market_coeff_crosstab
transform sum(q_cb_work_up_with_market_coeff.up_with_coeff) as sumofup_with_coeff
select q_cb_work_up_with_market_coeff.rep_month, q_cb_work_up_with_market_coeff.pc, q_cb_work_up_with_market_coeff.l_1, q_cb_work_up_with_market_coeff.l_2, q_cb_work_up_with_market_coeff.l_3, q_cb_work_up_with_market_coeff.l_4, q_cb_work_up_with_market_coeff.l_5, q_cb_work_up_with_market_coeff.l_6, q_cb_work_up_with_market_coeff.currency
from q_cb_work_up_with_market_coeff
group by q_cb_work_up_with_market_coeff.rep_month, q_cb_work_up_with_market_coeff.pc, q_cb_work_up_with_market_coeff.l_1, q_cb_work_up_with_market_coeff.l_2, q_cb_work_up_with_market_coeff.l_3, q_cb_work_up_with_market_coeff.l_4, q_cb_work_up_with_market_coeff.l_5, q_cb_work_up_with_market_coeff.l_6, q_cb_work_up_with_market_coeff.currency
pivot q_cb_work_up_with_market_coeff.g_month;

----------------------------------------------------------------------------------------------------
q_cb_up_with_market_coeff_crosstab_mod
transform sum(q_cb_work_up_with_market_coeff_mod.up_with_coeff) as sumofup_with_coeff
select q_cb_work_up_with_market_coeff_mod.rep_month, q_cb_work_up_with_market_coeff_mod.pc, q_cb_work_up_with_market_coeff_mod.l_1, q_cb_work_up_with_market_coeff_mod.l_2, q_cb_work_up_with_market_coeff_mod.l_3, q_cb_work_up_with_market_coeff_mod.l_4, q_cb_work_up_with_market_coeff_mod.l_5, q_cb_work_up_with_market_coeff_mod.l_6, q_cb_work_up_with_market_coeff_mod.currency
from q_cb_work_up_with_market_coeff_mod
group by q_cb_work_up_with_market_coeff_mod.rep_month, q_cb_work_up_with_market_coeff_mod.pc, q_cb_work_up_with_market_coeff_mod.l_1, q_cb_work_up_with_market_coeff_mod.l_2, q_cb_work_up_with_market_coeff_mod.l_3, q_cb_work_up_with_market_coeff_mod.l_4, q_cb_work_up_with_market_coeff_mod.l_5, q_cb_work_up_with_market_coeff_mod.l_6, q_cb_work_up_with_market_coeff_mod.currency
pivot q_cb_work_up_with_market_coeff_mod.g_month;

----------------------------------------------------------------------------------------------------
q_cb_up_without_coeff_crosstab
transform sum(q_cb_work_up_without_coeff.unit_price_planned) as sumofunit_price_planned
select q_cb_work_up_without_coeff.rep_month, q_cb_work_up_without_coeff.pc, q_cb_work_up_without_coeff.l_1, q_cb_work_up_without_coeff.l_2, q_cb_work_up_without_coeff.l_3, q_cb_work_up_without_coeff.l_4, q_cb_work_up_without_coeff.l_5, q_cb_work_up_without_coeff.l_6, q_cb_work_up_without_coeff.rs_currency
from q_cb_work_up_without_coeff
group by q_cb_work_up_without_coeff.rep_month, q_cb_work_up_without_coeff.pc, q_cb_work_up_without_coeff.l_1, q_cb_work_up_without_coeff.l_2, q_cb_work_up_without_coeff.l_3, q_cb_work_up_without_coeff.l_4, q_cb_work_up_without_coeff.l_5, q_cb_work_up_without_coeff.l_6, q_cb_work_up_without_coeff.rs_currency
pivot q_cb_work_up_without_coeff.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_up_without_coeff_crosstab_mod
transform sum(q_cb_work_up_without_coeff_mod.unit_price_planned) as sumofunit_price_planned
select q_cb_work_up_without_coeff_mod.rep_month, q_cb_work_up_without_coeff_mod.pc, q_cb_work_up_without_coeff_mod.l_1, q_cb_work_up_without_coeff_mod.l_2, q_cb_work_up_without_coeff_mod.l_3, q_cb_work_up_without_coeff_mod.l_4, q_cb_work_up_without_coeff_mod.l_5, q_cb_work_up_without_coeff_mod.l_6, q_cb_work_up_without_coeff_mod.rs_currency
from q_cb_work_up_without_coeff_mod
group by q_cb_work_up_without_coeff_mod.rep_month, q_cb_work_up_without_coeff_mod.pc, q_cb_work_up_without_coeff_mod.l_1, q_cb_work_up_without_coeff_mod.l_2, q_cb_work_up_without_coeff_mod.l_3, q_cb_work_up_without_coeff_mod.l_4, q_cb_work_up_without_coeff_mod.l_5, q_cb_work_up_without_coeff_mod.l_6, q_cb_work_up_without_coeff_mod.rs_currency
pivot q_cb_work_up_without_coeff_mod.exp_cb_mon;

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_curr_coeff
select q_cb_analysis_activem_with_prices.rep_month, q_cb_analysis_activem_with_prices.pc, q_cb_analysis_activem_with_prices.l_1, q_cb_analysis_activem_with_prices.l_2, q_cb_analysis_activem_with_prices.l_3, q_cb_analysis_activem_with_prices.l_4, q_cb_analysis_activem_with_prices.l_5, q_cb_analysis_activem_with_prices.l_6, q_cb_analysis_activem_with_prices.exp_cb_mon as [month], sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]) as up, q_cb_curr_escalation_rates.rs_currency
from q_cb_analysis_activem_with_prices left join q_cb_curr_escalation_rates on (q_cb_analysis_activem_with_prices.exp_cb_mon = q_cb_curr_escalation_rates.month) and (q_cb_analysis_activem_with_prices.currency = q_cb_curr_escalation_rates.rs_currency) and (q_cb_analysis_activem_with_prices.rs_l4 = q_cb_curr_escalation_rates.rs_l4) and (q_cb_analysis_activem_with_prices.rs_l3 = q_cb_curr_escalation_rates.rs_l3) and (q_cb_analysis_activem_with_prices.rs_l2 = q_cb_curr_escalation_rates.rs_l2) and (q_cb_analysis_activem_with_prices.rs_l1 = q_cb_curr_escalation_rates.rs_l1) and (q_cb_analysis_activem_with_prices.l_6 = q_cb_curr_escalation_rates.l_6) and (q_cb_analysis_activem_with_prices.l_5 = q_cb_curr_escalation_rates.l_5) and (q_cb_analysis_activem_with_prices.l_4 = q_cb_curr_escalation_rates.l_4) and (q_cb_analysis_activem_with_prices.l_3 = q_cb_curr_escalation_rates.l_3) and (q_cb_analysis_activem_with_prices.l_2 = q_cb_curr_escalation_rates.l_2) and (q_cb_analysis_activem_with_prices.l_1 = q_cb_curr_escalation_rates.l_1) and (q_cb_analysis_activem_with_prices.pc = q_cb_curr_escalation_rates.pc) and (q_cb_analysis_activem_with_prices.rep_month = q_cb_curr_escalation_rates.rep_month)
group by q_cb_analysis_activem_with_prices.rep_month, q_cb_analysis_activem_with_prices.pc, q_cb_analysis_activem_with_prices.l_1, q_cb_analysis_activem_with_prices.l_2, q_cb_analysis_activem_with_prices.l_3, q_cb_analysis_activem_with_prices.l_4, q_cb_analysis_activem_with_prices.l_5, q_cb_analysis_activem_with_prices.l_6, q_cb_analysis_activem_with_prices.exp_cb_mon, q_cb_curr_escalation_rates.rs_currency
order by q_cb_analysis_activem_with_prices.rep_month, q_cb_analysis_activem_with_prices.pc, q_cb_analysis_activem_with_prices.l_1, q_cb_analysis_activem_with_prices.l_2, q_cb_analysis_activem_with_prices.l_3, q_cb_analysis_activem_with_prices.l_4, q_cb_analysis_activem_with_prices.l_5, q_cb_analysis_activem_with_prices.l_6, q_cb_analysis_activem_with_prices.exp_cb_mon, sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]);

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_curr_coeff_diff
select q_cb_work_up_with_curr_coeff_mod.rep_month, q_cb_work_up_with_curr_coeff_mod.pc, q_cb_work_up_with_curr_coeff_mod.l_1, q_cb_work_up_with_curr_coeff_mod.l_2, q_cb_work_up_with_curr_coeff_mod.l_3, q_cb_work_up_with_curr_coeff_mod.l_4, q_cb_work_up_with_curr_coeff_mod.l_5, q_cb_work_up_with_curr_coeff_mod.l_6, q_cb_work_up_with_curr_coeff_mod.rs_currency, q_cb_work_up_with_curr_coeff_mod.month, q_cb_work_up_with_curr_coeff.up as up_orj, q_cb_work_up_with_curr_coeff_mod.up as up_mod, ([up_orj])-([up_mod]) as diff
from q_cb_work_up_with_curr_coeff_mod left join q_cb_work_up_with_curr_coeff on (q_cb_work_up_with_curr_coeff_mod.rep_month = q_cb_work_up_with_curr_coeff.rep_month) and (q_cb_work_up_with_curr_coeff_mod.pc = q_cb_work_up_with_curr_coeff.pc) and (q_cb_work_up_with_curr_coeff_mod.l_1 = q_cb_work_up_with_curr_coeff.l_1) and (q_cb_work_up_with_curr_coeff_mod.l_2 = q_cb_work_up_with_curr_coeff.l_2) and (q_cb_work_up_with_curr_coeff_mod.l_3 = q_cb_work_up_with_curr_coeff.l_3) and (q_cb_work_up_with_curr_coeff_mod.l_4 = q_cb_work_up_with_curr_coeff.l_4) and (q_cb_work_up_with_curr_coeff_mod.l_5 = q_cb_work_up_with_curr_coeff.l_5) and (q_cb_work_up_with_curr_coeff_mod.l_6 = q_cb_work_up_with_curr_coeff.l_6) and (q_cb_work_up_with_curr_coeff_mod.month = q_cb_work_up_with_curr_coeff.month) and (q_cb_work_up_with_curr_coeff_mod.rs_currency = q_cb_work_up_with_curr_coeff.rs_currency);

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_curr_coeff_mod
select q_cb_analysis_activem_with_prices_mod.rep_month, q_cb_analysis_activem_with_prices_mod.pc, q_cb_analysis_activem_with_prices_mod.l_1, q_cb_analysis_activem_with_prices_mod.l_2, q_cb_analysis_activem_with_prices_mod.l_3, q_cb_analysis_activem_with_prices_mod.l_4, q_cb_analysis_activem_with_prices_mod.l_5, q_cb_analysis_activem_with_prices_mod.l_6, q_cb_analysis_activem_with_prices_mod.exp_cb_mon as [month], sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]) as up, q_cb_curr_escalation_rates_mod.rs_currency
from q_cb_analysis_activem_with_prices_mod left join q_cb_curr_escalation_rates_mod on (q_cb_analysis_activem_with_prices_mod.exp_cb_mon = q_cb_curr_escalation_rates_mod.month) and (q_cb_analysis_activem_with_prices_mod.rs_currency = q_cb_curr_escalation_rates_mod.rs_currency) and (q_cb_analysis_activem_with_prices_mod.rs_l4 = q_cb_curr_escalation_rates_mod.rs_l4) and (q_cb_analysis_activem_with_prices_mod.rs_l3 = q_cb_curr_escalation_rates_mod.rs_l3) and (q_cb_analysis_activem_with_prices_mod.rs_l2 = q_cb_curr_escalation_rates_mod.rs_l2) and (q_cb_analysis_activem_with_prices_mod.rs_l1 = q_cb_curr_escalation_rates_mod.rs_l1) and (q_cb_analysis_activem_with_prices_mod.l_6 = q_cb_curr_escalation_rates_mod.l_6) and (q_cb_analysis_activem_with_prices_mod.l_5 = q_cb_curr_escalation_rates_mod.l_5) and (q_cb_analysis_activem_with_prices_mod.l_4 = q_cb_curr_escalation_rates_mod.l_4) and (q_cb_analysis_activem_with_prices_mod.l_3 = q_cb_curr_escalation_rates_mod.l_3) and (q_cb_analysis_activem_with_prices_mod.l_2 = q_cb_curr_escalation_rates_mod.l_2) and (q_cb_analysis_activem_with_prices_mod.l_1 = q_cb_curr_escalation_rates_mod.l_1) and (q_cb_analysis_activem_with_prices_mod.pc = q_cb_curr_escalation_rates_mod.pc) and (q_cb_analysis_activem_with_prices_mod.rep_month = q_cb_curr_escalation_rates_mod.rep_month)
group by q_cb_analysis_activem_with_prices_mod.rep_month, q_cb_analysis_activem_with_prices_mod.pc, q_cb_analysis_activem_with_prices_mod.l_1, q_cb_analysis_activem_with_prices_mod.l_2, q_cb_analysis_activem_with_prices_mod.l_3, q_cb_analysis_activem_with_prices_mod.l_4, q_cb_analysis_activem_with_prices_mod.l_5, q_cb_analysis_activem_with_prices_mod.l_6, q_cb_analysis_activem_with_prices_mod.exp_cb_mon, q_cb_curr_escalation_rates_mod.rs_currency
order by q_cb_analysis_activem_with_prices_mod.rep_month, q_cb_analysis_activem_with_prices_mod.pc, q_cb_analysis_activem_with_prices_mod.l_1, q_cb_analysis_activem_with_prices_mod.l_2, q_cb_analysis_activem_with_prices_mod.l_3, q_cb_analysis_activem_with_prices_mod.l_4, q_cb_analysis_activem_with_prices_mod.l_5, q_cb_analysis_activem_with_prices_mod.l_6, q_cb_analysis_activem_with_prices_mod.exp_cb_mon, sum([an_rs_quantity]*[up_cost]*[k_usd]*[k_eur]);

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_market_coeff
select q_cb_res_up_market_coeff.pc, q_cb_res_up_market_coeff.l_1, q_cb_res_up_market_coeff.l_2, q_cb_res_up_market_coeff.l_3, q_cb_res_up_market_coeff.l_4, q_cb_res_up_market_coeff.l_5, q_cb_res_up_market_coeff.l_6, q_cb_res_up_market_coeff.rep_month, q_cb_res_up_market_coeff.g_month, sum([an_rs_quantity]*[up_cost]*[up_cost_coeff]) as up_with_coeff, q_cb_res_up_market_coeff.currency
from q_cb_res_up_market_coeff
group by q_cb_res_up_market_coeff.pc, q_cb_res_up_market_coeff.l_1, q_cb_res_up_market_coeff.l_2, q_cb_res_up_market_coeff.l_3, q_cb_res_up_market_coeff.l_4, q_cb_res_up_market_coeff.l_5, q_cb_res_up_market_coeff.l_6, q_cb_res_up_market_coeff.rep_month, q_cb_res_up_market_coeff.g_month, q_cb_res_up_market_coeff.currency;

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_market_coeff_diff
select q_cb_work_up_with_market_coeff_mod.rep_month, q_cb_work_up_with_market_coeff_mod.pc, q_cb_work_up_with_market_coeff_mod.l_1, q_cb_work_up_with_market_coeff_mod.l_2, q_cb_work_up_with_market_coeff_mod.l_3, q_cb_work_up_with_market_coeff_mod.l_4, q_cb_work_up_with_market_coeff_mod.l_5, q_cb_work_up_with_market_coeff_mod.l_6, q_cb_work_up_with_market_coeff_mod.currency, q_cb_work_up_with_market_coeff_mod.g_month, q_cb_work_up_with_market_coeff.up_with_coeff as up_orj, q_cb_work_up_with_market_coeff.up_with_coeff as up_mod, ([up_orj])-([up_mod]) as diff
from q_cb_work_up_with_market_coeff_mod left join q_cb_work_up_with_market_coeff on (q_cb_work_up_with_market_coeff_mod.rep_month = q_cb_work_up_with_market_coeff.rep_month) and (q_cb_work_up_with_market_coeff_mod.pc = q_cb_work_up_with_market_coeff.pc) and (q_cb_work_up_with_market_coeff_mod.l_1 = q_cb_work_up_with_market_coeff.l_1) and (q_cb_work_up_with_market_coeff_mod.l_2 = q_cb_work_up_with_market_coeff.l_2) and (q_cb_work_up_with_market_coeff_mod.l_3 = q_cb_work_up_with_market_coeff.l_3) and (q_cb_work_up_with_market_coeff_mod.l_4 = q_cb_work_up_with_market_coeff.l_4) and (q_cb_work_up_with_market_coeff_mod.l_5 = q_cb_work_up_with_market_coeff.l_5) and (q_cb_work_up_with_market_coeff_mod.l_6 = q_cb_work_up_with_market_coeff.l_6) and (q_cb_work_up_with_market_coeff_mod.currency = q_cb_work_up_with_market_coeff.currency) and (q_cb_work_up_with_market_coeff_mod.g_month = q_cb_work_up_with_market_coeff.g_month);

----------------------------------------------------------------------------------------------------
q_cb_work_up_with_market_coeff_mod
select q_cb_res_up_market_coeff_mod.pc as expr1, q_cb_res_up_market_coeff_mod.l_1 as expr2, q_cb_res_up_market_coeff_mod.l_2 as expr3, q_cb_res_up_market_coeff_mod.l_3 as expr4, q_cb_res_up_market_coeff_mod.l_4 as expr5, q_cb_res_up_market_coeff_mod.l_5 as expr6, q_cb_res_up_market_coeff_mod.l_6 as expr7, q_cb_res_up_market_coeff_mod.rep_month as expr8, q_cb_res_up_market_coeff_mod.g_month as expr9, sum([an_rs_quantity]*[up_cost]*[up_cost_coeff]) as up_with_coeff, q_cb_res_up_market_coeff_mod.currency as expr10
from q_cb_res_up_market_coeff_mod
group by q_cb_res_up_market_coeff_mod.pc, q_cb_res_up_market_coeff_mod.l_1, q_cb_res_up_market_coeff_mod.l_2, q_cb_res_up_market_coeff_mod.l_3, q_cb_res_up_market_coeff_mod.l_4, q_cb_res_up_market_coeff_mod.l_5, q_cb_res_up_market_coeff_mod.l_6, q_cb_res_up_market_coeff_mod.rep_month, q_cb_res_up_market_coeff_mod.g_month, q_cb_res_up_market_coeff_mod.currency;

----------------------------------------------------------------------------------------------------
q_cb_work_up_without_coeff
select sum(([an_rs_quantity]*[up_cost])) as unit_price_planned, q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes.rs_currency
from q_cb_up_pre_coeff_activem_indexes
group by q_cb_up_pre_coeff_activem_indexes.rep_month, q_cb_up_pre_coeff_activem_indexes.pc, q_cb_up_pre_coeff_activem_indexes.l_1, q_cb_up_pre_coeff_activem_indexes.l_2, q_cb_up_pre_coeff_activem_indexes.l_3, q_cb_up_pre_coeff_activem_indexes.l_4, q_cb_up_pre_coeff_activem_indexes.l_5, q_cb_up_pre_coeff_activem_indexes.l_6, q_cb_up_pre_coeff_activem_indexes.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes.rs_currency;

----------------------------------------------------------------------------------------------------
q_cb_work_up_without_coeff_diff
select q_cb_work_up_without_coeff_mod.rep_month, q_cb_work_up_without_coeff_mod.pc, q_cb_work_up_without_coeff_mod.l_1, q_cb_work_up_without_coeff_mod.l_2, q_cb_work_up_without_coeff_mod.l_3, q_cb_work_up_without_coeff_mod.l_4, q_cb_work_up_without_coeff_mod.l_5, q_cb_work_up_without_coeff_mod.l_6, q_cb_work_up_without_coeff_mod.rs_currency, q_cb_work_up_without_coeff_mod.exp_cb_mon, q_cb_work_up_without_coeff.unit_price_planned as up_orj, q_cb_work_up_without_coeff.unit_price_planned as up_mod, ([up_orj])-([up_mod]) as diff
from q_cb_work_up_without_coeff_mod left join q_cb_work_up_without_coeff on (q_cb_work_up_without_coeff_mod.rep_month = q_cb_work_up_without_coeff.rep_month) and (q_cb_work_up_without_coeff_mod.pc = q_cb_work_up_without_coeff.pc) and (q_cb_work_up_without_coeff_mod.l_1 = q_cb_work_up_without_coeff.l_1) and (q_cb_work_up_without_coeff_mod.l_2 = q_cb_work_up_without_coeff.l_2) and (q_cb_work_up_without_coeff_mod.l_3 = q_cb_work_up_without_coeff.l_3) and (q_cb_work_up_without_coeff_mod.l_4 = q_cb_work_up_without_coeff.l_4) and (q_cb_work_up_without_coeff_mod.l_5 = q_cb_work_up_without_coeff.l_5) and (q_cb_work_up_without_coeff_mod.l_6 = q_cb_work_up_without_coeff.l_6) and (q_cb_work_up_without_coeff_mod.rs_currency = q_cb_work_up_without_coeff.rs_currency) and (q_cb_work_up_without_coeff_mod.exp_cb_mon = q_cb_work_up_without_coeff.exp_cb_mon);

----------------------------------------------------------------------------------------------------
q_cb_work_up_without_coeff_mod
select sum(([an_rs_quantity]*[up_cost])) as unit_price_planned, q_cb_up_pre_coeff_activem_indexes_mod.rep_month as expr1, q_cb_up_pre_coeff_activem_indexes_mod.pc as expr2, q_cb_up_pre_coeff_activem_indexes_mod.l_1 as expr3, q_cb_up_pre_coeff_activem_indexes_mod.l_2 as expr4, q_cb_up_pre_coeff_activem_indexes_mod.l_3 as expr5, q_cb_up_pre_coeff_activem_indexes_mod.l_4 as expr6, q_cb_up_pre_coeff_activem_indexes_mod.l_5 as expr7, q_cb_up_pre_coeff_activem_indexes_mod.l_6 as expr8, q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon as expr9, q_cb_up_pre_coeff_activem_indexes_mod.rs_currency as expr10
from q_cb_up_pre_coeff_activem_indexes_mod
group by q_cb_up_pre_coeff_activem_indexes_mod.rep_month, q_cb_up_pre_coeff_activem_indexes_mod.pc, q_cb_up_pre_coeff_activem_indexes_mod.l_1, q_cb_up_pre_coeff_activem_indexes_mod.l_2, q_cb_up_pre_coeff_activem_indexes_mod.l_3, q_cb_up_pre_coeff_activem_indexes_mod.l_4, q_cb_up_pre_coeff_activem_indexes_mod.l_5, q_cb_up_pre_coeff_activem_indexes_mod.l_6, q_cb_up_pre_coeff_activem_indexes_mod.exp_cb_mon, q_cb_up_pre_coeff_activem_indexes_mod.rs_currency;

----------------------------------------------------------------------------------------------------
q_date_selected
select top 1 *
from (select top 18 * from t_rnd_budget_active_dates order by t_rnd_budget_active_dates.date_active desc)  as t
order by t.t_rnd_budget_active_dates.date_active;

----------------------------------------------------------------------------------------------------
q_exp_diff_curr
select q_cb_exp.rep_month, q_cb_exp.p01_code, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.up_curr, sum([q_cb_exp].[total_expense]-[q_bb_exp].[total_expense]) as diff
from q_cb_exp left join q_bb_exp on (q_cb_exp.up_curr = q_bb_exp.up_curr) and (q_cb_exp.month = q_bb_exp.exp_base_mon) and (q_cb_exp.l_6 = q_bb_exp.l_6) and (q_cb_exp.l_5 = q_bb_exp.l_5) and (q_cb_exp.l_4 = q_bb_exp.l_4) and (q_cb_exp.l_3 = q_bb_exp.l_3) and (q_cb_exp.l_2 = q_bb_exp.l_2) and (q_cb_exp.l_1 = q_bb_exp.l_1) and (q_cb_exp.p01_code = q_bb_exp.pc) and (q_cb_exp.rep_month = q_bb_exp.rep_month)
where (((q_cb_exp.month)<=dlookup("[last_month]","[q_rep_month_max]")))
group by q_cb_exp.rep_month, q_cb_exp.p01_code, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.up_curr;

----------------------------------------------------------------------------------------------------
q_exp_diff_full
select q_cb_exp.rep_month, q_cb_exp.p01_code, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.up_curr, sum([q_cb_exp].[total_expense]-[q_bb_exp].[total_expense]) as diff
from q_cb_exp left join q_bb_exp on (q_cb_exp.up_curr = q_bb_exp.up_curr) and (q_cb_exp.month = q_bb_exp.exp_base_mon) and (q_cb_exp.l_6 = q_bb_exp.l_6) and (q_cb_exp.l_5 = q_bb_exp.l_5) and (q_cb_exp.l_4 = q_bb_exp.l_4) and (q_cb_exp.l_3 = q_bb_exp.l_3) and (q_cb_exp.l_2 = q_bb_exp.l_2) and (q_cb_exp.l_1 = q_bb_exp.l_1) and (q_cb_exp.p01_code = q_bb_exp.pc) and (q_cb_exp.rep_month = q_bb_exp.rep_month)
group by q_cb_exp.rep_month, q_cb_exp.p01_code, q_cb_exp.l_1, q_cb_exp.l_2, q_cb_exp.l_3, q_cb_exp.l_4, q_cb_exp.l_5, q_cb_exp.l_6, q_cb_exp.up_curr;

----------------------------------------------------------------------------------------------------
q_first_budget_gt
select t_cb_profit_eur_st.rep_month, t_cb_profit_eur_st.pc, t_cb_profit_eur_st.l_1, t_cb_profit_eur_st.l_2, t_cb_profit_eur_st.l_3, t_cb_profit_eur_st.l_4, t_cb_profit_eur_st.l_5, t_cb_profit_eur_st.l_6, t_cb_profit_eur_st.desc_tr_l3, t_cb_profit_eur_st.desc_tr_l2, t_cb_profit_eur_st.desc_tr_l6, t_cb_profit_eur_st.currency as up_curr, sum(t_cb_profit_eur_st.income) as incomegt, sum(t_cb_profit_eur_st.expense) as expensegt, sum(t_cb_profit_eur_st.profit) as profitgt
from t_cb_profit_eur_st
group by t_cb_profit_eur_st.rep_month, t_cb_profit_eur_st.pc, t_cb_profit_eur_st.l_1, t_cb_profit_eur_st.l_2, t_cb_profit_eur_st.l_3, t_cb_profit_eur_st.l_4, t_cb_profit_eur_st.l_5, t_cb_profit_eur_st.l_6, t_cb_profit_eur_st.desc_tr_l3, t_cb_profit_eur_st.desc_tr_l2, t_cb_profit_eur_st.desc_tr_l6, t_cb_profit_eur_st.currency
having t_cb_profit_eur_st.pc="mbe" and t_cb_profit_eur_st.rep_month="2207";

----------------------------------------------------------------------------------------------------
q_first_budget_rt
select t_cb_profit_eur_st.rep_month, t_cb_profit_eur_st.pc, t_cb_profit_eur_st.l_1, t_cb_profit_eur_st.l_2, t_cb_profit_eur_st.l_3, t_cb_profit_eur_st.l_4, t_cb_profit_eur_st.l_5, t_cb_profit_eur_st.l_6, t_cb_profit_eur_st.desc_tr_l3, t_cb_profit_eur_st.desc_tr_l2, t_cb_profit_eur_st.desc_tr_l6, t_cb_profit_eur_st.currency as up_curr, sum(t_cb_profit_eur_st.income) as incomert, sum(t_cb_profit_eur_st.expense) as expensert, sum(t_cb_profit_eur_st.profit) as profitrt
from t_cb_profit_eur_st
group by t_cb_profit_eur_st.rep_month, t_cb_profit_eur_st.pc, t_cb_profit_eur_st.l_1, t_cb_profit_eur_st.l_2, t_cb_profit_eur_st.l_3, t_cb_profit_eur_st.l_4, t_cb_profit_eur_st.l_5, t_cb_profit_eur_st.l_6, t_cb_profit_eur_st.desc_tr_l3, t_cb_profit_eur_st.desc_tr_l2, t_cb_profit_eur_st.desc_tr_l6, t_cb_profit_eur_st.currency, t_cb_profit_eur_st.month
having t_cb_profit_eur_st.pc="mbe" and t_cb_profit_eur_st.rep_month="2207"and t_cb_profit_eur_st.month<=[forms]![comparison_screen]![cmb_project_curr_month];

----------------------------------------------------------------------------------------------------
q_first_budget_rt_grouped
select q_first_budget_rt.rep_month, q_first_budget_rt.l_1, q_first_budget_rt.l_2, q_first_budget_rt.l_3, q_first_budget_rt.l_4, q_first_budget_rt.l_5, q_first_budget_rt.l_6, q_first_budget_rt.desc_tr_l3, q_first_budget_rt.desc_tr_l2, q_first_budget_rt.desc_tr_l6, q_first_budget_rt.up_curr, sum(q_first_budget_rt.incomert) as incomert, sum(q_first_budget_rt.expensert) as expensert, sum(q_first_budget_rt.profitrt) as profitrt
from q_first_budget_rt
group by q_first_budget_rt.rep_month, q_first_budget_rt.l_1, q_first_budget_rt.l_2, q_first_budget_rt.l_3, q_first_budget_rt.l_4, q_first_budget_rt.l_5, q_first_budget_rt.l_6, q_first_budget_rt.desc_tr_l3, q_first_budget_rt.desc_tr_l2, q_first_budget_rt.desc_tr_l6, q_first_budget_rt.up_curr;

----------------------------------------------------------------------------------------------------
q_first_budget_rt_grouped_projects
select q_first_budget_rt.rep_month, q_first_budget_rt.pc, q_first_budget_rt.l_1, q_first_budget_rt.l_2, q_first_budget_rt.l_3, q_first_budget_rt.l_4, q_first_budget_rt.l_5, q_first_budget_rt.l_6, q_first_budget_rt.desc_tr_l3, q_first_budget_rt.desc_tr_l2, q_first_budget_rt.desc_tr_l6, q_first_budget_rt.up_curr, sum(q_first_budget_rt.incomert) as incomert, sum(q_first_budget_rt.expensert) as expensert, sum(q_first_budget_rt.profitrt) as profitrt
from q_first_budget_rt
group by q_first_budget_rt.rep_month, q_first_budget_rt.pc, q_first_budget_rt.l_1, q_first_budget_rt.l_2, q_first_budget_rt.l_3, q_first_budget_rt.l_4, q_first_budget_rt.l_5, q_first_budget_rt.l_6, q_first_budget_rt.desc_tr_l3, q_first_budget_rt.desc_tr_l2, q_first_budget_rt.desc_tr_l6, q_first_budget_rt.up_curr;

----------------------------------------------------------------------------------------------------
q_l6_code_selection
select top 1 *
from (select top 2597 * from c6_code order by [code_l6])  as t
order by t.code_l6 desc;

----------------------------------------------------------------------------------------------------
q_l6_selected
select top 1 *
from (select top 5 * from t_rnd_budget_l6 order by t_rnd_budget_l6.l_1 desc , t_rnd_budget_l6.l_2 desc , t_rnd_budget_l6.l_3 desc , t_rnd_budget_l6.l_4 desc , t_rnd_budget_l6.l_5 desc , t_rnd_budget_l6.l_6 desc)  as t
order by t.t_rnd_budget_l6.l_1, t.t_rnd_budget_l6.l_2, t.t_rnd_budget_l6.l_3, t.t_rnd_budget_l6.l_4, t.t_rnd_budget_l6.l_5, t.t_rnd_budget_l6.l_6;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates
select
		*

	from 
		q_monthly_rates_eur_try

	

union select
		*

	from 
		q_monthly_rates_usd_try;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_ap
insert into t_monthly_curr_rates_mod ( [month], constant, rate, budget_curr, rep_month )
select q_monthly_curr_rates.month, q_monthly_curr_rates.constant, q_monthly_curr_rates.rate, q_monthly_curr_rates.budget_curr, q_monthly_curr_rates.rep_month
from q_monthly_curr_rates
where (((q_monthly_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_diff
select q_monthly_curr_rates_mod_crosstab.month, ([q_monthly_curr_rates_mod_crosstab].r_eur_try-mon_curr_rates.r_eur_try) as eur_try, ([q_monthly_curr_rates_mod_crosstab].r_try_eur-mon_curr_rates.r_try_eur) as try_eur, ([q_monthly_curr_rates_mod_crosstab].r_usd_try-mon_curr_rates.r_usd_try) as usd_try, ([q_monthly_curr_rates_mod_crosstab].r_try_usd-mon_curr_rates.r_try_usd) as try_usd, ([q_monthly_curr_rates_mod_crosstab].r_eur_usd-mon_curr_rates.r_eur_usd) as eur_usd, ([q_monthly_curr_rates_mod_crosstab].r_usd_eur-mon_curr_rates.r_usd_eur) as usd_eur, mon_curr_rates.rep_month
from q_monthly_curr_rates_mod_crosstab inner join mon_curr_rates on q_monthly_curr_rates_mod_crosstab.month = mon_curr_rates.month
where (((mon_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_crosstab
transform sum(q_monthly_curr_rates_mod_union.rate) as sumofrate
select q_monthly_curr_rates_mod_union.month
from q_monthly_curr_rates_mod_union
group by q_monthly_curr_rates_mod_union.month
pivot q_monthly_curr_rates_mod_union.constant;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_delete
delete t_monthly_curr_rates_mod.constant, t_monthly_curr_rates_mod.budget_curr, t_monthly_curr_rates_mod.month, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_mod.rep_month, t_monthly_curr_rates_mod.rep_month
from t_monthly_curr_rates_mod;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_eur_eur
select "eur" as budget_curr, q_monthly_curr_rates_mod_try_eur.month, 1 as rate, "r_eur_eur" as constant, q_monthly_curr_rates_mod_try_usd.rep_month
from q_monthly_curr_rates_mod_try_eur left join q_monthly_curr_rates_mod_try_usd on q_monthly_curr_rates_mod_try_eur.month = q_monthly_curr_rates_mod_try_usd.month
where (((q_monthly_curr_rates_mod_try_usd.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_eur_try
select t_monthly_curr_rates_mod.budget_curr, t_monthly_curr_rates_mod.month, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_mod.constant, t_monthly_curr_rates_mod.rep_month
from t_monthly_curr_rates_mod
where (((t_monthly_curr_rates_mod.constant)="r_eur_try") and ((t_monthly_curr_rates_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_eur_try_graph
select t_monthly_curr_rates_st.constant, t_monthly_curr_rates_st.rate, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_st.budget_curr, t_monthly_curr_rates_st.month
from t_monthly_curr_rates_st inner join t_monthly_curr_rates_mod on (t_monthly_curr_rates_st.rep_month = t_monthly_curr_rates_mod.rep_month) and (t_monthly_curr_rates_st.month = t_monthly_curr_rates_mod.month) and (t_monthly_curr_rates_st.constant = t_monthly_curr_rates_mod.constant)
where (((t_monthly_curr_rates_st.constant)="r_eur_try") and ((t_monthly_curr_rates_st.month)>=#1/1/2022#));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_eur_usd
select "usd" as budget_curr, q_monthly_curr_rates_mod_eur_try.month, round([q_monthly_curr_rates_mod_eur_try].[rate]/[q_monthly_curr_rates_mod_usd_try].[rate],6) as rate, "r_eur_usd" as constant, q_monthly_curr_rates_mod_usd_try.rep_month
from q_monthly_curr_rates_mod_eur_try inner join q_monthly_curr_rates_mod_usd_try on q_monthly_curr_rates_mod_eur_try.month = q_monthly_curr_rates_mod_usd_try.month
where (((q_monthly_curr_rates_mod_usd_try.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_try_eur
select "eur" as budget_curr, q_monthly_curr_rates_mod_eur_try.month, round(1/[q_monthly_curr_rates_mod_eur_try].[rate],6) as rate, "r_try_eur" as constant, q_monthly_curr_rates_mod_eur_try.rep_month
from q_monthly_curr_rates_mod_eur_try
where (((q_monthly_curr_rates_mod_eur_try.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_try_try
select "try" as budget_curr, q_monthly_curr_rates_mod_try_eur.month, 1 as rate, "r_try_try" as constant, q_monthly_curr_rates_mod_try_usd.rep_month
from q_monthly_curr_rates_mod_try_eur left join q_monthly_curr_rates_mod_try_usd on q_monthly_curr_rates_mod_try_eur.month = q_monthly_curr_rates_mod_try_usd.month
where (((q_monthly_curr_rates_mod_try_usd.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_try_usd
select "usd" as budget_curr, q_monthly_curr_rates_mod_usd_try.month, round(1/[q_monthly_curr_rates_mod_usd_try].[rate],6) as rate, "r_try_usd" as constant, q_monthly_curr_rates_mod_usd_try.rep_month
from q_monthly_curr_rates_mod_usd_try
where (((q_monthly_curr_rates_mod_usd_try.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_union
select 
		*
	from 
q_monthly_curr_rates_mod_eur_eur
		
union 
select 
		*
	from 
		q_monthly_curr_rates_mod_eur_try

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_eur_usd


union 
select 
		*
	from 
		q_monthly_curr_rates_mod_try_eur

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_try_try

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_try_usd

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_usd_eur

union 
select 
		*
	from 
		q_monthly_curr_rates_mod_usd_try

union select 
		*
	from 
		q_monthly_curr_rates_mod_usd_usd;

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_usd_eur
select "eur" as budget_curr, q_monthly_curr_rates_mod_usd_try.month, round([q_monthly_curr_rates_mod_usd_try].[rate]/[q_monthly_curr_rates_mod_eur_try].[rate],6) as rate, "r_usd_eur" as constant, q_monthly_curr_rates_mod_eur_try.rep_month
from q_monthly_curr_rates_mod_usd_try left join q_monthly_curr_rates_mod_eur_try on q_monthly_curr_rates_mod_usd_try.month = q_monthly_curr_rates_mod_eur_try.month
where (((q_monthly_curr_rates_mod_eur_try.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_usd_try
select t_monthly_curr_rates_mod.budget_curr, t_monthly_curr_rates_mod.month, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_mod.constant, t_monthly_curr_rates_mod.rep_month
from t_monthly_curr_rates_mod
where (((t_monthly_curr_rates_mod.constant)="r_usd_try") and ((t_monthly_curr_rates_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_usd_try_graph
select t_monthly_curr_rates_st.constant, t_monthly_curr_rates_st.rate, t_monthly_curr_rates_mod.rate, t_monthly_curr_rates_st.budget_curr, t_monthly_curr_rates_st.month
from t_monthly_curr_rates_st inner join t_monthly_curr_rates_mod on (t_monthly_curr_rates_st.rep_month = t_monthly_curr_rates_mod.rep_month) and (t_monthly_curr_rates_st.month = t_monthly_curr_rates_mod.month) and (t_monthly_curr_rates_st.constant = t_monthly_curr_rates_mod.constant)
where (((t_monthly_curr_rates_st.constant)="r_usd_try") and ((t_monthly_curr_rates_st.month)>=#1/1/2022#));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mod_usd_usd
select "usd" as budget_curr, q_monthly_curr_rates_mod_try_eur.month, 1 as rate, "r_usd_usd" as constant, q_monthly_curr_rates_mod_try_usd.rep_month
from q_monthly_curr_rates_mod_try_eur left join q_monthly_curr_rates_mod_try_usd on q_monthly_curr_rates_mod_try_eur.month = q_monthly_curr_rates_mod_try_usd.month
where (((q_monthly_curr_rates_mod_try_usd.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_curr_rates_mt
select q_monthly_curr_rates.constant, q_monthly_curr_rates.budget_curr, q_monthly_curr_rates.month, q_monthly_curr_rates.rate, q_monthly_curr_rates.rep_month into t_monthly_curr_rates_st
from q_monthly_curr_rates
where (((q_monthly_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_rates_eur_try
select mon_curr_rates.month, "r_eur_try" as constant, mon_curr_rates.r_eur_try as rate, "try" as budget_curr, mon_curr_rates.rep_month
from mon_curr_rates
where (((mon_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_rates_upd_mod
update t_monthly_curr_rates_st left join t_monthly_curr_rates_mod on (t_monthly_curr_rates_st.budget_curr = t_monthly_curr_rates_mod.budget_curr) and (t_monthly_curr_rates_st.constant = t_monthly_curr_rates_mod.constant) and (t_monthly_curr_rates_st.month = t_monthly_curr_rates_mod.month) and (t_monthly_curr_rates_st.rep_month = t_monthly_curr_rates_mod.rep_month) set t_monthly_curr_rates_mod.constant = [t_monthly_curr_rates_st].[constant], t_monthly_curr_rates_mod.budget_curr = [t_monthly_curr_rates_st].[budget_curr], t_monthly_curr_rates_mod.[month] = [t_monthly_curr_rates_st].[month], t_monthly_curr_rates_mod.rate = [t_monthly_curr_rates_st].[rate], t_monthly_curr_rates_mod.rep_month = [t_monthly_curr_rates_st].[rep_month]
where (((t_monthly_curr_rates_mod.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_monthly_rates_usd_try
select mon_curr_rates.month, "r_usd_try" as constant, mon_curr_rates.r_usd_try as rate, "try" as budget_curr, mon_curr_rates.rep_month
from mon_curr_rates
where (((mon_curr_rates.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_pl_exp
select q_cb_unit_price.rep_month, q_cb_unit_price.p01_code, q_cb_unit_price.l_1, q_cb_unit_price.l_2, q_cb_unit_price.l_3, q_cb_unit_price.l_4, q_cb_unit_price.l_5, q_cb_unit_price.l_6, q_cb_unit_price.month, sum(([exp_cb_qty]*[unit_price_planned_coeff])) as total_expense, q_cb_unit_price.up_curr, t_cb_qty.key_r_pc_l6
from q_cb_unit_price left join t_cb_qty on (q_cb_unit_price.key_r_pc_l6 = t_cb_qty.key_r_pc_l6) and (q_cb_unit_price.month = t_cb_qty.exp_cb_mon)
group by q_cb_unit_price.rep_month, q_cb_unit_price.p01_code, q_cb_unit_price.l_1, q_cb_unit_price.l_2, q_cb_unit_price.l_3, q_cb_unit_price.l_4, q_cb_unit_price.l_5, q_cb_unit_price.l_6, q_cb_unit_price.month, q_cb_unit_price.up_curr, t_cb_qty.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_pl_exp_mod
select q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.p01_code, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.month, sum(([exp_cb_qty]*[unit_price_planned_coeff])) as total_expense, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.key_r_pc_l6
from q_cb_unit_price_mod left join t_cb_qty on (q_cb_unit_price_mod.key_r_pc_l6 = t_cb_qty.key_r_pc_l6) and (q_cb_unit_price_mod.g_month = t_cb_qty.exp_cb_mon)
group by q_cb_unit_price_mod.rep_month, q_cb_unit_price_mod.p01_code, q_cb_unit_price_mod.l_1, q_cb_unit_price_mod.l_2, q_cb_unit_price_mod.l_3, q_cb_unit_price_mod.l_4, q_cb_unit_price_mod.l_5, q_cb_unit_price_mod.l_6, q_cb_unit_price_mod.month, q_cb_unit_price_mod.up_curr, q_cb_unit_price_mod.key_r_pc_l6;

----------------------------------------------------------------------------------------------------
q_pl_indexes
select t_cb_indexes.rep_month, t_cb_indexes.g_month, t_cb_indexes.bb_metal, t_cb_indexes.bb_electricity, t_cb_indexes.bb_cement, t_cb_indexes.bb_petrol, t_cb_indexes.bb_inf_usd, t_cb_indexes.bb_inf_eur, t_cb_indexes.bb_ufe, t_cb_indexes.bb_tufe
from t_cb_indexes
where (((t_cb_indexes.rep_month)=dlookup("[rep_month]","[q_rep_month_max_val]")));

----------------------------------------------------------------------------------------------------
q_r4_code_pool
select r4_code.r_1_code, r4_code.r_2_code, r4_code.r_3_code, r4_code.r_4_code, r4_code.currency
from r4_code
order by r4_code.r_1_code desc , r4_code.r_2_code desc , r4_code.r_3_code desc , r4_code.r_4_code desc;

----------------------------------------------------------------------------------------------------
q_r4_code_selection
select top 1 *
from (select top 297 * from q_r4_code_pool order by r4_code.r_1_code, r4_code.r_2_code, r4_code.r_3_code, r4_code.r_4_code)  as t
order by r4_code.r_1_code desc , r4_code.r_2_code desc , r4_code.r_3_code desc , r4_code.r_4_code desc;

----------------------------------------------------------------------------------------------------
q_r4_filtered
select t_rnd_budget_r4.r_1, t_rnd_budget_r4.r_2, t_rnd_budget_r4.r_3, t_rnd_budget_r4.r_4
from t_rnd_budget_r4
group by t_rnd_budget_r4.r_1, t_rnd_budget_r4.r_2, t_rnd_budget_r4.r_3, t_rnd_budget_r4.r_4
order by t_rnd_budget_r4.r_1, t_rnd_budget_r4.r_2, t_rnd_budget_r4.r_3, t_rnd_budget_r4.r_4;

----------------------------------------------------------------------------------------------------
q_r4_selected_for_up
select top 1 *
from (select top 5 * from q_r4_filtered order by q_r4_filtered.r_1 desc , q_r4_filtered.r_2 desc , q_r4_filtered.r_3 desc , q_r4_filtered.r_4 desc)  as t
order by q_r4_filtered.r_1, q_r4_filtered.r_2, q_r4_filtered.r_3, q_r4_filtered.r_4;

----------------------------------------------------------------------------------------------------
q_rep_month_max
select max(t_rep_month.rep_month_date) as last_month
from t_rep_month;

----------------------------------------------------------------------------------------------------
q_rep_month_max_val
select max(t_rep_month.rep_month) as rep_month
from t_rep_month;

----------------------------------------------------------------------------------------------------
q_rep_month_order
select t_rep_month.rep_month, t_rep_month.rep_month_date, dcount("[rep_month]","[t_rep_month]","int([rep_month])<=" & int([rep_month])) as rownum
from t_rep_month
order by t_rep_month.rep_month desc , t_rep_month.rep_month_date desc;

----------------------------------------------------------------------------------------------------
q_second_budget_gt
select t_bb_profit_eur_st.rep_month, t_bb_profit_eur_st.pc, t_bb_profit_eur_st.l_1, t_bb_profit_eur_st.l_2, t_bb_profit_eur_st.l_3, t_bb_profit_eur_st.l_4, t_bb_profit_eur_st.l_5, t_bb_profit_eur_st.l_6, t_bb_profit_eur_st.desc_tr_l3, t_bb_profit_eur_st.desc_tr_l2, t_bb_profit_eur_st.desc_tr_l6, t_bb_profit_eur_st.currency as up_curr, sum(t_bb_profit_eur_st.income) as incomegt, sum(t_bb_profit_eur_st.expense) as expensegt, sum(t_bb_profit_eur_st.profit) as profitgt
from t_bb_profit_eur_st
group by t_bb_profit_eur_st.rep_month, t_bb_profit_eur_st.pc, t_bb_profit_eur_st.l_1, t_bb_profit_eur_st.l_2, t_bb_profit_eur_st.l_3, t_bb_profit_eur_st.l_4, t_bb_profit_eur_st.l_5, t_bb_profit_eur_st.l_6, t_bb_profit_eur_st.desc_tr_l3, t_bb_profit_eur_st.desc_tr_l2, t_bb_profit_eur_st.desc_tr_l6, t_bb_profit_eur_st.currency
having t_bb_profit_eur_st.pc="mbe" and t_bb_profit_eur_st.rep_month="2207";

----------------------------------------------------------------------------------------------------
q_second_budget_rt
select t_bb_profit_eur_st.rep_month, t_bb_profit_eur_st.pc, t_bb_profit_eur_st.l_1, t_bb_profit_eur_st.l_2, t_bb_profit_eur_st.l_3, t_bb_profit_eur_st.l_4, t_bb_profit_eur_st.l_5, t_bb_profit_eur_st.l_6, t_bb_profit_eur_st.desc_tr_l3, t_bb_profit_eur_st.desc_tr_l2, t_bb_profit_eur_st.desc_tr_l6, t_bb_profit_eur_st.currency as up_curr, sum(t_bb_profit_eur_st.income) as incomert, sum(t_bb_profit_eur_st.expense) as expensert, sum(t_bb_profit_eur_st.profit) as profitrt
from t_bb_profit_eur_st
group by t_bb_profit_eur_st.rep_month, t_bb_profit_eur_st.pc, t_bb_profit_eur_st.l_1, t_bb_profit_eur_st.l_2, t_bb_profit_eur_st.l_3, t_bb_profit_eur_st.l_4, t_bb_profit_eur_st.l_5, t_bb_profit_eur_st.l_6, t_bb_profit_eur_st.desc_tr_l3, t_bb_profit_eur_st.desc_tr_l2, t_bb_profit_eur_st.desc_tr_l6, t_bb_profit_eur_st.currency, t_bb_profit_eur_st.month
having t_bb_profit_eur_st.pc="mbe" and t_bb_profit_eur_st.rep_month="2207"and t_bb_profit_eur_st.month<=[forms]![comparison_screen]![cmb_project_curr_month];

----------------------------------------------------------------------------------------------------
q_second_budget_rt_grouped
select q_second_budget_rt.rep_month, q_second_budget_rt.l_1, q_second_budget_rt.l_2, q_second_budget_rt.l_3, q_second_budget_rt.l_4, q_second_budget_rt.l_5, q_second_budget_rt.l_6, q_second_budget_rt.desc_tr_l3, q_second_budget_rt.desc_tr_l2, q_second_budget_rt.desc_tr_l6, q_second_budget_rt.up_curr, sum(q_second_budget_rt.incomert) as incomert, sum(q_second_budget_rt.expensert) as expensert, sum(q_second_budget_rt.profitrt) as profitrt
from q_second_budget_rt
group by q_second_budget_rt.rep_month, q_second_budget_rt.l_1, q_second_budget_rt.l_2, q_second_budget_rt.l_3, q_second_budget_rt.l_4, q_second_budget_rt.l_5, q_second_budget_rt.l_6, q_second_budget_rt.desc_tr_l3, q_second_budget_rt.desc_tr_l2, q_second_budget_rt.desc_tr_l6, q_second_budget_rt.up_curr;

----------------------------------------------------------------------------------------------------
q_second_budget_rt_grouped_projects
select q_second_budget_rt.rep_month, q_second_budget_rt.pc, q_second_budget_rt.l_1, q_second_budget_rt.l_2, q_second_budget_rt.l_3, q_second_budget_rt.l_4, q_second_budget_rt.l_5, q_second_budget_rt.l_6, q_second_budget_rt.desc_tr_l3, q_second_budget_rt.desc_tr_l2, q_second_budget_rt.desc_tr_l6, q_second_budget_rt.up_curr, sum(q_second_budget_rt.incomert) as incomert, sum(q_second_budget_rt.expensert) as expensert, sum(q_second_budget_rt.profitrt) as profitrt
from q_second_budget_rt
group by q_second_budget_rt.rep_month, q_second_budget_rt.pc, q_second_budget_rt.l_1, q_second_budget_rt.l_2, q_second_budget_rt.l_3, q_second_budget_rt.l_4, q_second_budget_rt.l_5, q_second_budget_rt.l_6, q_second_budget_rt.desc_tr_l3, q_second_budget_rt.desc_tr_l2, q_second_budget_rt.desc_tr_l6, q_second_budget_rt.up_curr;

----------------------------------------------------------------------------------------------------
query1
insert into t_ac_exp ( rep_month, pc, l_1, l_2, l_3, l_4, l_5, l_6, exp_ac_mon, exp_ac_exp, up_curr, key_r_pc_l6 )
select public_t_ac_exp.rep_month, public_t_ac_exp.pc, public_t_ac_exp.l_1, public_t_ac_exp.l_2, public_t_ac_exp.l_3, public_t_ac_exp.l_4, public_t_ac_exp.l_5, public_t_ac_exp.l_6, public_t_ac_exp.exp_ac_mon, public_t_ac_exp.exp_ac_exp, public_t_ac_exp.up_curr as expr1, public_t_ac_exp.key_r_pc_l6
from public_t_ac_exp
where (((public_t_ac_exp.rep_month)=dmax("[rep_month]","[public_t_ac_exp]")) and ((public_t_ac_exp.exp_ac_exp)<>0));

----------------------------------------------------------------------------------------------------
